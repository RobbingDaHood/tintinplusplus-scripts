2024-02-12-19:29:50
2024-02-12-19:29:50                   [1;37m|[0m[1;31m~[0m  [37m|-_-|[0m   [1;37m|[0m[1;31m~[0m
2024-02-12-19:29:50                  [34m/_\[0m  [37m|[0m [1;37mB[0m [37m|[0m  [34m/_\[0m                     [1;34mWelcome to the World[0m
2024-02-12-19:29:50             [1;37m|[0m[1;31m~~[0m  [37m|[0;1;36m+[0;37m|_[0;1;36m-[0;37m|[0;1;36m-[0;37m_[0;1;36m-[0;37m|[0;1;36m-[0;37m_|[0;1;36m+[0;37m|[0m    [1;37m|[0m[1;31m~~[0m                       [1;34mof[0m
2024-02-12-19:29:50[1;30m/\[0m          [34m/ \[0m   [37m| |         | |[0m   [34m/ \[0m       [1;30m______[0m       [1;37mLo[0;1;36mst[0;1;34m So[0;1;36mul[0;1;37ms[0m
2024-02-12-19:29:50   [1;30m\_[0m      [34m/___\[0m  [37m| |[0m[1;37m [0;1;36m#[0;1;37m  [0;1;36m#[0;1;37m  [0;1;36m#[0;1;37m [0m[37m| |[0m  [34m/___\[0m    [1;30m_/[0m
2024-02-12-19:29:50     [1;30m\[0m     [37m| [0m[1;36m#[0m[37m |_[0;1;36m-[0;37m|[0;1;36m-[0;37m_[0;1;36m-[0;37m_[0;1;36m-[0;37m_[0;1;36m-[0;37m_[0;1;36m-[0;37m_[0;1;36m-[0;37m_[0;1;36m-[0;37m|[0;1;36m-[0;37m_| [0m[1;36m#[0m[37m |[0m[1;30m---/[0m
2024-02-12-19:29:50       [1;30m\---[0m[37m|   |     [0m[1;37mo o [0m[37m_[0m[1;37m o o[0m[37m     |   |[0m            
2024-02-12-19:29:50           [37m| [0m[1;36m#[0;1;37m [0m[37m| [0m[1;36m#[0;1;37m [0;1;36m#[0;1;37m [0m[37m ___[0m[1;36m$[0m[37m___  [0m[1;36m#[0;1;37m [0;1;36m#[0;1;37m [0m[37m| [0m[1;36m#[0;1;37m [0m[37m|[0m             
2024-02-12-19:29:50   [32mw[0m    [32mw[0m  [37m|   |      -------      |   |[0m   [32mw[0m    [32mw[0m     
2024-02-12-19:29:50    [32mw[0m [1;32m___[0m[1;34m~~[0m[37m| [0m[1;37m|[0m[37m | [0m[1;37m||    [0;1;36m#HHH#[0;1;37m    || [0m[37m| [0m[1;37m|[0m[37m |[0m[1;34m~~[0m[1;32m___[0m  [32mw[0m   [32mw[0m 
2024-02-12-19:29:50[1;32m___```[0m  [1;34m~ ~[0m[37m|___|_______[0m[1;36m#[0;1;37m   [0;1;36m#[0m[37m_______|___|[0m [1;34m~[0m   [1;32m'''___[0m 
2024-02-12-19:29:50[1;34m        ~  ~   ~~   ~ [0m[33m///|\\\[0m[1;34m ~   ~~  ~  ~[0m             
2024-02-12-19:29:50         [1;34m~~  ~   ~   [0m[33m///|||\\\[0m[1;34m ~  ~~  ~[0m              
2024-02-12-19:29:50
2024-02-12-19:29:50    There are currently 10 atmai online.
2024-02-12-19:29:50
2024-02-12-19:29:50    If you are new to Lost Souls, simply type 'new' as your name. 
2024-02-12-19:29:50
2024-02-12-19:29:50[1;37mName[0m: [1;37mPassword[0m: 
2024-02-12-19:29:50
2024-02-12-19:29:50    You last logged in at Sun Feb 11 14:46:22 2024 from 169.150.218.83#85.191.191.7.
2024-02-12-19:29:50
2024-02-12-19:29:50                          [1;34m[ [0;1;37mLost Souls Atman Menu[0;1;34m ][0m
2024-02-12-19:29:50[1;34m[[0;1;37m1[0;1;34m] Incarnate as Robbingdahood[0m         [1;34m[[0;1;37mA[0;1;34m] Account Settings Menu[0m
2024-02-12-19:29:50[1;34m[[0;1;37mC[0;1;34m] Create a New Character[0m             [1;34m[[0;1;37mE[0;1;34m] Set Email Address[0m
2024-02-12-19:29:50[1;34m[[0;1;37mL[0;1;34m] Incarnation Lock[0m                   [1;34m[[0;1;37mM[0;1;34m] Check for New Mail[0m
2024-02-12-19:29:50[1;34m[[0;1;37mN[0;1;34m] Lost Souls News[0m                    [1;34m[[0;1;37mP[0;1;34m] Set Password[0m
2024-02-12-19:29:50[1;34m[[0;1;37mQ[0;1;34m] Quit Lost Souls[0m                    [1;34m[[0;1;37mR[0;1;34m] Remove Atman[0m
2024-02-12-19:29:50[1;34m[[0;1;37mT[0;1;34m] Terminal Setup Menu[0m                [1;34m[[0;1;37mW[0;1;34m] Who's On[0m
2024-02-12-19:29:50[1;34m[[0;1;37m?[0;1;34m] Show Menu[0m                          
2024-02-12-19:29:50
2024-02-12-19:29:51[1;34m][0m [0;37m1[0m
2024-02-12-19:29:51
2024-02-12-19:29:51    You last played on Sun Feb 11 13:02:22 2024.
2024-02-12-19:29:51
2024-02-12-19:29:51    a storage room [1;34m[s][0m
2024-02-12-19:29:51
2024-02-12-19:29:51    This is a well-lit, narrow, rectangular room.  The exit to the south leads out into the main guildhall.  There are a whole bunch of drawers and cupboards lining the high walls from floor to ceiling on both sides and along the back wall.  Each one appears to be locked and well cared for.  There are [31mred wooden ladders[0m on each wall.  There are many boxes stacked neatly in the corner.  
2024-02-12-19:29:51
2024-02-12-19:29:51    The area is reasonably well-lit.  
2024-02-12-19:29:51
2024-02-12-19:29:51    The only obvious exit is south.
2024-02-12-19:29:51
2024-02-12-19:29:51    There have been [1;37mone thousand four hundred ninety events[0m affecting you since the last time you checked; you can use [1;37m'show events since'[0m to review them.
2024-02-12-19:29:52> [0;37m[0m
2024-02-12-19:29:52> [0;37m[0m
2024-02-12-19:29:53> [0;37m[0m
2024-02-12-19:29:53> [0;37m[0m
2024-02-12-19:29:56> [0;37m#help foreach[0m
2024-02-12-19:29:56[1;37mCommand[22;37m: #foreach [1;37m{[22;37mlist[1;37m} {[22;37mvariable[1;37m} {[22;37mcommands[1;37m}
2024-02-12-19:29:56
2024-02-12-19:29:56[22;37m         For each item in the provided list the foreach statement will update
2024-02-12-19:29:56[22;37m         the given variable and execute the command part of the statement. List
2024-02-12-19:29:56[22;37m         elements must be separated by braces or semicolons.
2024-02-12-19:29:56
2024-02-12-19:29:56[1;37mExample[22;37m: #foreach {bob;tim;kim} {name} {tell $name Hello}
2024-02-12-19:29:56[1;37mExample[22;37m: #foreach {{bob}{tim}{kim}} {name} {tell $name Hello}
2024-02-12-19:29:56[0m
2024-02-12-19:29:56[1;37mRelated[22;37m: break, continue, list, loop, parse, repeat, return and while.[0m
2024-02-12-19:29:56
2024-02-12-19:30:07[0;37m#help lists[0m
2024-02-12-19:30:07[22;37m         There are several different types of lists in tintin which behave in a
2024-02-12-19:30:07[22;37m         fairly universal manner. To properly explain lists it's easiest to
2024-02-12-19:30:07[22;37m         explain the most basic variable type first before discussing more
2024-02-12-19:30:07[22;37m         complex types.
2024-02-12-19:30:07
2024-02-12-19:30:07       - Basic variable: The standard key = value variable.
2024-02-12-19:30:07
2024-02-12-19:30:07       - Simple list: A string that contains semicolon delimited fields.
2024-02-12-19:30:07[22;37m         {a;b;c}. Can be saved as a variable.
2024-02-12-19:30:07
2024-02-12-19:30:07       - Brace list: A string in which fields are delimited with braces.
2024-02-12-19:30:07[22;37m         {a}{b}{c}. Brace lists cannot be stored as a variable because tables
2024-02-12-19:30:07[22;37m         use braces as well, they must be stored as a simple list instead.
2024-02-12-19:30:07
2024-02-12-19:30:07       - Table: Think of this as variables nested within another variable. Or
2024-02-12-19:30:07[22;37m          as variables contained within another variable.
2024-02-12-19:30:07
2024-02-12-19:30:07       - List: A table that uses integers for its indexes. Also known as an
2024-02-12-19:30:07[22;37m         array. The #list command is a utility command for using tables as
2024-02-12-19:30:07[22;37m         arrays.
2024-02-12-19:30:07
2024-02-12-19:30:07[1;32m         Simple Variables
2024-02-12-19:30:07
2024-02-12-19:30:07[1;37mExample[22;37m:
2024-02-12-19:30:07[22;37m         #variable {simple} {Hello World!}
2024-02-12-19:30:07[22;37m         #show $simple
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         To see if the 'simple' variable exists you can use &{simple} which
2024-02-12-19:30:07[22;37m         will display 0 if the variable does not exist, or the variable's index
2024-02-12-19:30:07[22;37m         if it exists.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         If you have multiple variables they are sorted alphabetically and
2024-02-12-19:30:07[22;37m         numerically. While it's not all that relevant for simple variables,
2024-02-12-19:30:07[22;37m         the first variable has index 1, the second variable index 2, and so
2024-02-12-19:30:07[22;37m         on.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         Variable names need to start with a letter and only exist of letters,
2024-02-12-19:30:07[22;37m         numbers, and underscores. If you need to use a non standard variable
2024-02-12-19:30:07[22;37m         name this is possible using braces.
2024-02-12-19:30:07
2024-02-12-19:30:07[1;37mExample[22;37m: #variable {:)} {Happy Happy!};#show ${:)}
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         Variables can be accessed using their index. While primarily useful
2024-02-12-19:30:07[22;37m         for tables it is possible to do this for simple variables. Use +1 for
2024-02-12-19:30:07[22;37m         the first variable, +2 for the second variable, etc. Use -1 for the
2024-02-12-19:30:07[22;37m         last variable, -2 for the second last variable, etc.
2024-02-12-19:30:07
2024-02-12-19:30:07[1;37mExample[22;37m: #show The first variable is: *{+1} with value: ${+1}
2024-02-12-19:30:07
2024-02-12-19:30:07[1;32m         Removing Variables
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         To remove a variable, use #unvariable or #unvar (every command can be
2024-02-12-19:30:07[22;37m         abbreviated). It's possible to remove multiple variables at once
2024-02-12-19:30:07[22;37m         using #unvar {var 1} {var 2} {etc}
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         Variables are unique to each session, so if you have multiple
2024-02-12-19:30:07[22;37m         sessions, removing a variable from one session won't remove it from
2024-02-12-19:30:07[22;37m         other sessions.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         If you remove a table variable, all variables contained within that
2024-02-12-19:30:07[22;37m         table variable are removed as well.
2024-02-12-19:30:07
2024-02-12-19:30:07[1;32m         Simple Lists
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         A simple list is a string that contains semicolon delimited fields.
2024-02-12-19:30:07[22;37m         Commands can be entered as simple lists, for example:
2024-02-12-19:30:07[22;37m         #show {a};#show {b} will execute a single line as two commands.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         Several commands take a simple list as their input, these are:
2024-02-12-19:30:07[22;37m         #foreach, #line substitute, #path load, #list create, and #highlight.
2024-02-12-19:30:07
2024-02-12-19:30:07[1;32m         Brace Lists
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         A brace list is a string in which fields are delimited with braces.
2024-02-12-19:30:07[22;37m         Most commands take a brace list for their arguments, for example:
2024-02-12-19:30:07[22;37m         #session {x} {mud.com} {1234} {mud.tin}. The session command takes
2024-02-12-19:30:07[22;37m         4 arguments, the 4th argument (command file) is optional.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         Commands that take a simple list as their input will also accept a
2024-02-12-19:30:07[22;37m         brace list, keep in mind you'll have to embed the brace list in an
2024-02-12-19:30:07[22;37m         extra set of braces, for example: #path load {{n}{s}{w}{w}}, which is
2024-02-12-19:30:07[22;37m         identical to: #path load {n;s;w;w}.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         Brace lists cannot be stored as variables because TinTin++ will
2024-02-12-19:30:07[22;37m         confuse them with tables. You can convert a brace list to a table
2024-02-12-19:30:07[22;37m         variable using: #list {bracelist} {create} {{a}{b}{c}} this will look
2024-02-12-19:30:07[22;37m         internally as: {{1}{a}{2}{b}{3}{c}}. You can then convert this table
2024-02-12-19:30:07[22;37m         back to a simple list using: #list {bracelist} {simplify} which will
2024-02-12-19:30:07[22;37m         change it to {a;b;c}.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         Braces cannot easily be escaped in TinTin++. Using \{ or \} will not
2024-02-12-19:30:07[22;37m         work. The reason for this is due to several factors, but primarily
2024-02-12-19:30:07[22;37m         backward compatibility. To escape braces you must define them using
2024-02-12-19:30:07[22;37m         hexadecimal notation using \x7B and \x7D. See #help escape for a list
2024-02-12-19:30:07[22;37m         of escape options, and the help file will also remind you of how to
2024-02-12-19:30:07[22;37m         escape braces.
2024-02-12-19:30:07
2024-02-12-19:30:07[1;32m         Tables
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         Tables are key/value pairs stored within a variable. Tables are also
2024-02-12-19:30:07[22;37m         known as associative arrays, dictionaries, maps, nested variables,
2024-02-12-19:30:07[22;37m         structures, and probably a couple of other names. There are several
2024-02-12-19:30:07[22;37m         ways to create and access tables.
2024-02-12-19:30:07
2024-02-12-19:30:07[1;37mExample[22;37m: #variable {friendlist} {{bob}{bob@mail.com} {bubba}{sunset@gmail.com}}
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         This will create a friendlist with two entries, the key is the name of
2024-02-12-19:30:07[22;37m         the friend, the value is the email address of the friend. You can see
2024-02-12-19:30:07[22;37m         the email address of bob using: #show {$friendlist[bob]}. You can
2024-02-12-19:30:07[22;37m         also define this table as following:
2024-02-12-19:30:07
2024-02-12-19:30:07[1;37mExample[22;37m:
2024-02-12-19:30:07[22;37m         #variable {friendlist[bob]} {bob@mail.com}
2024-02-12-19:30:07[22;37m         #variable {friendlist[bubba]} {sunset@gmail.com}
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         This would create the exact same table as the single line declaration
2024-02-12-19:30:07[22;37m         used previously. To see the first key in the table use:
2024-02-12-19:30:07[22;37m         *friendlist[+1], to see the first value in the table use:
2024-02-12-19:30:07[22;37m         $friendlist[+1]. To see the size of the table use &friendlist[]. To
2024-02-12-19:30:07[22;37m         print a bracelist of all friends use *friendlist[], to print a
2024-02-12-19:30:07[22;37m         bracelist of all friends whose name starts with the letter 'a' you
2024-02-12-19:30:07[22;37m         would use: *friendlist[a%*]. Similarly to see the number of friends
2024-02-12-19:30:07[22;37m         you have whose name ends with the letter 'b' you would use:
2024-02-12-19:30:07[22;37m         &friendlist[%*b].
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         See #help regexp for a brief overview of regular expression options.
2024-02-12-19:30:07[22;37m         While TinTin++ supports PCRE (perl-compatible regular expressions), it
2024-02-12-19:30:07[22;37m         embeds them within its own regular expression syntax that is simpler
2024-02-12-19:30:07[22;37m         and less invasive, while still allowing the full power of PCRE for
2024-02-12-19:30:07[22;37m         those who need it.
2024-02-12-19:30:07
2024-02-12-19:30:07[1;37mExample[22;37m: #unvariable {friendlist[bubba]}
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         This would remove {bubba} from the friendlist. To remove the entire
2024-02-12-19:30:07[22;37m         friendlist you would use: #unvariable {friendlist}.
2024-02-12-19:30:07
2024-02-12-19:30:07[1;37mExample[22;37m: #variable {friendlist} {{bob} {{email}{bob@ma.il} {phone}{123456789}}}
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         There is no limit to the number of nests, simply add more braces. To
2024-02-12-19:30:07[22;37m         see Bob's email in this example you would use:
2024-02-12-19:30:07[22;37m         #show {$friendlist[bob][email]}.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         To merge two tables the #cat command can be used.
2024-02-12-19:30:07[1;37mExample[22;37m:
2024-02-12-19:30:07[22;37m         #variable {bli} {{a}{1}{b}{2}}
2024-02-12-19:30:07[22;37m         #variable {blo} {{c}{3}{d}{4}}
2024-02-12-19:30:07[22;37m         #cat {blo} {$bli}
2024-02-12-19:30:07
2024-02-12-19:30:07[1;32m         Lists
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         Tables are sorted alphabetically with the exception of numbers which
2024-02-12-19:30:07[22;37m         are sorted numerically. If you want to determine the sorting order
2024-02-12-19:30:07[22;37m         yourself you can use use the #list command which helps you to use
2024-02-12-19:30:07[22;37m         tables as arrays.
2024-02-12-19:30:07
2024-02-12-19:30:07[1;37mExample[22;37m: #action {%1 chats %2} {#list chats add {%0}}
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         Each time a chat is received it's added to the end of the 'chats' list
2024-02-12-19:30:07[22;37m         variable. If you type #variable chats this might look like:
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         [1;33m#[1;36mVARIABLE [22;35m{[1;37mchats[22;35m}
2024-02-12-19:30:07[22;37m         [22;35m{
2024-02-12-19:30:07[22;37m                 [22;35m{[1;37m1[22;35m} {[1;37mBubba chats Hi[22;35m}
2024-02-12-19:30:07[22;37m                 [22;35m{[1;37m2[22;35m} {[1;37mBob chats Hi bub[22;35m}
2024-02-12-19:30:07[22;37m                 [22;35m{[1;37m3[22;35m} {[1;37mBubba chats Bye[22;35m}
2024-02-12-19:30:07[22;37m                 [22;35m{[1;37m4[22;35m} {[1;37mBob chats bub bye[22;35m}
2024-02-12-19:30:07[22;37m         [22;35m}
2024-02-12-19:30:07
2024-02-12-19:30:07[1;32m         Parsing
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         There are various ways to parse lists and tables, using either #loop,
2024-02-12-19:30:07[22;37m         #foreach, #while, or #<number>.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         #loop takes two numeric arguments, incrementing or decrementing the
2024-02-12-19:30:07[22;37m         first number until it matches the second number. The value of the loop
2024-02-12-19:30:07[22;37m         counter is stored in the provided variable.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         #foreach takes either a simple list or a brace list as its first
2024-02-12-19:30:07[22;37m         argument. Foreach will go through each item in the list and store the
2024-02-12-19:30:07[22;37m         value in the provided variable.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         #while will perform an if check on the first argument, if the result
2024-02-12-19:30:07[22;37m         is true it will execute the commands in the second argument. Then it
2024-02-12-19:30:07[22;37m         performs an if check on the first argument again. It will continue to
2024-02-12-19:30:07[22;37m         repeat until the if check returns 0 or the loop is interrupted with a
2024-02-12-19:30:07[22;37m         control flow command. It takes special care to avoid infinite loops.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         #<number> will execute the provided argument 'number' times. For
2024-02-12-19:30:07[22;37m         example: #4 {#show beep! \a}
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         Here are some examples.
2024-02-12-19:30:07
2024-02-12-19:30:07[1;37mExample[22;37m: #list friends create {bob;bubba;zorro}
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         Internally this looks like {{1}{bob}{2}{bubba}{3}{zorro}} and the
2024-02-12-19:30:07[22;37m         list can be parsed in various ways.
2024-02-12-19:30:07
2024-02-12-19:30:07[1;37mExample[22;37m: #foreach {$friends[%*]} {name} {#show $name}
2024-02-12-19:30:07
2024-02-12-19:30:07[1;37mExample[22;37m: #foreach {*friends[%*]} {i} {#show $friends[$i]}
2024-02-12-19:30:07
2024-02-12-19:30:07[1;37mExample[22;37m: #loop {1} {&friends[]} {i} {#show $friends[+$i]}
2024-02-12-19:30:07
2024-02-12-19:30:07[1;37mExample[22;37m: #math i 1;#while {&friends[+$i]} {#show $friends[+$i];
2024-02-12-19:30:07[22;37m         #math i $i + 1}
2024-02-12-19:30:07
2024-02-12-19:30:07[1;37mExample[22;37m: #math i 1;#&friends[] {#show $friends[+$i];#math i $i + 1}
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         Each of the five examples above performs the same task; printing the
2024-02-12-19:30:07[22;37m         three names in the friends list.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         If you want to get a better look at what goes on behind the scenes
2024-02-12-19:30:07[22;37m         while executing scripts you can use '#debug all on'. To stop seeing
2024-02-12-19:30:07[22;37m         debug information use '#debug all off'.
2024-02-12-19:30:07
2024-02-12-19:30:07[1;32m         List Tables
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         List tables are also known as databases and the #list command has
2024-02-12-19:30:07[22;37m         several options to manipulate them.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         For these options to work properly all tables need to have identical
2024-02-12-19:30:07[22;37m         keys. Here is an example list table.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         #var {friendlist}
2024-02-12-19:30:07[22;37m         {
2024-02-12-19:30:07[22;37m             {1}{{name}{bob} {age}{54}}
2024-02-12-19:30:07[22;37m             {2}{{name}{bubba} {age}{21}}
2024-02-12-19:30:07[22;37m             {3}{{name}{pamela} {age}{36}}
2024-02-12-19:30:07[22;37m         }
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         To sort the list table by age you would use:
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         #list friendlist indexate age
2024-02-12-19:30:07[22;37m         #list friendlist order
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         To remove everyone whose name starts with a 'b' you would use:
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         #list friendlist indexate name
2024-02-12-19:30:07[22;37m         #list friendlist filter {} {b%*}
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         The filter option only supports regular expressions. To filter
2024-02-12-19:30:07[22;37m         using mathematics you would loop through the list backwards:
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         #loop &friendlist[] 1 index
2024-02-12-19:30:07[22;37m         {
2024-02-12-19:30:07[22;37m             #if {$friendlist[+$index][age] < 30}
2024-02-12-19:30:07[22;37m             {
2024-02-12-19:30:07[22;37m                 #list friendlist delete $index
2024-02-12-19:30:07[22;37m             }
2024-02-12-19:30:07[22;37m         }
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         Alternatively you can use the refine option.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         #list friendlist indexate age
2024-02-12-19:30:07[22;37m         #list friendlist refine {&0 >= 30}
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         To add an item to a list table there are two options:
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         #list friendlist add {{{name}{hobo} {age}{42}}}
2024-02-12-19:30:07[22;37m         #list friendlist insert -1 {{name}{hobo} {age}{42}}
2024-02-12-19:30:07
2024-02-12-19:30:07[1;32m         Optimization
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         TinTin++ tables are exceptionally fast while they remain under 100
2024-02-12-19:30:07[22;37m         items. Once a table grows beyond 10000 items there can be performance
2024-02-12-19:30:07[22;37m         issues when inserting and removing items in the beginning or middle of
2024-02-12-19:30:07[22;37m         the table.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         The plan is to eventually implement an indexable and flexible data
2024-02-12-19:30:07[22;37m         structure for large tables.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         If you load a large table from file it's important to make sure it's
2024-02-12-19:30:07[22;37m         sorted, when using #write to save a table it's automatically sorted.
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         If you notice performance issues on large tables it's relatively easy
2024-02-12-19:30:07[22;37m         to create a hash table.
2024-02-12-19:30:07
2024-02-12-19:30:07[1;37mExample[22;37m:
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         #alias {sethash}
2024-02-12-19:30:07[22;37m         {
2024-02-12-19:30:07[22;37m             #format hash %H %1;
2024-02-12-19:30:07[22;37m             #math hash1 $hash % 100;
2024-02-12-19:30:07[22;37m             #math hash2 $hash / 100 % 100;
2024-02-12-19:30:07[22;37m             #var hashtable[$hash1][$hash2][%1] %2
2024-02-12-19:30:07[22;37m         }
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         #function {gethash}
2024-02-12-19:30:07[22;37m         {
2024-02-12-19:30:07[22;37m             #format hash %H %1;
2024-02-12-19:30:07[22;37m             #math hash1 $hash % 100;
2024-02-12-19:30:07[22;37m             #math hash2 $hash / 100 % 100;
2024-02-12-19:30:07[22;37m             #return $hashtable[$hash1][$hash2][%1]
2024-02-12-19:30:07[22;37m         }
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         #alias {test}
2024-02-12-19:30:07[22;37m         {
2024-02-12-19:30:07[22;37m             sethash bli hey;
2024-02-12-19:30:07[22;37m             sethash bla hi;
2024-02-12-19:30:07[22;37m             sethash blo hello;
2024-02-12-19:30:07[22;37m             #show The value of bla is: @gethash{bla}
2024-02-12-19:30:07[22;37m         }
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         The above script will rapidly store and retrieve over 1 million items.
2024-02-12-19:30:07[22;37m         Looping through a hash table is relatively easy as well.
2024-02-12-19:30:07
2024-02-12-19:30:07[1;37mExample[22;37m:
2024-02-12-19:30:07
2024-02-12-19:30:07[22;37m         #alias {showhash}
2024-02-12-19:30:07[22;37m         {
2024-02-12-19:30:07[22;37m             #foreach {*hashtable[%*]} {hash1}
2024-02-12-19:30:07[22;37m             {
2024-02-12-19:30:07[22;37m                 #foreach {*hashtable[$hash1][%*]} {hash2}
2024-02-12-19:30:07[22;37m                 {
2024-02-12-19:30:07[22;37m                     #echo {%-20s = %s}
2024-02-12-19:30:07[22;37m                                        {hashtable[$hash1][$hash2]}
2024-02-12-19:30:07[22;37m                                        {$hashtable[$hash1][$hash2]}
2024-02-12-19:30:07[22;37m                 }
2024-02-12-19:30:07[22;37m             }
2024-02-12-19:30:07        }
2024-02-12-19:30:07[0m
2024-02-12-19:30:07[1;37mRelated[22;37m: break, continue, foreach, loop, parse, repeat, return and while.[0m
2024-02-12-19:30:07
2024-02-12-19:30:37[0;37m#var[0m
2024-02-12-19:30:37[0m################################## VARIABLES ###################################[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mareas_without_euclidian_map[38;5;164m} {[38;5;188m{Losthaven}{1}[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mdirection_opposites[38;5;164m} {[38;5;188m{down}{up}{east}{west}{eastdown}{westup}{eastin}{westout}{eastout}{westin}{eastup}{westdown}{in}{out}{none}{none}{north}{south}{northdown}{southup}{northeast}{southwest}{northeastdown}{southwestup}{northeastin}{southwestout}{northeastout}{southwestin}{northeastup}{southwestdown}{northin}{southout}{northout}{southin}{northup}{southdown}{northwest}{southeast}{northwestdown}{southeastup}{northwestin}{southeastout}{northwestout}{southeastin}{northwestup}{southeastdown}{out}{in}{south}{north}{southdown}{northup}{southeast}{northwest}{southeastdown}{northwestup}{southeastin}{northwestout}{southeastout}{northwestin}{southeastup}{northwestdown}{southin}{northout}{southout}{northin}{southup}{northdown}{southwest}{northeast}{southwestdown}{northeastup}{southwestin}{northeastout}{southwestout}{northeastin}{southwestup}{northeastdown}{up}{down}{west}{east}{westdown}{eastup}{westin}{eastout}{westout}{eastin}{westup}{eastdown}[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mdirection_opposites_long[38;5;164m} {[38;5;188m{downward}{upward}{eastward}{westward}{eastward and downward}{westward and upward}{eastward and inward}{westward and outward}{eastward and outward}{westward and inward}{eastward and upward}{westward and downward}{inward}{outward}{northeastward}{southwestward}{northeastward and downward}{southwestward and upward}{northeastward and inward}{southwestward and outward}{northeastward and outward}{southwestward and inward}{northeastward and upward}{southwestward and downward}{northward}{southward}{northward and downward}{southward and upward}{northward and inward}{southward and outward}{northward and outward}{southward and inward}{northward and upward}{southward and downward}{northwestward}{southeastward}{northwestward and downward}{southeastward and upward}{northwestward and inward}{southeastward and outward}{northwestward and outward}{southeastward and inward}{northwestward and upward}{southeastward and downward}{outward}{inward}{southeastward}{northwestward}{southeastward and downward}{northwestward and upward}{southeastward and inward}{northwestward and outward}{southeastward and outward}{northwestward and inward}{southeastward and upward}{northwestward and downward}{southward}{northward}{southward and downward}{northward and upward}{southward and inward}{northward and outward}{southward and outward}{northward and inward}{southward and upward}{northward and downward}{southwestward}{northeastward}{southwestward and downward}{northeastward and upward}{southwestward and inward}{northeastward and outward}{southwestward and outward}{northeastward and inward}{southwestward and upward}{northeastward and downward}{upward}{downward}{westward}{eastward}{westward and downward}{eastward and upward}{westward and inward}{eastward and outward}{westward and outward}{eastward and inward}{westward and upward}{eastward and downward}[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188minfo[38;5;164m} {[38;5;188m{SESSIONS}{{gts}{{ACTIVE}{1}{CLASS}{}{CREATED}{1707762589}{HOST}{}{IP}{}{MTTS}{2831}{NAME}{gts}{PORT}{}}}[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mmap_direction_names_to_short[38;5;164m} {[38;5;188m{down}{d}{east}{e}{eastdown}{ed}{eastin}{ei}{eastout}{eo}{eastup}{eu}{in}{i}{north}{n}{northdown}{nd}{northeast}{ne}{northeastdown}{ned}{northeastin}{nei}{northeastout}{neo}{northeastup}{neu}{northin}{ni}{northout}{no}{northup}{nu}{northwest}{nw}{northwestdown}{nwd}{northwestin}{nwi}{northwestout}{nwo}{northwestup}{nwu}{out}{o}{south}{s}{southdown}{sd}{southeast}{se}{southeastdown}{sed}{southeastin}{sei}{southeastout}{seo}{southeastup}{seu}{southin}{si}{southout}{so}{southup}{su}{southwest}{sw}{southwestdown}{swd}{southwestin}{swi}{southwestout}{swo}{southwestup}{swu}{up}{u}{west}{w}{westdown}{wd}{westin}{wi}{westout}{wo}{westup}{wu}[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mmap_long_direction_names_to_short[38;5;164m} {[38;5;188m{downward}{d}{eastward}{e}{eastward and downward}{ed}{eastward and inward}{ei}{eastward and outward}{eo}{eastward and upward}{eu}{inward}{i}{northeastward}{ne}{northeastward and downward}{ned}{northeastward and inward}{nei}{northeastward and outward}{neo}{northeastward and upward}{neu}{northward}{n}{northward and downward}{nd}{northward and inward}{ni}{northward and outward}{no}{northward and upward}{nu}{northwestward}{nw}{northwestward and downward}{nwd}{northwestward and inward}{nwi}{northwestward and outward}{nwo}{northwestward and upward}{nwu}{outward}{o}{southeastward}{se}{southeastward and downward}{sed}{southeastward and inward}{sei}{southeastward and outward}{seo}{southeastward and upward}{seu}{southward}{s}{southward and downward}{sd}{southward and inward}{si}{southward and outward}{so}{southward and upward}{su}{southwestward}{sw}{southwestward and downward}{swd}{southwestward and inward}{swi}{southwestward and outward}{swo}{southwestward and upward}{swu}{upward}{u}{westward}{w}{westward and downward}{wd}{westward and inward}{wi}{westward and outward}{wo}{westward and upward}{wu}[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mnormal_dir[38;5;164m} {[38;5;188m[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mnormal_dir_long[38;5;164m} {[38;5;188mnorthward[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mnormal_dir_long_opposite[38;5;164m} {[38;5;188msouthward[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mnormal_dir_opposite[38;5;164m} {[38;5;188msouth[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mnormal_dir_short[38;5;164m} {[38;5;188mn[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mnormal_dir_short_opposite[38;5;164m} {[38;5;188ms[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mroom_direction_name[38;5;164m} {[38;5;188ms[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mstate_room_desription_detailed[38;5;164m} {[38;5;188m1[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mtodays_logfile_name[38;5;164m} {[38;5;188m2024-02-12-logfile.log[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mtranslate_dir_to_short[38;5;164m} {[38;5;188m{down}{d}{east}{e}{in}{i}{none}{none}{north}{n}{out}{o}{south}{s}{up}{u}{west}{w}[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mx_axis_dirs[38;5;164m} {[38;5;188mwest; east; none[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mx_direction[38;5;164m} {[38;5;188mnone[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mx_direction_opposite[38;5;164m} {[38;5;188mnone[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mx_direction_short[38;5;164m} {[38;5;188mnone[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mx_direction_short_opposite[38;5;164m} {[38;5;188mnone[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188my_axis_dirs[38;5;164m} {[38;5;188mnorth; none[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188my_direction[38;5;164m} {[38;5;188mnone[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188my_direction_opposite[38;5;164m} {[38;5;188msouth[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188my_direction_short[38;5;164m} {[38;5;188mn[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188my_direction_short_opposite[38;5;164m} {[38;5;188ms[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mz_axis_dirs[38;5;164m} {[38;5;188mup; in; down; out; none[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mz_direction[38;5;164m} {[38;5;188mnone[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mz_direction_opposite[38;5;164m} {[38;5;188mnone[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mz_direction_short[38;5;164m} {[38;5;188mnone[38;5;164m}[0m
2024-02-12-19:30:37[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mz_direction_short_opposite[38;5;164m} {[38;5;188mnone[38;5;164m}[0m
2024-02-12-19:31:09[0;37m#foreach {direction_opposites} {direction} {#showme {$direction}}[0m
2024-02-12-19:31:09[0mdirection_opposites[0m
2024-02-12-19:31:17[0;37m#foreach {$direction_opposites} {direction} {#showme {$direction}}[0m
2024-02-12-19:31:17[0mdown[0m
2024-02-12-19:31:17[0mup[0m
2024-02-12-19:31:17[0meast[0m
2024-02-12-19:31:17[0mwest[0m
2024-02-12-19:31:17[0meastdown[0m
2024-02-12-19:31:17[0mwestup[0m
2024-02-12-19:31:17[0meastin[0m
2024-02-12-19:31:17[0mwestout[0m
2024-02-12-19:31:17[0meastout[0m
2024-02-12-19:31:17[0mwestin[0m
2024-02-12-19:31:17[0meastup[0m
2024-02-12-19:31:17[0mwestdown[0m
2024-02-12-19:31:17[0min[0m
2024-02-12-19:31:17[0mout[0m
2024-02-12-19:31:17[0mnone[0m
2024-02-12-19:31:17[0mnone[0m
2024-02-12-19:31:17[0mnorth[0m
2024-02-12-19:31:17[0msouth[0m
2024-02-12-19:31:17[0mnorthdown[0m
2024-02-12-19:31:17[0msouthup[0m
2024-02-12-19:31:17[0mnortheast[0m
2024-02-12-19:31:17[0msouthwest[0m
2024-02-12-19:31:17[0mnortheastdown[0m
2024-02-12-19:31:17[0msouthwestup[0m
2024-02-12-19:31:17[0mnortheastin[0m
2024-02-12-19:31:17[0msouthwestout[0m
2024-02-12-19:31:17[0mnortheastout[0m
2024-02-12-19:31:17[0msouthwestin[0m
2024-02-12-19:31:17[0mnortheastup[0m
2024-02-12-19:31:17[0msouthwestdown[0m
2024-02-12-19:31:17[0mnorthin[0m
2024-02-12-19:31:17[0msouthout[0m
2024-02-12-19:31:17[0mnorthout[0m
2024-02-12-19:31:17[0msouthin[0m
2024-02-12-19:31:17[0mnorthup[0m
2024-02-12-19:31:17[0msouthdown[0m
2024-02-12-19:31:17[0mnorthwest[0m
2024-02-12-19:31:17[0msoutheast[0m
2024-02-12-19:31:17[0mnorthwestdown[0m
2024-02-12-19:31:17[0msoutheastup[0m
2024-02-12-19:31:17[0mnorthwestin[0m
2024-02-12-19:31:17[0msoutheastout[0m
2024-02-12-19:31:17[0mnorthwestout[0m
2024-02-12-19:31:17[0msoutheastin[0m
2024-02-12-19:31:17[0mnorthwestup[0m
2024-02-12-19:31:17[0msoutheastdown[0m
2024-02-12-19:31:17[0mout[0m
2024-02-12-19:31:17[0min[0m
2024-02-12-19:31:17[0msouth[0m
2024-02-12-19:31:17[0mnorth[0m
2024-02-12-19:31:17[0msouthdown[0m
2024-02-12-19:31:17[0mnorthup[0m
2024-02-12-19:31:17[0msoutheast[0m
2024-02-12-19:31:17[0mnorthwest[0m
2024-02-12-19:31:17[0msoutheastdown[0m
2024-02-12-19:31:17[0mnorthwestup[0m
2024-02-12-19:31:17[0msoutheastin[0m
2024-02-12-19:31:17[0mnorthwestout[0m
2024-02-12-19:31:17[0msoutheastout[0m
2024-02-12-19:31:17[0mnorthwestin[0m
2024-02-12-19:31:17[0msoutheastup[0m
2024-02-12-19:31:17[0mnorthwestdown[0m
2024-02-12-19:31:17[0msouthin[0m
2024-02-12-19:31:17[0mnorthout[0m
2024-02-12-19:31:17[0msouthout[0m
2024-02-12-19:31:17[0mnorthin[0m
2024-02-12-19:31:17[0msouthup[0m
2024-02-12-19:31:17[0mnorthdown[0m
2024-02-12-19:31:17[0msouthwest[0m
2024-02-12-19:31:17[0mnortheast[0m
2024-02-12-19:31:17[0msouthwestdown[0m
2024-02-12-19:31:17[0mnortheastup[0m
2024-02-12-19:31:17[0msouthwestin[0m
2024-02-12-19:31:17[0mnortheastout[0m
2024-02-12-19:31:17[0msouthwestout[0m
2024-02-12-19:31:17[0mnortheastin[0m
2024-02-12-19:31:17[0msouthwestup[0m
2024-02-12-19:31:17[0mnortheastdown[0m
2024-02-12-19:31:17[0mup[0m
2024-02-12-19:31:17[0mdown[0m
2024-02-12-19:31:17[0mwest[0m
2024-02-12-19:31:17[0meast[0m
2024-02-12-19:31:17[0mwestdown[0m
2024-02-12-19:31:17[0meastup[0m
2024-02-12-19:31:17[0mwestin[0m
2024-02-12-19:31:17[0meastout[0m
2024-02-12-19:31:17[0mwestout[0m
2024-02-12-19:31:17[0meastin[0m
2024-02-12-19:31:17[0mwestup[0m
2024-02-12-19:31:17[0meastdown[0m
2024-02-12-19:31:23[0;37m#var[0m
2024-02-12-19:31:23[0m################################## VARIABLES ###################################[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mareas_without_euclidian_map[38;5;164m} {[38;5;188m{Losthaven}{1}[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mdirection[38;5;164m} {[38;5;188meastdown[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mdirection_opposites[38;5;164m} {[38;5;188m{down}{up}{east}{west}{eastdown}{westup}{eastin}{westout}{eastout}{westin}{eastup}{westdown}{in}{out}{none}{none}{north}{south}{northdown}{southup}{northeast}{southwest}{northeastdown}{southwestup}{northeastin}{southwestout}{northeastout}{southwestin}{northeastup}{southwestdown}{northin}{southout}{northout}{southin}{northup}{southdown}{northwest}{southeast}{northwestdown}{southeastup}{northwestin}{southeastout}{northwestout}{southeastin}{northwestup}{southeastdown}{out}{in}{south}{north}{southdown}{northup}{southeast}{northwest}{southeastdown}{northwestup}{southeastin}{northwestout}{southeastout}{northwestin}{southeastup}{northwestdown}{southin}{northout}{southout}{northin}{southup}{northdown}{southwest}{northeast}{southwestdown}{northeastup}{southwestin}{northeastout}{southwestout}{northeastin}{southwestup}{northeastdown}{up}{down}{west}{east}{westdown}{eastup}{westin}{eastout}{westout}{eastin}{westup}{eastdown}[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mdirection_opposites_long[38;5;164m} {[38;5;188m{downward}{upward}{eastward}{westward}{eastward and downward}{westward and upward}{eastward and inward}{westward and outward}{eastward and outward}{westward and inward}{eastward and upward}{westward and downward}{inward}{outward}{northeastward}{southwestward}{northeastward and downward}{southwestward and upward}{northeastward and inward}{southwestward and outward}{northeastward and outward}{southwestward and inward}{northeastward and upward}{southwestward and downward}{northward}{southward}{northward and downward}{southward and upward}{northward and inward}{southward and outward}{northward and outward}{southward and inward}{northward and upward}{southward and downward}{northwestward}{southeastward}{northwestward and downward}{southeastward and upward}{northwestward and inward}{southeastward and outward}{northwestward and outward}{southeastward and inward}{northwestward and upward}{southeastward and downward}{outward}{inward}{southeastward}{northwestward}{southeastward and downward}{northwestward and upward}{southeastward and inward}{northwestward and outward}{southeastward and outward}{northwestward and inward}{southeastward and upward}{northwestward and downward}{southward}{northward}{southward and downward}{northward and upward}{southward and inward}{northward and outward}{southward and outward}{northward and inward}{southward and upward}{northward and downward}{southwestward}{northeastward}{southwestward and downward}{northeastward and upward}{southwestward and inward}{northeastward and outward}{southwestward and outward}{northeastward and inward}{southwestward and upward}{northeastward and downward}{upward}{downward}{westward}{eastward}{westward and downward}{eastward and upward}{westward and inward}{eastward and outward}{westward and outward}{eastward and inward}{westward and upward}{eastward and downward}[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188minfo[38;5;164m} {[38;5;188m{SESSIONS}{{gts}{{ACTIVE}{1}{CLASS}{}{CREATED}{1707762589}{HOST}{}{IP}{}{MTTS}{2831}{NAME}{gts}{PORT}{}}}[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mmap_direction_names_to_short[38;5;164m} {[38;5;188m{down}{d}{east}{e}{eastdown}{ed}{eastin}{ei}{eastout}{eo}{eastup}{eu}{in}{i}{north}{n}{northdown}{nd}{northeast}{ne}{northeastdown}{ned}{northeastin}{nei}{northeastout}{neo}{northeastup}{neu}{northin}{ni}{northout}{no}{northup}{nu}{northwest}{nw}{northwestdown}{nwd}{northwestin}{nwi}{northwestout}{nwo}{northwestup}{nwu}{out}{o}{south}{s}{southdown}{sd}{southeast}{se}{southeastdown}{sed}{southeastin}{sei}{southeastout}{seo}{southeastup}{seu}{southin}{si}{southout}{so}{southup}{su}{southwest}{sw}{southwestdown}{swd}{southwestin}{swi}{southwestout}{swo}{southwestup}{swu}{up}{u}{west}{w}{westdown}{wd}{westin}{wi}{westout}{wo}{westup}{wu}[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mmap_long_direction_names_to_short[38;5;164m} {[38;5;188m{downward}{d}{eastward}{e}{eastward and downward}{ed}{eastward and inward}{ei}{eastward and outward}{eo}{eastward and upward}{eu}{inward}{i}{northeastward}{ne}{northeastward and downward}{ned}{northeastward and inward}{nei}{northeastward and outward}{neo}{northeastward and upward}{neu}{northward}{n}{northward and downward}{nd}{northward and inward}{ni}{northward and outward}{no}{northward and upward}{nu}{northwestward}{nw}{northwestward and downward}{nwd}{northwestward and inward}{nwi}{northwestward and outward}{nwo}{northwestward and upward}{nwu}{outward}{o}{southeastward}{se}{southeastward and downward}{sed}{southeastward and inward}{sei}{southeastward and outward}{seo}{southeastward and upward}{seu}{southward}{s}{southward and downward}{sd}{southward and inward}{si}{southward and outward}{so}{southward and upward}{su}{southwestward}{sw}{southwestward and downward}{swd}{southwestward and inward}{swi}{southwestward and outward}{swo}{southwestward and upward}{swu}{upward}{u}{westward}{w}{westward and downward}{wd}{westward and inward}{wi}{westward and outward}{wo}{westward and upward}{wu}[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mnormal_dir[38;5;164m} {[38;5;188m[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mnormal_dir_long[38;5;164m} {[38;5;188mnorthward[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mnormal_dir_long_opposite[38;5;164m} {[38;5;188msouthward[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mnormal_dir_opposite[38;5;164m} {[38;5;188msouth[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mnormal_dir_short[38;5;164m} {[38;5;188mn[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mnormal_dir_short_opposite[38;5;164m} {[38;5;188ms[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mroom_direction_name[38;5;164m} {[38;5;188ms[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mstate_room_desription_detailed[38;5;164m} {[38;5;188m1[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mtodays_logfile_name[38;5;164m} {[38;5;188m2024-02-12-logfile.log[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mtranslate_dir_to_short[38;5;164m} {[38;5;188m{down}{d}{east}{e}{in}{i}{none}{none}{north}{n}{out}{o}{south}{s}{up}{u}{west}{w}[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mx_axis_dirs[38;5;164m} {[38;5;188mwest; east; none[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mx_direction[38;5;164m} {[38;5;188mnone[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mx_direction_opposite[38;5;164m} {[38;5;188mnone[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mx_direction_short[38;5;164m} {[38;5;188mnone[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mx_direction_short_opposite[38;5;164m} {[38;5;188mnone[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188my_axis_dirs[38;5;164m} {[38;5;188mnorth; none[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188my_direction[38;5;164m} {[38;5;188mnone[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188my_direction_opposite[38;5;164m} {[38;5;188msouth[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188my_direction_short[38;5;164m} {[38;5;188mn[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188my_direction_short_opposite[38;5;164m} {[38;5;188ms[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mz_axis_dirs[38;5;164m} {[38;5;188mup; in; down; out; none[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mz_direction[38;5;164m} {[38;5;188mnone[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mz_direction_opposite[38;5;164m} {[38;5;188mnone[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mz_direction_short[38;5;164m} {[38;5;188mnone[38;5;164m}[0m
2024-02-12-19:31:23[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mz_direction_short_opposite[38;5;164m} {[38;5;188mnone[38;5;164m}[0m
2024-02-12-19:31:26
2024-02-12-19:31:26[1;30m    Ae[0;34mr[0;1;34mie[0;1;36ml[0;1;37mla[0m has logged a [1;37mcontent revision[0m system change, #8294, with the summary [1;37m'Added a map glyph to celydon roads'[0m.
2024-02-12-19:31:46[0;37m#help list[0m
2024-02-12-19:31:46[1;37mCommand[22;37m: #list [1;37m{[22;37mvariable[1;37m} {[22;37moption[1;37m} {[22;37margument[1;37m}
2024-02-12-19:31:46
2024-02-12-19:31:46[22;37m         #list {var} {add} <items>              Add <items> to the list
2024-02-12-19:31:46[22;37m         #list {var} {clear}                    Empty the given list
2024-02-12-19:31:46[22;37m         #list {var} {collapse} <separator>     Turn list into a variable
2024-02-12-19:31:46[22;37m         #list {var} {copy} <variable>          Copy variable to the list
2024-02-12-19:31:46[22;37m         #list {var} {create} <items>           Create a list using <items>
2024-02-12-19:31:46[22;37m         #list {var} {delete} <index> [amount]  Delete the item at <index>,
2024-02-12-19:31:46[22;37m                                                the [amount] is optional.
2024-02-12-19:31:46[22;37m         #list {var} {explode} <separator>      Turn variable into a list
2024-02-12-19:31:46[22;37m         #list {var} {indexate} [key]           Index a list table for sorting
2024-02-12-19:31:46[22;37m         #list {var} {insert} <index> <item>    Insert <item> at given index
2024-02-12-19:31:46[22;37m         #list {var} {filter} <keep> [remove]   Filter with keep / remove regex
2024-02-12-19:31:46[22;37m         #list {var} {find} <regex> <variable>  Return the found index
2024-02-12-19:31:46[22;37m         #list {var} {get} <index> <variable>   Copy an item to {variable}
2024-02-12-19:31:46[22;37m         #list {var} {numerate}                 Renumber a table or list
2024-02-12-19:31:46[22;37m         #list {var} {order} [items]            Sort list alphanumerically
2024-02-12-19:31:46[22;37m         #list {var} {refine} <keep> [remove]   Filter with keep / remove math
2024-02-12-19:31:46[22;37m                                                with &0 holding the value
2024-02-12-19:31:46[22;37m         #list {var} {reverse}                  Reverse the list
2024-02-12-19:31:46[22;37m         #list {var} {shuffle}                  Shuffle the list
2024-02-12-19:31:46[22;37m         #list {var} {set} <index> <item>       Change the item at {index}
2024-02-12-19:31:46[22;37m         #list {var} {simplify} [items]         Turn list into a simple list
2024-02-12-19:31:46[22;37m         #list {var} {size} <variable>          Copy list size to {variable}
2024-02-12-19:31:46[22;37m         #list {var} {sort} [items]             Sort list alphabetically, if
2024-02-12-19:31:46[22;37m                                                an item is given it's added.
2024-02-12-19:31:46[22;37m         #list {var} {swap} <index> <index>     Swap two items
2024-02-12-19:31:46[22;37m         #list {var} {tokenize} <string>        Create a character list
2024-02-12-19:31:46
2024-02-12-19:31:46[22;37m         The index should be between +1 and the list's size. You can also give
2024-02-12-19:31:46[22;37m         a negative value, in which case -1 equals the last item in the list, -2
2024-02-12-19:31:46[22;37m         the second last, etc.
2024-02-12-19:31:46
2024-02-12-19:31:46[22;37m         When inserting an item a positive index will prepend the item at the
2024-02-12-19:31:46[22;37m         given index, while a negative index will append the item.
2024-02-12-19:31:46
2024-02-12-19:31:46[22;37m         The add and create options allow using multiple items, as well
2024-02-12-19:31:46[22;37m         as semicolon separated items.
2024-02-12-19:31:46
2024-02-12-19:31:46[22;37m         The get option will return the item or the indexation. Use
2024-02-12-19:31:46[22;37m         $var[<index>] to retrieve the nested data of a list table.
2024-02-12-19:31:46
2024-02-12-19:31:46[22;37m         The order, sort and simplify options will perform the operation on
2024-02-12-19:31:46[22;37m         the given list. Optional items can be provided which are added to
2024-02-12-19:31:46[22;37m         the new or existing list before the operation is executed. Sorting
2024-02-12-19:31:46[22;37m         and ordering are stable.
2024-02-12-19:31:46
2024-02-12-19:31:46[22;37m         The indexate option prepares a table or list table for order, sort,
2024-02-12-19:31:46[22;37m         filter, refine, and find operations for the given key. It is similar
2024-02-12-19:31:46[22;37m         to the SELECT option in SQL.
2024-02-12-19:31:46
2024-02-12-19:31:46[22;37m         A size of 0 is returned for an empty or non-existent list. You can
2024-02-12-19:31:46[22;37m         directly access the size of a list using &var[].
2024-02-12-19:31:46
2024-02-12-19:31:46[22;37m         You can directly access elements in a list variable using $var[+1],
2024-02-12-19:31:46[22;37m         $var[+2], $var[-1], etc.
2024-02-12-19:31:46[0m
2024-02-12-19:31:46[1;37mRelated[22;37m: break, continue, foreach, loop, parse, repeat, return and while.[0m
2024-02-12-19:31:46
2024-02-12-19:32:33
2024-02-12-19:32:33[37m    Aldahir[0m walks in from the south.
2024-02-12-19:34:25[0;37mreload_configs[0m
2024-02-12-19:34:43[0;37mtesting_send_move w e[0m
2024-02-12-19:34:43[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'echo MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE rMATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r'.[0m
2024-02-12-19:34:43[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:34:53[0;37m[0m
2024-02-12-19:34:53> [0;37m[0m
2024-02-12-19:35:20> [0;37mreload_configs[0m
2024-02-12-19:35:23[0;37mtesting_send_move w e[0m
2024-02-12-19:35:23[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'echo "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE rMATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r"'.[0m
2024-02-12-19:35:23[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:35:37
2024-02-12-19:35:37[37m    Aldahir[0m nods to you.
2024-02-12-19:35:53[0;37mreload_configs[0m
2024-02-12-19:35:53
2024-02-12-19:35:53[37m    Aldahir[0m glances around.
2024-02-12-19:35:54[0;37mtesting_send_move w e[0m
2024-02-12-19:35:54[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'echo "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r""MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r"'.[0m
2024-02-12-19:35:54[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:36:44[0;37mreload_configs[0m
2024-02-12-19:36:45[0;37mtesting_send_move w e[0m
2024-02-12-19:36:45[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r""MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r"'.[0m
2024-02-12-19:36:46[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:37:15[0;37mtesting_send_move w 2[0m
2024-02-12-19:37:15[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r""MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: '2'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r"'.[0m
2024-02-12-19:37:15[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:37:17[0;37mtesting_send_move w w[0m
2024-02-12-19:37:17[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r""MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r"'.[0m
2024-02-12-19:37:17[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:37:23
2024-02-12-19:37:23[37m    Aldahir[0m walks southward.
2024-02-12-19:37:45[0;37mtesting_send_move w w[0m
2024-02-12-19:37:45[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r""MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r"'.[0m
2024-02-12-19:37:45[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:37:54[0;37mtesting_send_move w w[0m
2024-02-12-19:37:54[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r""MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r"'.[0m
2024-02-12-19:37:54[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:38:51[0;37mreload_configs[0m
2024-02-12-19:38:52[0;37mtesting_send_move w w[0m
2024-02-12-19:38:52[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r" "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r" '.[0m
2024-02-12-19:38:52[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:39:29[0;37mtesting_send_move w w[0m
2024-02-12-19:39:29[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r" "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r" '.[0m
2024-02-12-19:39:29[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:50:01[0;37mtesting_send_move asdsad asdsadsad[0m
2024-02-12-19:50:01[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'asdsad'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r" "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'asdsadsad'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r" '.[0m
2024-02-12-19:50:01[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:50:33[0;37mtesting_send_move asdsad asdsadsad[0m
2024-02-12-19:50:33[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'asdsad'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r" "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'asdsadsad'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r" '.[0m
2024-02-12-19:50:33[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:51:18[0;37mtesting_send_move e w[0m
2024-02-12-19:51:18[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r" "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r" '.[0m
2024-02-12-19:51:18[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:51:56[0;37mreload_configs[0m
2024-02-12-19:51:57[0;37mtesting_send_move e w[0m
2024-02-12-19:51:57[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r" "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r" '.[0m
2024-02-12-19:51:57[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:52:05
2024-02-12-19:52:05[37m    Aldahir[0m walks in from the south.
2024-02-12-19:52:15[0;37mtesting_send_move e w[0m
2024-02-12-19:52:15[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r" "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r" '.[0m
2024-02-12-19:52:15[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:52:41[0;37mreload_configs[0m
2024-02-12-19:52:42[0;37mtesting_send_move e w[0m
2024-02-12-19:52:42[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" '.[0m
2024-02-12-19:52:42[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:52:50[0;37mtesting_send_move asdsad asdsad[0m
2024-02-12-19:52:50[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'asdsad'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'asdsad'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" '.[0m
2024-02-12-19:52:50[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:55:08[0;37mtesting_send_move asdsad asdsad[0m
2024-02-12-19:55:08[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'asdsad'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'asdsad'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" '.[0m
2024-02-12-19:55:08[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:55:51[0;37mshow skills[0m
2024-02-12-19:55:51
2024-02-12-19:55:51[1;34m/- [0;0mAthletic Skills[0;1;34m --------------------------------------\[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mClimbing         [0;1;34m           [0;1;33mVery Inept[0;1;34m [ [0;1;37m10[0;1;34m ] [   [0;1;33mI[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mPractice         [0;1;34m                [0;1;33mInept[0;1;34m [ [0;1;37m20[0;1;34m ] [  [0;1;33mII[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mSwimming         [0;1;34m                [0;1;33mInept[0;1;34m [ [0;1;37m20[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m>- [0;0mClose Combat Weapon Skills[0;1;34m ---------------------------<[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mAxe              [0;1;34m            [0;1;33mUnskilled[0;1;34m [ [0;1;37m 0[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mBludgeon         [0;1;34m          [0;1;33mUnpracticed[0;1;34m [ [0;1;37m25[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mDagger           [0;1;34m                [0;1;33mInept[0;1;34m [ [0;1;37m20[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mFlail            [0;1;34m            [0;1;33mUnskilled[0;1;34m [ [0;1;37m 0[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mHammer           [0;1;34m            [0;1;33mUnskilled[0;1;34m [ [0;1;37m 0[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mPole Arm         [0;1;34m            [0;1;33mUnskilled[0;1;34m [ [0;1;37m 0[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mSpear            [0;1;34m            [0;1;33mUnskilled[0;1;34m [ [0;1;37m 0[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mStaff            [0;1;34m           [0;1;33mVery Inept[0;1;34m [ [0;1;37m10[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mSword            [0;1;34m         [0;1;33mFairly Adept[0;1;34m [ [0;1;37m82[0;1;34m ] [ [0;1;33mIII[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m>- [0;0mCombat Skills[0;1;34m ----------------------------------------<[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mCombat Reflexes  [0;1;34m          [0;1;33mUnpracticed[0;1;34m [ [0;1;37m23[0;1;34m ] [   [0;1;33mI[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mDodge            [0;1;34m              [0;1;33mSkilled[0;1;34m [ [0;1;37m80[0;1;34m ] [ [0;1;33mIII[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mImpact Absorption[0;1;34m           [0;1;33mVery Inept[0;1;34m [ [0;1;37m 1[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mMassive Blow     [0;1;34m          [0;1;33mUnpracticed[0;1;34m [ [0;1;37m26[0;1;34m ] [  [0;1;33mII[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mPrecision Strike [0;1;34m          [0;1;33mUnpracticed[0;1;34m [ [0;1;37m23[0;1;34m ] [   [0;1;33mI[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mResilience       [0;1;34m                [0;1;33mInept[0;1;34m [ [0;1;37m20[0;1;34m ] [   [0;1;33mI[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mShield           [0;1;34m         [0;1;33mFairly Adept[0;1;34m [ [0;1;37m82[0;1;34m ] [ [0;1;33mIII[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mSteadiness       [0;1;34m                [0;1;33mInept[0;1;34m [ [0;1;37m20[0;1;34m ] [   [0;1;33mI[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mUnarmed Combat   [0;1;34m    [0;1;33mFairly Proficient[0;1;34m [ [0;1;37m41[0;1;34m ] [  [0;1;33mII[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m>- [0;0mFieldcraft Skills[0;1;34m ------------------------------------<[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mAwareness        [0;1;34m           [0;1;33mVery Inept[0;1;34m [ [0;1;37m10[0;1;34m ] [   [0;1;33mI[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mOrienteering     [0;1;34m            [0;1;33mCompetent[0;1;34m [ [0;1;37m40[0;1;34m ] [  [0;1;33mII[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mTracking         [0;1;34m                [0;1;33mInept[0;1;34m [ [0;1;37m20[0;1;34m ] [   [0;1;33mI[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m>- [0;0mLanguage Skills[0;1;34m --------------------------------------<[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mAnglic           [0;1;34m           [0;1;33mProficient[0;1;34m [ [0;1;37m51[0;1;34m ] [   [0;1;33mI[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mAngrak           [0;1;34m           [0;1;33mVery Inept[0;1;34m [ [0;1;37m 5[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mDethek           [0;1;34m           [0;1;33mVery Inept[0;1;34m [ [0;1;37m 5[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mSperethiel       [0;1;34m           [0;1;33mVery Inept[0;1;34m [ [0;1;37m 5[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mTakargu          [0;1;34m           [0;1;33mVery Inept[0;1;34m [ [0;1;37m 5[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m>- [0;0mMedical Skills[0;1;34m ---------------------------------------<[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mFirst Aid        [0;1;34m                [0;1;33mInept[0;1;34m [ [0;1;37m20[0;1;34m ] [   [0;1;33mI[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m>- [0;0mMental Skills[0;1;34m ----------------------------------------<[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mCourage          [0;1;34m          [0;1;33mUnpracticed[0;1;34m [ [0;1;37m21[0;1;34m ] [  [0;1;33mII[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mDiscipline       [0;1;34m                [0;1;33mInept[0;1;34m [ [0;1;37m20[0;1;34m ] [  [0;1;33mII[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m>- [0;0mMilitary Skills[0;1;34m --------------------------------------<[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mTactics          [0;1;34m          [0;1;33mUnpracticed[0;1;34m [ [0;1;37m26[0;1;34m ] [   [0;1;33mI[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m>- [0;0mMovement Skills[0;1;34m --------------------------------------<[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mElude Pursuit    [0;1;34m            [0;1;33mCompetent[0;1;34m [ [0;1;37m40[0;1;34m ] [   [0;1;33mI[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mLoad Bearing     [0;1;34m           [0;1;33mProficient[0;1;34m [ [0;1;37m58[0;1;34m ] [   [0;1;33mI[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m>- [0;0mPhysical Conditioning Skills[0;1;34m -------------------------<[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mHardiness        [0;1;34m          [0;1;33mUnpracticed[0;1;34m [ [0;1;37m25[0;1;34m ] [   [0;1;33mI[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mRecuperation     [0;1;34m                [0;1;33mInept[0;1;34m [ [0;1;37m20[0;1;34m ] [  [0;1;33mII[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mStamina          [0;1;34m                [0;1;33mInept[0;1;34m [ [0;1;37m20[0;1;34m ] [  [0;1;33mII[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m>- [0;0mRanged Weapon Skills[0;1;34m ---------------------------------<[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mArchery          [0;1;34m           [0;1;33mVery Inept[0;1;34m [ [0;1;37m10[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mCrossbow         [0;1;34m           [0;1;33mVery Inept[0;1;34m [ [0;1;37m10[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mSling            [0;1;34m                [0;1;33mInept[0;1;34m [ [0;1;37m15[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mThrowing         [0;1;34m           [0;1;33mVery Inept[0;1;34m [ [0;1;37m10[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m>- [0;0mResistance Skills[0;1;34m ------------------------------------<[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mPain Tolerance   [0;1;34m           [0;1;33mVery Inept[0;1;34m [ [0;1;37m 1[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m>- [0;0mScholarly Skills[0;1;34m -------------------------------------<[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mAnimal Lore      [0;1;34m          [0;1;33mUnpracticed[0;1;34m [ [0;1;37m24[0;1;34m ] [  [0;1;33mII[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mLegend Lore      [0;1;34m            [0;1;33mCompetent[0;1;34m [ [0;1;37m40[0;1;34m ] [  [0;1;33mII[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mLiteracy         [0;1;34m            [0;1;33mCompetent[0;1;34m [ [0;1;37m40[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mPolitics         [0;1;34m          [0;1;33mUnpracticed[0;1;34m [ [0;1;37m21[0;1;34m ] [  [0;1;33mII[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mScholarship      [0;1;34m                [0;1;33mInept[0;1;34m [ [0;1;37m20[0;1;34m ] [   [0;1;33mI[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m>- [0;0mSocial Skills[0;1;34m ----------------------------------------<[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mHaggling         [0;1;34m                [0;1;33mInept[0;1;34m [ [0;1;37m20[0;1;34m ] [ [0;1;33mIII[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mOwnership        [0;1;34m         [0;1;33mFairly Adept[0;1;34m [ [0;1;37m88[0;1;34m ] [ [0;1;33mIII[0;1;34m ] |[0m
2024-02-12-19:55:51[1;34m>- [0;0mTrade Skills[0;1;34m -----------------------------------------<[0m
2024-02-12-19:55:51[1;34m|  [0;1;37mTorture          [0;1;34m           [0;1;33mVery Inept[0;1;34m [ [0;1;37m 1[0;1;34m ]         |[0m
2024-02-12-19:55:51[1;34m\--------------------------------------------------------/[0m
2024-02-12-19:55:53> [0;37m[0m
2024-02-12-19:55:55> [0;37m[0m
2024-02-12-19:56:08> [0;37mhelp torture[0m
2024-02-12-19:56:08
2024-02-12-19:56:08[1;37m    Torture -- the ability to torture[0m
2024-02-12-19:56:08
2024-02-12-19:56:08    [1;37mClass:[0m Trade Skills
2024-02-12-19:56:08    [1;37mAttribute:[0m Perception
2024-02-12-19:56:08    [1;37mPedagogy:[0m Procedural
2024-02-12-19:56:08    [1;37mPractitioner Term:[0m Torturer
2024-02-12-19:56:08
2024-02-12-19:56:08    The ability to cause pain through torture, with or without causing injury or death, to a specific degree of agony.  Includes familiarity with various techniques and implements of torture.  This skill may equally be applied to torture of others for interrogation, punishment, or other purposes, or to torture of oneself as part of self-mortification practices.
2024-02-12-19:56:08
2024-02-12-19:56:08    [1;37mDevelopment Information:[0m The torture skill was created by Chaos; the source code was last updated Tue Mar 15 02:21:27 2016.
2024-02-12-19:56:40> [0;37m[0m
2024-02-12-19:56:40> [0;37m[0m
2024-02-12-19:56:55> 
2024-02-12-19:56:55[37m    Aldahir[0m walks southward.
2024-02-12-19:57:59[0;37mtesting_send_move asdsad asdsad[0m
2024-02-12-19:57:59[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'asdsad'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'asdsad'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" '.[0m
2024-02-12-19:57:59[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:58:03[0;37mtesting_send_move e w[0m
2024-02-12-19:58:03[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" '.[0m
2024-02-12-19:58:03[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-19:59:23[0;37m#help line[0m
2024-02-12-19:59:23[1;37mCommand[22;37m: #line [1;37m{[22;37moption[1;37m} {[22;37margument[1;37m}
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;32mLine options that alter the argument.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;37m#line json <variable> <argument>
2024-02-12-19:59:23[22;37m           The variable is translated to json and the argument is executed
2024-02-12-19:59:23[22;37m           with &0 holding the json data.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;37m#line strip <argument>
2024-02-12-19:59:23[22;37m           Argument is executed with all color codes stripped.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;37m#line substitute <options> <argument>
2024-02-12-19:59:23[22;37m           Argument is executed using the provided substitutions, available
2024-02-12-19:59:23[22;37m           options are: arguments, braces, colors, escapes, functions, secure,
2024-02-12-19:59:23[22;37m           and variables.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;32mLine options that alter how the line is executed.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;37m#line background <argument>
2024-02-12-19:59:23[22;37m           Prevent new session activation.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;37m#line capture <variable> <argument>
2024-02-12-19:59:23[22;37m           Argument is executed and output stored in <variable>.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;37m#line convert <argument>
2024-02-12-19:59:23[22;37m           Argument is executed with escaped meta characters.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;37m#line debug <argument>
2024-02-12-19:59:23[22;37m           Argument is executed in debug mode.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;37m#line gag [amount]
2024-02-12-19:59:23[22;37m           Gag the next line, or given lines. Use + or - to increase
2024-02-12-19:59:23[22;37m           or decrease the current amount.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;37m#line ignore {argument}
2024-02-12-19:59:23[22;37m           Argument is executed without any triggers being checked.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;37m#line local {argument}
2024-02-12-19:59:23[22;37m           Argument is executed with all newly and indirectly
2024-02-12-19:59:23[22;37m           created variables being local.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;37m#line log <filename> [text]
2024-02-12-19:59:23[22;37m           Log the next line to file unless the [text] argument is
2024-02-12-19:59:23[22;37m           provided.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;37m#line logmode <option> <argument>
2024-02-12-19:59:23[22;37m           Argument is executed using the provided logmode, available
2024-02-12-19:59:23[22;37m           modes are: html, plain, raw, and stamp.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;37m#line msdp <argument>
2024-02-12-19:59:23[22;37m           Turn the argument into an msdp telnet sequence, starting at the
2024-02-12-19:59:23[22;37m           first opening brace. Will turn tintin tables into msdp tables,
2024-02-12-19:59:23[22;37m           with semicolons being used to create msdp arrays.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;37m#line multishot <number> <argument>
2024-02-12-19:59:23[22;37m           Argument is executed in multishot mode, all triggers created
2024-02-12-19:59:23[22;37m           will only fire the given number of times.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;37m#line oneshot <argument>
2024-02-12-19:59:23[22;37m           Argument is executed in oneshot mode, all triggers created will
2024-02-12-19:59:23[22;37m           only fire once.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;37m#line quiet <argument>
2024-02-12-19:59:23[22;37m           Argument is executed with suppression of most system messages.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;37m#line verbatim <argument>
2024-02-12-19:59:23[22;37m           Argument is executed verbatim, prohibiting variable and function
2024-02-12-19:59:23[22;37m           substitutions.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         [1;37m#line verbose <argument>
2024-02-12-19:59:23[22;37m           Argument is executed with most system messages enabled.
2024-02-12-19:59:23
2024-02-12-19:59:23[22;37m         When using #line log and logging in html format use \c< \c> \c& \c" to
2024-02-12-19:59:23[22;37m         log a literal < > & and ".
2024-02-12-19:59:23[0m
2024-02-12-19:59:23[1;37mRelated[22;37m: class and config.[0m
2024-02-12-19:59:23
2024-02-12-20:00:28[0;37mreload_configs[0m
2024-02-12-20:00:30[0;37mtesting_send_move e w[0m
2024-02-12-20:00:30[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" '.[0m
2024-02-12-20:00:30[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-20:00:40[0;37m#var output_of_executing_query[0m
2024-02-12-20:00:40[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188moutput_of_executing_query[38;5;164m}
2024-02-12-20:00:40[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-12-20:00:40[38;5;164m{
2024-02-12-20:00:40[38;5;188m[38;5;164m    {[38;5;188m1[38;5;164m} [38;5;164m{[38;5;188m[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" '.[0m[38;5;164m}
2024-02-12-20:00:40[38;5;164m    {[38;5;188m2[38;5;164m} [38;5;164m{[38;5;188m[0m#SESSION 'ls' ACTIVATED.[0m[38;5;164m}
2024-02-12-20:00:40[38;5;164m    {[38;5;188m3[38;5;164m} [38;5;164m{[38;5;188m[0m[0;37m#var output_of_executing_query[0m[0m[38;5;164m}
2024-02-12-20:00:40[38;5;164m}[0m
2024-02-12-20:04:39[0;37mreload_configs[0m
2024-02-12-20:04:41[0;37mtesting_send_move e w[0m
2024-02-12-20:04:41[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-20:04:44[0;37m#var output_of_executing_query[0m
2024-02-12-20:04:44[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188moutput_of_executing_query[38;5;164m}
2024-02-12-20:04:44[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-12-20:04:44[38;5;164m{
2024-02-12-20:04:44[38;5;188m[38;5;164m    {[38;5;188m1[38;5;164m} [38;5;164m{[38;5;188m[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" '.[0m[38;5;164m}
2024-02-12-20:04:44[38;5;164m    {[38;5;188m2[38;5;164m} [38;5;164m{[38;5;188m[0m#SESSION 'ls' ACTIVATED.[0m[38;5;164m}
2024-02-12-20:04:44[38;5;164m    {[38;5;188m3[38;5;164m} [38;5;164m{[38;5;188m[0m[0;37m#var output_of_executing_query[0m[0m[38;5;164m}
2024-02-12-20:04:44[38;5;164m}[0m
2024-02-12-20:05:46[0;37mreload_configs[0m
2024-02-12-20:05:46[0m#WARNING: #READ {ls_v2.tin}: MISSING SEMICOLON ON LINE 269.[0m
2024-02-12-20:06:02[0;37mreload_configs[0m
2024-02-12-20:06:05[0;37mtesting_send_move e w[0m
2024-02-12-20:06:05[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-20:06:14[0;37mreload_configs[0m
2024-02-12-20:06:15[0;37mtesting_send_move e w[0m
2024-02-12-20:06:15[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-20:06:32[0;37mlook[0m
2024-02-12-20:06:32    a storage room [1;34m[s][0m
2024-02-12-20:06:32
2024-02-12-20:06:32    This is a well-lit, narrow, rectangular room.  The exit to the south leads out into the main guildhall.  There are a whole bunch of drawers and cupboards lining the high walls from floor to ceiling on both sides and along the back wall.  Each one appears to be locked and well cared for.  There are [31mred wooden ladders[0m on each wall.  There are many boxes stacked neatly in the corner.  
2024-02-12-20:06:32
2024-02-12-20:06:32    The area is reasonably well-lit.  
2024-02-12-20:06:32
2024-02-12-20:06:32    The only obvious exit is south.
2024-02-12-20:08:48> [0;37mreload_configs[0m
2024-02-12-20:08:49[0;37mtesting_send_move e w[0m
2024-02-12-20:08:49[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" '.[0m
2024-02-12-20:08:49[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-20:09:04[0;37mtesting_send_move e w[0m
2024-02-12-20:09:04[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING './send_query_to_neo4j.sh "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r RETURN c" '.[0m
2024-02-12-20:09:04[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-20:09:41[0;37mreload_configs[0m
2024-02-12-20:09:42[0;37mtesting_send_move e w[0m
2024-02-12-20:09:42[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-20:09:54[0;37mreload_configs[0m
2024-02-12-20:09:54[0;37mtesting_send_move e w[0m
2024-02-12-20:09:54[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-20:10:04[0;37mreload_configs[0m
2024-02-12-20:10:05[0;37mtesting_send_move e w[0m
2024-02-12-20:10:05[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-20:10:08[0;37mlook[0m
2024-02-12-20:10:08
2024-02-12-20:10:08    a storage room [1;34m[s][0m
2024-02-12-20:10:08
2024-02-12-20:10:08    This is a well-lit, narrow, rectangular room.  The exit to the south leads out into the main guildhall.  There are a whole bunch of drawers and cupboards lining the high walls from floor to ceiling on both sides and along the back wall.  Each one appears to be locked and well cared for.  There are [31mred wooden ladders[0m on each wall.  There are many boxes stacked neatly in the corner.  
2024-02-12-20:10:08
2024-02-12-20:10:08    The area is reasonably well-lit.  
2024-02-12-20:10:08
2024-02-12-20:10:08    The only obvious exit is south.
2024-02-12-20:10:10> [0;37mlook[0m
2024-02-12-20:10:10
2024-02-12-20:10:10    a storage room [1;34m[s][0m
2024-02-12-20:10:10
2024-02-12-20:10:10    This is a well-lit, narrow, rectangular room.  The exit to the south leads out into the main guildhall.  There are a whole bunch of drawers and cupboards lining the high walls from floor to ceiling on both sides and along the back wall.  Each one appears to be locked and well cared for.  There are [31mred wooden ladders[0m on each wall.  There are many boxes stacked neatly in the corner.  
2024-02-12-20:10:10
2024-02-12-20:10:10    The area is reasonably well-lit.  
2024-02-12-20:10:10
2024-02-12-20:10:10    The only obvious exit is south.
2024-02-12-20:10:58> [0;37m#help line[0m
2024-02-12-20:10:58[1;37mCommand[22;37m: #line [1;37m{[22;37moption[1;37m} {[22;37margument[1;37m}
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;32mLine options that alter the argument.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;37m#line json <variable> <argument>
2024-02-12-20:10:58[22;37m           The variable is translated to json and the argument is executed
2024-02-12-20:10:58[22;37m           with &0 holding the json data.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;37m#line strip <argument>
2024-02-12-20:10:58[22;37m           Argument is executed with all color codes stripped.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;37m#line substitute <options> <argument>
2024-02-12-20:10:58[22;37m           Argument is executed using the provided substitutions, available
2024-02-12-20:10:58[22;37m           options are: arguments, braces, colors, escapes, functions, secure,
2024-02-12-20:10:58[22;37m           and variables.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;32mLine options that alter how the line is executed.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;37m#line background <argument>
2024-02-12-20:10:58[22;37m           Prevent new session activation.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;37m#line capture <variable> <argument>
2024-02-12-20:10:58[22;37m           Argument is executed and output stored in <variable>.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;37m#line convert <argument>
2024-02-12-20:10:58[22;37m           Argument is executed with escaped meta characters.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;37m#line debug <argument>
2024-02-12-20:10:58[22;37m           Argument is executed in debug mode.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;37m#line gag [amount]
2024-02-12-20:10:58[22;37m           Gag the next line, or given lines. Use + or - to increase
2024-02-12-20:10:58[22;37m           or decrease the current amount.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;37m#line ignore {argument}
2024-02-12-20:10:58[22;37m           Argument is executed without any triggers being checked.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;37m#line local {argument}
2024-02-12-20:10:58[22;37m           Argument is executed with all newly and indirectly
2024-02-12-20:10:58[22;37m           created variables being local.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;37m#line log <filename> [text]
2024-02-12-20:10:58[22;37m           Log the next line to file unless the [text] argument is
2024-02-12-20:10:58[22;37m           provided.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;37m#line logmode <option> <argument>
2024-02-12-20:10:58[22;37m           Argument is executed using the provided logmode, available
2024-02-12-20:10:58[22;37m           modes are: html, plain, raw, and stamp.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;37m#line msdp <argument>
2024-02-12-20:10:58[22;37m           Turn the argument into an msdp telnet sequence, starting at the
2024-02-12-20:10:58[22;37m           first opening brace. Will turn tintin tables into msdp tables,
2024-02-12-20:10:58[22;37m           with semicolons being used to create msdp arrays.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;37m#line multishot <number> <argument>
2024-02-12-20:10:58[22;37m           Argument is executed in multishot mode, all triggers created
2024-02-12-20:10:58[22;37m           will only fire the given number of times.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;37m#line oneshot <argument>
2024-02-12-20:10:58[22;37m           Argument is executed in oneshot mode, all triggers created will
2024-02-12-20:10:58[22;37m           only fire once.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;37m#line quiet <argument>
2024-02-12-20:10:58[22;37m           Argument is executed with suppression of most system messages.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;37m#line verbatim <argument>
2024-02-12-20:10:58[22;37m           Argument is executed verbatim, prohibiting variable and function
2024-02-12-20:10:58[22;37m           substitutions.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         [1;37m#line verbose <argument>
2024-02-12-20:10:58[22;37m           Argument is executed with most system messages enabled.
2024-02-12-20:10:58
2024-02-12-20:10:58[22;37m         When using #line log and logging in html format use \c< \c> \c& \c" to
2024-02-12-20:10:58[22;37m         log a literal < > & and ".
2024-02-12-20:10:58[0m
2024-02-12-20:10:58[1;37mRelated[22;37m: class and config.[0m
2024-02-12-20:10:58
2024-02-12-20:11:31[0;37mreload_configs[0m
2024-02-12-20:11:32[0;37m#help line[0m
2024-02-12-20:11:32[1;37mCommand[22;37m: #line [1;37m{[22;37moption[1;37m} {[22;37margument[1;37m}
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;32mLine options that alter the argument.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;37m#line json <variable> <argument>
2024-02-12-20:11:32[22;37m           The variable is translated to json and the argument is executed
2024-02-12-20:11:32[22;37m           with &0 holding the json data.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;37m#line strip <argument>
2024-02-12-20:11:32[22;37m           Argument is executed with all color codes stripped.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;37m#line substitute <options> <argument>
2024-02-12-20:11:32[22;37m           Argument is executed using the provided substitutions, available
2024-02-12-20:11:32[22;37m           options are: arguments, braces, colors, escapes, functions, secure,
2024-02-12-20:11:32[22;37m           and variables.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;32mLine options that alter how the line is executed.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;37m#line background <argument>
2024-02-12-20:11:32[22;37m           Prevent new session activation.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;37m#line capture <variable> <argument>
2024-02-12-20:11:32[22;37m           Argument is executed and output stored in <variable>.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;37m#line convert <argument>
2024-02-12-20:11:32[22;37m           Argument is executed with escaped meta characters.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;37m#line debug <argument>
2024-02-12-20:11:32[22;37m           Argument is executed in debug mode.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;37m#line gag [amount]
2024-02-12-20:11:32[22;37m           Gag the next line, or given lines. Use + or - to increase
2024-02-12-20:11:32[22;37m           or decrease the current amount.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;37m#line ignore {argument}
2024-02-12-20:11:32[22;37m           Argument is executed without any triggers being checked.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;37m#line local {argument}
2024-02-12-20:11:32[22;37m           Argument is executed with all newly and indirectly
2024-02-12-20:11:32[22;37m           created variables being local.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;37m#line log <filename> [text]
2024-02-12-20:11:32[22;37m           Log the next line to file unless the [text] argument is
2024-02-12-20:11:32[22;37m           provided.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;37m#line logmode <option> <argument>
2024-02-12-20:11:32[22;37m           Argument is executed using the provided logmode, available
2024-02-12-20:11:32[22;37m           modes are: html, plain, raw, and stamp.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;37m#line msdp <argument>
2024-02-12-20:11:32[22;37m           Turn the argument into an msdp telnet sequence, starting at the
2024-02-12-20:11:32[22;37m           first opening brace. Will turn tintin tables into msdp tables,
2024-02-12-20:11:32[22;37m           with semicolons being used to create msdp arrays.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;37m#line multishot <number> <argument>
2024-02-12-20:11:32[22;37m           Argument is executed in multishot mode, all triggers created
2024-02-12-20:11:32[22;37m           will only fire the given number of times.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;37m#line oneshot <argument>
2024-02-12-20:11:32[22;37m           Argument is executed in oneshot mode, all triggers created will
2024-02-12-20:11:32[22;37m           only fire once.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;37m#line quiet <argument>
2024-02-12-20:11:32[22;37m           Argument is executed with suppression of most system messages.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;37m#line verbatim <argument>
2024-02-12-20:11:32[22;37m           Argument is executed verbatim, prohibiting variable and function
2024-02-12-20:11:32[22;37m           substitutions.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         [1;37m#line verbose <argument>
2024-02-12-20:11:32[22;37m           Argument is executed with most system messages enabled.
2024-02-12-20:11:32
2024-02-12-20:11:32[22;37m         When using #line log and logging in html format use \c< \c> \c& \c" to
2024-02-12-20:11:32[22;37m         log a literal < > & and ".
2024-02-12-20:11:32[0m
2024-02-12-20:11:32[1;37mRelated[22;37m: class and config.[0m
2024-02-12-20:11:32
2024-02-12-20:11:34[0;37mtesting_send_move e w[0m
2024-02-12-20:11:34[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-20:11:55[0;37m#help line[0m
2024-02-12-20:11:55[1;37mCommand[22;37m: #line [1;37m{[22;37moption[1;37m} {[22;37margument[1;37m}
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;32mLine options that alter the argument.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;37m#line json <variable> <argument>
2024-02-12-20:11:55[22;37m           The variable is translated to json and the argument is executed
2024-02-12-20:11:55[22;37m           with &0 holding the json data.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;37m#line strip <argument>
2024-02-12-20:11:55[22;37m           Argument is executed with all color codes stripped.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;37m#line substitute <options> <argument>
2024-02-12-20:11:55[22;37m           Argument is executed using the provided substitutions, available
2024-02-12-20:11:55[22;37m           options are: arguments, braces, colors, escapes, functions, secure,
2024-02-12-20:11:55[22;37m           and variables.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;32mLine options that alter how the line is executed.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;37m#line background <argument>
2024-02-12-20:11:55[22;37m           Prevent new session activation.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;37m#line capture <variable> <argument>
2024-02-12-20:11:55[22;37m           Argument is executed and output stored in <variable>.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;37m#line convert <argument>
2024-02-12-20:11:55[22;37m           Argument is executed with escaped meta characters.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;37m#line debug <argument>
2024-02-12-20:11:55[22;37m           Argument is executed in debug mode.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;37m#line gag [amount]
2024-02-12-20:11:55[22;37m           Gag the next line, or given lines. Use + or - to increase
2024-02-12-20:11:55[22;37m           or decrease the current amount.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;37m#line ignore {argument}
2024-02-12-20:11:55[22;37m           Argument is executed without any triggers being checked.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;37m#line local {argument}
2024-02-12-20:11:55[22;37m           Argument is executed with all newly and indirectly
2024-02-12-20:11:55[22;37m           created variables being local.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;37m#line log <filename> [text]
2024-02-12-20:11:55[22;37m           Log the next line to file unless the [text] argument is
2024-02-12-20:11:55[22;37m           provided.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;37m#line logmode <option> <argument>
2024-02-12-20:11:55[22;37m           Argument is executed using the provided logmode, available
2024-02-12-20:11:55[22;37m           modes are: html, plain, raw, and stamp.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;37m#line msdp <argument>
2024-02-12-20:11:55[22;37m           Turn the argument into an msdp telnet sequence, starting at the
2024-02-12-20:11:55[22;37m           first opening brace. Will turn tintin tables into msdp tables,
2024-02-12-20:11:55[22;37m           with semicolons being used to create msdp arrays.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;37m#line multishot <number> <argument>
2024-02-12-20:11:55[22;37m           Argument is executed in multishot mode, all triggers created
2024-02-12-20:11:55[22;37m           will only fire the given number of times.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;37m#line oneshot <argument>
2024-02-12-20:11:55[22;37m           Argument is executed in oneshot mode, all triggers created will
2024-02-12-20:11:55[22;37m           only fire once.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;37m#line quiet <argument>
2024-02-12-20:11:55[22;37m           Argument is executed with suppression of most system messages.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;37m#line verbatim <argument>
2024-02-12-20:11:55[22;37m           Argument is executed verbatim, prohibiting variable and function
2024-02-12-20:11:55[22;37m           substitutions.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         [1;37m#line verbose <argument>
2024-02-12-20:11:55[22;37m           Argument is executed with most system messages enabled.
2024-02-12-20:11:55
2024-02-12-20:11:55[22;37m         When using #line log and logging in html format use \c< \c> \c& \c" to
2024-02-12-20:11:55[22;37m         log a literal < > & and ".
2024-02-12-20:11:55[0m
2024-02-12-20:11:55[1;37mRelated[22;37m: class and config.[0m
2024-02-12-20:11:55
2024-02-12-20:11:57[0;37mreload_configs[0m
2024-02-12-20:11:58[0;37mtesting_send_move e w[0m
2024-02-12-20:11:58[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-20:14:30[0;37m#help session[0m
2024-02-12-20:14:30[1;37mCommand[22;37m: #session [1;37m{[22;37mname[1;37m} {[22;37mhost[1;37m} {[22;37mport[1;37m} {[22;37mfile[1;37m}
2024-02-12-20:14:30
2024-02-12-20:14:30[22;37m         Starts a telnet session with the given name, host, port, and optional
2024-02-12-20:14:30[22;37m         file name. The name can be anything you want, except the name of an
2024-02-12-20:14:30[22;37m         already existing session, a number, or the keywords '+' and '-'.
2024-02-12-20:14:30
2024-02-12-20:14:30[22;37m         If a file name is given the file is only read if the session
2024-02-12-20:14:30[22;37m         succesfully connects.
2024-02-12-20:14:30
2024-02-12-20:14:30[22;37m         Without an argument #session shows the currently defined sessions.
2024-02-12-20:14:30
2024-02-12-20:14:30[22;37m         If you have more than one session, you can use the following commands:
2024-02-12-20:14:30
2024-02-12-20:14:30[22;37m         #session {-}        Switch to the previous session.
2024-02-12-20:14:30[22;37m         #session {+}        Switch to the next session.
2024-02-12-20:14:30[22;37m         #session {<number>} Switch to the given session. Session 0 is the
2024-02-12-20:14:30[22;37m                             startup session, +1 the first, +2 the second, and
2024-02-12-20:14:30[22;37m                             -1 is the last session. Sessions are (currently)
2024-02-12-20:14:30[22;37m                             sorted in order of creation.
2024-02-12-20:14:30[22;37m         #gts                Switch to the startup session. The name gts stands
2024-02-12-20:14:30[22;37m                             for global tintin session.
2024-02-12-20:14:30[22;37m         #ats                Switch to the active session. The name ats stands
2024-02-12-20:14:30[22;37m                             for active tintin session.
2024-02-12-20:14:30[22;37m                             not necessarily the calling session.
2024-02-12-20:14:30[22;37m         #{name}             Activates to the session with the given name.
2024-02-12-20:14:30[22;37m         #{name} {command}:  Executes a command with the given session without
2024-02-12-20:14:30[22;37m                             changing the active session.
2024-02-12-20:14:30[22;37m         @<name>{text}:      Parse text in the given session, substituting the
2024-02-12-20:14:30[22;37m                             variables and functions, and print the result in
2024-02-12-20:14:30[22;37m                             the current active session.
2024-02-12-20:14:30
2024-02-12-20:14:30[22;37m         The startup session is named 'gts' and can be used for relog scripts.
2024-02-12-20:14:30[22;37m         Do keep in mind that tickers do not work in the startup session.
2024-02-12-20:14:30
2024-02-12-20:14:30[1;37mExample[22;37m: #event {SESSION DISCONNECTED} {#gts #delay 10 #ses %0 tintin.net 4321}
2024-02-12-20:14:30[0m
2024-02-12-20:14:30[1;37mRelated[22;37m: all, port, run, sessionname, snoop, ssl and zap.[0m
2024-02-12-20:14:30
2024-02-12-20:14:48[0;37mreload_configs[0m
2024-02-12-20:14:50[0;37mtesting_send_move e w[0m
2024-02-12-20:14:50[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-20:15:29[0;37mreload_configs[0m
2024-02-12-20:15:30[0;37mtesting_send_move e w[0m
2024-02-12-20:15:30[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-20:15:51[0;37mreload_configs[0m
2024-02-12-20:15:52[0;37mtesting_send_move e w[0m
2024-02-12-20:15:52[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-12-20:16:28[0;37m#help run[0m
2024-02-12-20:16:28[1;37mCommand[22;37m: #run [1;37m{[22;37mname[1;37m} {[22;37mshell command[1;37m} {[22;37mfile[1;37m}
2024-02-12-20:16:28
2024-02-12-20:16:28[22;37m         The run command works much like the system command except that it
2024-02-12-20:16:28[22;37m         runs the command in a pseudo terminal. The run command also creates
2024-02-12-20:16:28[22;37m         a session that treats the given shell command as a server. This
2024-02-12-20:16:28[22;37m         allows you to run ssh, as well as any other shell application, with
2024-02-12-20:16:28[22;37m         full tintin scripting capabilities. If a file name is given the file
2024-02-12-20:16:28[22;37m         is loaded prior to execution.
2024-02-12-20:16:28
2024-02-12-20:16:28[1;37mExample[22;37m: #run {somewhere} {ssh someone@somewhere.com}
2024-02-12-20:16:28[1;37mExample[22;37m: #run {something} {tail -f chats.log}
2024-02-12-20:16:28[0m
2024-02-12-20:16:28[1;37mRelated[22;37m: all, port, session, sessionname, snoop, ssl and zap.[0m
2024-02-12-20:16:28
2024-02-12-20:16:45[0;37m#help script[0m
2024-02-12-20:16:45[1;37mCommand[22;37m: #script [1;37m{[22;37mvariable[1;37m} {[22;37mshell command[1;37m}
2024-02-12-20:16:45
2024-02-12-20:16:45[22;37m         The script command works much like the system command except that it
2024-02-12-20:16:45[22;37m         treats the generated echos as commands if no variable is provided.
2024-02-12-20:16:45
2024-02-12-20:16:45[22;37m         This is useful for running php, perl, ruby, and python scripts. You
2024-02-12-20:16:45[22;37m         can run these scripts either from file or from within tintin if the
2024-02-12-20:16:45[22;37m         scripting language allows this.
2024-02-12-20:16:45
2024-02-12-20:16:45[22;37m         If you provide a variable the output of the script is stored as a list.
2024-02-12-20:16:45
2024-02-12-20:16:45[1;37mExample[22;37m: #script {ruby -e 'print "#show hello world"'}
2024-02-12-20:16:45[1;37mExample[22;37m: #script {python -c 'print "#show hello world"'}
2024-02-12-20:16:45[1;37mExample[22;37m: #script {php -r 'echo "#show hello world"'}
2024-02-12-20:16:45[1;37mExample[22;37m: #script {path} {pwd};#show The path is $path[1].
2024-02-12-20:16:45[0m
2024-02-12-20:16:45[1;37mRelated[22;37m: format, function, local, math, replace and variable.[0m
2024-02-12-20:16:45
2024-02-12-20:17:21[0;37mreload_configs[0m
2024-02-12-20:17:23[0;37mtesting_send_move e w[0m
2024-02-12-20:17:24[0;37m[0m
2024-02-12-20:17:24> [0;37m[0m
2024-02-12-20:17:38> [0;37mtesting_send_move n s[0m
2024-02-12-20:18:03[0;37mtesting_send_move n s[0m
2024-02-12-20:18:13[0;37mtesting_send_move n s[0m
2024-02-12-20:18:34[0;37m#var neo4j_executer[0m
2024-02-12-20:18:34[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_executer[38;5;164m}
2024-02-12-20:18:34[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-12-20:18:34[38;5;164m{
2024-02-12-20:18:34[38;5;188m[38;5;164m    {[38;5;188m1[38;5;164m} [38;5;164m{[38;5;188mLostSoulNeo4j[38;5;164m}
2024-02-12-20:18:34[38;5;164m    {[38;5;188m2[38;5;164m} [38;5;164m{[38;5;188m\x7B"statements":[\x7B"statement":"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction \x7Bname: 'n'\x7D]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at \x7Bupdated_time: dateTime()\x7D]->(c), (c)-[:roomdescription \x7Bdesc:'Great room description', updated_time: dateTime()\x7D]->(c) REMOVE c.explored DELETE r RETURN c"\x7D, \x7B "statement": "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction \x7Bname: 's'\x7D]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at \x7Bupdated_time: dateTime()\x7D]->(c), (c)-[:roomdescription \x7Bdesc:'Great room description', updated_time: dateTime()\x7D]->(c) REMOVE c.explored DELETE r RETURN c"\x7D]\x7D[38;5;164m}
2024-02-12-20:18:34[38;5;164m}[0m
2024-02-12-20:18:47[0;37mtesting_send_move nadsasd sasdsad[0m
2024-02-12-20:18:48[0;37m#var neo4j_executer[0m
2024-02-12-20:18:48[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_executer[38;5;164m}
2024-02-12-20:18:48[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-12-20:18:48[38;5;164m{
2024-02-12-20:18:48[38;5;188m[38;5;164m    {[38;5;188m1[38;5;164m} [38;5;164m{[38;5;188mLostSoulNeo4j[38;5;164m}
2024-02-12-20:18:48[38;5;164m    {[38;5;188m2[38;5;164m} [38;5;164m{[38;5;188m\x7B"statements":[\x7B"statement":"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction \x7Bname: 'nadsasd'\x7D]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at \x7Bupdated_time: dateTime()\x7D]->(c), (c)-[:roomdescription \x7Bdesc:'Great room description', updated_time: dateTime()\x7D]->(c) REMOVE c.explored DELETE r RETURN c"\x7D, \x7B "statement": "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction \x7Bname: 'sasdsad'\x7D]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at \x7Bupdated_time: dateTime()\x7D]->(c), (c)-[:roomdescription \x7Bdesc:'Great room description', updated_time: dateTime()\x7D]->(c) REMOVE c.explored DELETE r RETURN c"\x7D]\x7D[38;5;164m}
2024-02-12-20:18:48[38;5;164m}[0m
2024-02-12-20:19:01[0;37m#var neo4j_executer[0m
2024-02-12-20:19:01[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_executer[38;5;164m}
2024-02-12-20:19:01[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-12-20:19:01[38;5;164m{
2024-02-12-20:19:01[38;5;188m[38;5;164m    {[38;5;188m1[38;5;164m} [38;5;164m{[38;5;188mLostSoulNeo4j[38;5;164m}
2024-02-12-20:19:01[38;5;164m    {[38;5;188m2[38;5;164m} [38;5;164m{[38;5;188m\x7B"statements":[\x7B"statement":"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction \x7Bname: 'nadsasd'\x7D]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at \x7Bupdated_time: dateTime()\x7D]->(c), (c)-[:roomdescription \x7Bdesc:'Great room description', updated_time: dateTime()\x7D]->(c) REMOVE c.explored DELETE r RETURN c"\x7D, \x7B "statement": "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction \x7Bname: 'sasdsad'\x7D]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at \x7Bupdated_time: dateTime()\x7D]->(c), (c)-[:roomdescription \x7Bdesc:'Great room description', updated_time: dateTime()\x7D]->(c) REMOVE c.explored DELETE r RETURN c"\x7D]\x7D[38;5;164m}
2024-02-12-20:19:01[38;5;164m}[0m
2024-02-12-20:20:12[0;37mtesting_send_move e e[0m
2024-02-12-20:20:19[0;37m#var neo4j_executer[0m
2024-02-12-20:20:19[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_executer[38;5;164m}
2024-02-12-20:20:19[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-12-20:20:19[38;5;164m{
2024-02-12-20:20:19[38;5;188m[38;5;164m    {[38;5;188m1[38;5;164m} [38;5;164m{[38;5;188mLostSoulNeo4j[38;5;164m}
2024-02-12-20:20:19[38;5;164m    {[38;5;188m2[38;5;164m} [38;5;164m{[38;5;188m\x7B"statements":[\x7B"statement":"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction \x7Bname: 'e'\x7D]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at \x7Bupdated_time: dateTime()\x7D]->(c), (c)-[:roomdescription \x7Bdesc:'Great room description', updated_time: dateTime()\x7D]->(c) REMOVE c.explored DELETE r RETURN c"\x7D, \x7B "statement": "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction \x7Bname: 'e'\x7D]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at \x7Bupdated_time: dateTime()\x7D]->(c), (c)-[:roomdescription \x7Bdesc:'Great room description', updated_time: dateTime()\x7D]->(c) REMOVE c.explored DELETE r RETURN c"\x7D]\x7D[38;5;164m}
2024-02-12-20:20:19[38;5;164m}[0m
2024-02-12-20:20:37[0;37mtesting_send_move e e[0m
2024-02-12-20:20:41[0;37m[0m
2024-02-12-20:21:06> [0;37mtesting_send_move w w [0m
2024-02-12-20:21:22[0;37m#var neo4j_executer[0m
2024-02-12-20:21:22[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_executer[38;5;164m}
2024-02-12-20:21:22[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-12-20:21:22[38;5;164m{
2024-02-12-20:21:22[38;5;188m[38;5;164m    {[38;5;188m1[38;5;164m} [38;5;164m{[38;5;188mLostSoulNeo4j[38;5;164m}
2024-02-12-20:21:22[38;5;164m    {[38;5;188m2[38;5;164m} [38;5;164m{[38;5;188m\x7B"statements":[\x7B"statement":"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction \x7Bname: 'w'\x7D]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at \x7Bupdated_time: dateTime()\x7D]->(c), (c)-[:roomdescription \x7Bdesc:'Great room description', updated_time: dateTime()\x7D]->(c) REMOVE c.explored DELETE r RETURN c"\x7D, \x7B "statement": "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction \x7Bname: 'w '\x7D]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at \x7Bupdated_time: dateTime()\x7D]->(c), (c)-[:roomdescription \x7Bdesc:'Great room description', updated_time: dateTime()\x7D]->(c) REMOVE c.explored DELETE r RETURN c"\x7D]\x7D[38;5;164m}
2024-02-12-20:21:22[38;5;164m    {[38;5;188m3[38;5;164m} [38;5;164m{[38;5;188m\x7B"results":[\x7B"columns":["c"],"data":[\x7B"row":[\x7B"updated_time":"2024-02-12T19:21:06.513Z","certain_hash_location":"B"\x7D],"meta":[\x7B"id":159,"elementId":"4:083bf3f5-44f2-4aef-85ca-83f8736b1028:159","type":"node","deleted":false\x7D]\x7D]\x7D,\x7B"columns":["c"],"data":[]\x7D],"errors":[],"lastBookmarks":["FB:kcwQCDvz9UTySu+FyoP4c2sQKMk66JA="]\x7D[38;5;164m}
2024-02-12-20:21:22[38;5;164m}[0m
2024-02-12-20:21:52[0;37m#help script[0m
2024-02-12-20:21:52[1;37mCommand[22;37m: #script [1;37m{[22;37mvariable[1;37m} {[22;37mshell command[1;37m}
2024-02-12-20:21:52
2024-02-12-20:21:52[22;37m         The script command works much like the system command except that it
2024-02-12-20:21:52[22;37m         treats the generated echos as commands if no variable is provided.
2024-02-12-20:21:52
2024-02-12-20:21:52[22;37m         This is useful for running php, perl, ruby, and python scripts. You
2024-02-12-20:21:52[22;37m         can run these scripts either from file or from within tintin if the
2024-02-12-20:21:52[22;37m         scripting language allows this.
2024-02-12-20:21:52
2024-02-12-20:21:52[22;37m         If you provide a variable the output of the script is stored as a list.
2024-02-12-20:21:52
2024-02-12-20:21:52[1;37mExample[22;37m: #script {ruby -e 'print "#show hello world"'}
2024-02-12-20:21:52[1;37mExample[22;37m: #script {python -c 'print "#show hello world"'}
2024-02-12-20:21:52[1;37mExample[22;37m: #script {php -r 'echo "#show hello world"'}
2024-02-12-20:21:52[1;37mExample[22;37m: #script {path} {pwd};#show The path is $path[1].
2024-02-12-20:21:52[0m
2024-02-12-20:21:52[1;37mRelated[22;37m: format, function, local, math, replace and variable.[0m
2024-02-12-20:21:52
2024-02-12-20:21:54[0;37m#help run[0m
2024-02-12-20:21:54[1;37mCommand[22;37m: #run [1;37m{[22;37mname[1;37m} {[22;37mshell command[1;37m} {[22;37mfile[1;37m}
2024-02-12-20:21:54
2024-02-12-20:21:54[22;37m         The run command works much like the system command except that it
2024-02-12-20:21:54[22;37m         runs the command in a pseudo terminal. The run command also creates
2024-02-12-20:21:54[22;37m         a session that treats the given shell command as a server. This
2024-02-12-20:21:54[22;37m         allows you to run ssh, as well as any other shell application, with
2024-02-12-20:21:54[22;37m         full tintin scripting capabilities. If a file name is given the file
2024-02-12-20:21:54[22;37m         is loaded prior to execution.
2024-02-12-20:21:54
2024-02-12-20:21:54[1;37mExample[22;37m: #run {somewhere} {ssh someone@somewhere.com}
2024-02-12-20:21:54[1;37mExample[22;37m: #run {something} {tail -f chats.log}
2024-02-12-20:21:54[0m
2024-02-12-20:21:54[1;37mRelated[22;37m: all, port, session, sessionname, snoop, ssl and zap.[0m
2024-02-12-20:21:54
2024-02-12-20:47:56
2024-02-12-20:47:56[33m    Classa[0m walks in from the south.
2024-02-12-20:50:42
2024-02-12-20:50:42    You have been idle thirty minutes.  Do something!
2024-02-12-20:52:40
2024-02-12-20:52:40[33m    Classa[0m walks southward.
2024-02-12-20:55:42
2024-02-12-20:55:42    You have been idle thirty-five minutes.  In ten you will be forced to quit!  To turn off this behavior, see 'help switch idle disincarnation'.
2024-02-12-20:57:24
2024-02-12-20:57:24[33m    Classa[0m walks in from the south.
2024-02-12-20:58:24
2024-02-12-20:58:24[1;34m[[0;1;37mO[0;37mO[0;1;30mC [0;1;37mEithne[0;1;34m][0m "[0m"You feel the sensation of invisible fingernails being roughly dragged across your left foot. There are suddenly trails of pain running all through your body, changing unpredictably in intensity." Hmmm. That doesn't seem good.[0m"
2024-02-12-21:00:41
2024-02-12-21:00:41[1;34m[[0;1;37mO[0;37mO[0;1;30mC [0;1;37mMarcosy[0;1;34m][0m "[0mI really need to code a thing where strong NPCs can resist being kazzed[0m"
2024-02-12-21:00:42
2024-02-12-21:00:42    You have been idle forty minutes.  In five you will be logged off!  To turn off this behavior, see 'help switch idle disincarnation'.
2024-02-12-21:00:54
2024-02-12-21:00:54[1;34m[[0;1;37mO[0;37mO[0;1;30mC [0;1;37mMarcosy[0;1;34m][0m "[0mit's annoying otherwise[0m"
2024-02-12-21:02:08
2024-02-12-21:02:08[33m    Classa[0m walks southward.
2024-02-12-21:05:42
2024-02-12-21:05:42    You have been idle forty-five minutes.  Time to go...
2024-02-12-21:05:42
2024-02-12-21:05:42    See you again soon!
2024-02-12-21:05:42[0m#SESSION 'ls' DIED.[0m
