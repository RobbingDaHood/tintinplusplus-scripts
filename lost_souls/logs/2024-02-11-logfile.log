2024-02-11-17:13:13                             [1;37mWe[0;37mlc[0;1;30mom[0;37me t[0;1;37mo t[0;37mhe [0;1;30mWo[0;37mrl[0;1;37md[0m
2024-02-11-17:13:13                                      [1;30mof[0m
2024-02-11-17:13:13                                  [1;37mLo[0;37mst [0;1;30mSo[0;37mul[0;1;37ms[0m
2024-02-11-17:13:13
2024-02-11-17:13:13  [1;30mW_w w w w w_W[0m                       [1;37m|[0m}[1;31m=[0m[31m-[0m                      [1;30mW_w w w w w_W[0m
2024-02-11-17:13:13  `[1;30m7~[0mY[1;30m~[0mY[1;30m~[0mY[1;30m~[0mY[1;30m~P[0m'                       [1;37m|[0m                         `[1;30m7~[0mY[1;30m~[0mY[1;30m~[0mY[1;30m~[0mY[1;30m~P[0m'
2024-02-11-17:13:13    [1;30ml[0m [1;34m.[0m      [1;30ml[0m                        [1;37m|[0m                           [1;30ml[0m    [1;34m.[0m  [1;30ml[0m
2024-02-11-17:13:13    [1;30ml[0m [1;34m:[0m [1;30mW_w w w w_W[0m                [1;30ml[0m'[1;32m~~~[0m`[1;30ml[0m                [1;30mW_w w w w_W[0m  [1;34m:.[0m [1;30ml[0m
2024-02-11-17:13:13    [1;30ml[0m [1;34m;[0m `[1;30m7~[0mY[1;30m~[0mY[1;30m~[0mY[1;30m~P[0m'          [1;30m____.-^-----^-.____[0m          '[1;30m7~[0mY[1;30m~[0mY[1;30m~[0mY[1;30m~P[0m'  [1;34m:[0m  [1;30ml[0m
2024-02-11-17:13:13    [1;30ml[0m    [1;30m:-[0mI[1;30m-[0mI[1;30m-[0mI[1;30m-:[0m         .[1;30m'~~~~~~~~~~~~~~~~~~~[0m`.         [1;30m:-[0mI[1;30m-[0mI[1;30m-[0mI[1;30m-:[0m   [1;34m`[0m  [1;30ml[0m
2024-02-11-17:13:13[33m-[0m [33m-[0m [1;30ml[0m .[1;30m-[0m.[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m [1;30m-[0m [1;30m-[0m [1;30m-[0m [1;30m-[0m |   _____  |  _____   | [1;30m-[0m [1;30m-[0m [1;30m-[0m [1;30m-[0m [1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m  .[1;30m-[0m. [1;30ml[0m [33m-[0m [33m-[0m
2024-02-11-17:13:13[33m.[0m   [1;30ml[0m | `[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m  .  '   |  [1;30m`[0mWWWWW[1;30m'[0m | [1;30m`[0mWWWWW[1;30m'[0m  |  ,`   . [1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_/./| [1;30ml[0m   [1;33m.[0m
2024-02-11-17:13:13 [1;33m'[0m  [1;30ml[0m_|  [1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m[1;30m_m_m_m_m_m_m_MMMMM[0m     [1;30mMMMMM_m_m_m_m_m_m_[0m[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_/' |_[1;30ml[0m  [33m.[0m
2024-02-11-17:13:13      `\ [1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m-------------WWWWW[33m/~[0m[1;33mY[0m[33m~\[0mWWWWW-------------[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m   /'    [1;33m'[0m
2024-02-11-17:13:13[33m`[0m [1;33m.[0m [33m.[0m   `|_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_____________[1;30mMMMMM[0m[33m__[0m[1;30m|[0m[33m__[0m[1;30mMMMMM[0m_____________[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_/'  [33m,  .
2024-02-11-17:13:13     [0;1;33m`[0;33m .  [0;1;30m~~~~~~~[0;33m   [0;1;33m.[0;33m      .   [0;1;30m~~~~~[0;33m  ^  [0;1;30m~~~~~[0;33m  [0;1;33m.[0;33m        ,  [0;1;30m~~~~~~~[0;33m    . [0;1;33m`[0;33m
2024-02-11-17:13:13 '   [0;1;33m.[0;33m    .[0;1;33m'[0;33m    .    `  .     [0;1;33m.[0;33m '    .   [0;1;33m.[0;33m`      `   .  [0;1;33m.[0;33m     .    ,       [0;1;33m.[0;33m  '
2024-02-11-17:13:13[0m
2024-02-11-17:13:13    There are currently 12 atmai online.
2024-02-11-17:13:13
2024-02-11-17:13:13    If you are new to Lost Souls, simply type 'new' as your name. 
2024-02-11-17:13:13
2024-02-11-17:13:14[1;37mName[0m: [1;37mPassword[0m: 
2024-02-11-17:13:14
2024-02-11-17:13:14    You last logged in at Fri Feb 09 16:16:29 2024 from 169.150.218.83#85.191.191.7.
2024-02-11-17:13:14
2024-02-11-17:13:14                          [1;34m[ [0;1;37mLost Souls Atman Menu[0;1;34m ][0m
2024-02-11-17:13:14[1;34m[[0;1;37m1[0;1;34m] Incarnate as Robbingdahood[0m         [1;34m[[0;1;37mA[0;1;34m] Account Settings Menu[0m
2024-02-11-17:13:14[1;34m[[0;1;37mC[0;1;34m] Create a New Character[0m             [1;34m[[0;1;37mE[0;1;34m] Set Email Address[0m
2024-02-11-17:13:14[1;34m[[0;1;37mL[0;1;34m] Incarnation Lock[0m                   [1;34m[[0;1;37mM[0;1;34m] Check for New Mail[0m
2024-02-11-17:13:14[1;34m[[0;1;37mN[0;1;34m] Lost Souls News[0m                    [1;34m[[0;1;37mP[0;1;34m] Set Password[0m
2024-02-11-17:13:14[1;34m[[0;1;37mQ[0;1;34m] Quit Lost Souls[0m                    [1;34m[[0;1;37mR[0;1;34m] Remove Atman[0m
2024-02-11-17:13:14[1;34m[[0;1;37mT[0;1;34m] Terminal Setup Menu[0m                [1;34m[[0;1;37mW[0;1;34m] Who's On[0m
2024-02-11-17:13:14[1;34m[[0;1;37m?[0;1;34m] Show Menu[0m                          
2024-02-11-17:13:14
2024-02-11-17:13:15[1;34m][0m [0;37m1[0m
2024-02-11-17:13:15
2024-02-11-17:13:15    You last played on Fri Feb 09 16:03:23 2024.
2024-02-11-17:13:15
2024-02-11-17:13:15    a storage room [1;34m[s][0m
2024-02-11-17:13:15
2024-02-11-17:13:15    This is a well-lit, narrow, rectangular room.  The exit to the south leads out into the main guildhall.  There are a whole bunch of drawers and cupboards lining the high walls from floor to ceiling on both sides and along the back wall.  Each one appears to be locked and well cared for.  There are [31mred wooden ladders[0m on each wall.  There are a bunch of boxes stacked neatly in the corner.  
2024-02-11-17:13:15
2024-02-11-17:13:15    The area is reasonably well-lit.  
2024-02-11-17:13:15
2024-02-11-17:13:15    The only obvious exit is south.
2024-02-11-17:13:15
2024-02-11-17:13:15    There have been [1;37mone thousand four hundred eighty-nine events[0m affecting you since the last time you checked; you can use [1;37m'show events since'[0m to review them.
2024-02-11-17:13:16> [0;37m[0m
2024-02-11-17:13:16> [0;37m[0m
2024-02-11-17:13:28> [0;37msetop_neo4j[0m
2024-02-11-17:13:28[0m#TRYING TO LAUNCH 'startup_neo4j' RUNNING 'docker start LostSoulNeo4j || docker run \ --publish=7474:7474 --publish=7687:7687 \ --volume=$HOME/neo4j/data:/data \ --volume=$HOME/neo4j/logs:/logs \ --volume=$HOME/neo4j/conf:/conf \ --env=NEO4J_AUTH=none \ --name=LostSoulNeo4j \ -e NEO4J_apoc_export_file_enabled=true \ -e NEO4J_apoc_import_file_enabled=true \ -e NEO4J_apoc_import_file_use__neo4j__config=true \ -e NEO4J_PLUGINS=\[\"apoc\"\] \ -d \ neo4j'.[0m
2024-02-11-17:13:29[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-17:13:30[0;37m[0m
2024-02-11-17:13:30> [0;37m[0m
2024-02-11-17:13:30> [0;37m[0m
2024-02-11-17:13:33> [0;37msetop_neo4j[0m
2024-02-11-17:13:33[0m#TRYING TO LAUNCH 'startup_neo4j' RUNNING 'docker start LostSoulNeo4j || docker run \ --publish=7474:7474 --publish=7687:7687 \ --volume=$HOME/neo4j/data:/data \ --volume=$HOME/neo4j/logs:/logs \ --volume=$HOME/neo4j/conf:/conf \ --env=NEO4J_AUTH=none \ --name=LostSoulNeo4j \ -e NEO4J_apoc_export_file_enabled=true \ -e NEO4J_apoc_import_file_enabled=true \ -e NEO4J_apoc_import_file_use__neo4j__config=true \ -e NEO4J_PLUGINS=\[\"apoc\"\] \ -d \ neo4j'.[0m
2024-02-11-17:13:33[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-17:13:34[0;37m[0m
2024-02-11-17:13:34> [0;37m[0m
2024-02-11-17:14:07> [0;37msetop_neo4j[0m
2024-02-11-17:14:07[0m#TRYING TO LAUNCH 'startup_neo4j' RUNNING 'docker start LostSoulNeo4j || docker run \ --publish=7474:7474 --publish=7687:7687 \ --volume=$HOME/neo4j/data:/data \ --volume=$HOME/neo4j/logs:/logs \ --volume=$HOME/neo4j/conf:/conf \ --env=NEO4J_AUTH=none \ --name=LostSoulNeo4j \ -e NEO4J_apoc_export_file_enabled=true \ -e NEO4J_apoc_import_file_enabled=true \ -e NEO4J_apoc_import_file_use__neo4j__config=true \ -e NEO4J_PLUGINS=\[\"apoc\"\] \ -d \ neo4j'.[0m
2024-02-11-17:14:07[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-17:14:26[0;37mtesting_send_move w[0m
2024-02-11-17:14:26[0m################################# LIST OPTIONS #################################[0m
2024-02-11-17:14:26[0m  [ADD                     ] Add items to a list[0m
2024-02-11-17:14:26[0m  [CLEAR                   ] Clear a list[0m
2024-02-11-17:14:26[0m  [COLLAPSE                ] Collapse the list into a variable[0m
2024-02-11-17:14:26[0m  [CREATE                  ] Create a list with given items[0m
2024-02-11-17:14:26[0m  [DELETE                  ] Delete a list item with given index[0m
2024-02-11-17:14:26[0m  [EXPLODE                 ] Explode the variable into a list[0m
2024-02-11-17:14:26[0m  [FILTER                  ] Filter a list with given regex[0m
2024-02-11-17:14:26[0m  [FIND                    ] Find a list item with given regex[0m
2024-02-11-17:14:26[0m  [GET                     ] Retrieve a list item with given index[0m
2024-02-11-17:14:26[0m  [INDEXATE                ] Indexate a list table for sorting[0m
2024-02-11-17:14:26[0m  [INSERT                  ] Insert an item at given index[0m
2024-02-11-17:14:26[0m  [NUMERATE                ] Turn a table into a list[0m
2024-02-11-17:14:26[0m  [ORDER                   ] Sort a list table numerically[0m
2024-02-11-17:14:26[0m  [REVERSE                 ] Sort a list table in reverse order[0m
2024-02-11-17:14:26[0m  [SET                     ] Change a list item at given index[0m
2024-02-11-17:14:26[0m  [SHUFFLE                 ] Sort a list table in random order[0m
2024-02-11-17:14:26[0m  [SIMPLIFY                ] Turn a list table into a simple list[0m
2024-02-11-17:14:26[0m  [SORT                    ] Sort a list table alphabetically[0m
2024-02-11-17:14:26[0m  [TOKENIZE                ] Create a list with given characters[0m
2024-02-11-17:14:26[0m################################################################################[0m
2024-02-11-17:14:26[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d  "{\"statements\":["};#foreach {}{#cat {neo4j_body} {\"statement\":\"$neo4j_statement\"}}#cat {neo4j_body} {"]}" | jq .'.[0m
2024-02-11-17:14:26[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-17:14:34[0;37m[0m
2024-02-11-17:14:51> [0;37m#help list[0m
2024-02-11-17:14:51[1;37mCommand[22;37m: #list [1;37m{[22;37mvariable[1;37m} {[22;37moption[1;37m} {[22;37margument[1;37m}[22;37m
2024-02-11-17:14:51
2024-02-11-17:14:51         #list {var} {add} {item}               Add {item} to the list
2024-02-11-17:14:51         #list {var} {clear}                    Empty the given list
2024-02-11-17:14:51         #list {var} {collapse} {separator}     Turn list into a variable
2024-02-11-17:14:51         #list {var} {create} {items}           Create a list using {items}
2024-02-11-17:14:51         #list {var} {delete} {index} {amount}  Delete the item at {index},
2024-02-11-17:14:51                                                the {amount} is optional.
2024-02-11-17:14:51         #list {var} {explode} {separator}      Turn variable into a list
2024-02-11-17:14:51         #list {var} {indexate}                 Index a list table for sorting
2024-02-11-17:14:51         #list {var} {insert} {index} {string}  Insert {string} at given index
2024-02-11-17:14:51         #list {var} {filter} {keep} {remove}   Filter with keep / remove regex
2024-02-11-17:14:51         #list {var} {find} {regex} {variable}  Return the found index
2024-02-11-17:14:51         #list {var} {get} {index} {variable}   Copy an item to {variable}
2024-02-11-17:14:51         #list {var} {numerate}                 Turn a table into a list
2024-02-11-17:14:51         #list {var} {order} {string}           Insert item in numerical order
2024-02-11-17:14:51         #list {var} {shuffle}                  Shuffle the list
2024-02-11-17:14:51         #list {var} {set} {index} {string}     Change the item at {index}
2024-02-11-17:14:51         #list {var} {simplify} {string}        Turn list into a simple list
2024-02-11-17:14:51         #list {var} {size} {variable}          Copy list size to {variable}
2024-02-11-17:14:51         #list {var} {sort} {string}            Insert item in alphabetic order
2024-02-11-17:14:51         #list {var} {tokenize} {string}        Create a character list
2024-02-11-17:14:51
2024-02-11-17:14:51         The index should be between +1 and the list's size. You can also give
2024-02-11-17:14:51         a negative value, in which case -1 equals the last item in the list, -2
2024-02-11-17:14:51         the second last, etc.
2024-02-11-17:14:51
2024-02-11-17:14:51         When inserting an item a positive index will prepend the item at the
2024-02-11-17:14:51         given index, while a negative index will append the item.
2024-02-11-17:14:51
2024-02-11-17:14:51         The add and create options allow using multiple items, as well
2024-02-11-17:14:51         as semicolon separated items.
2024-02-11-17:14:51
2024-02-11-17:14:51         A size of 0 is returned for an empty or non-existent list. You can
2024-02-11-17:14:51         directly access the size of a list using &var[].
2024-02-11-17:14:51
2024-02-11-17:14:51         You can directly access elements in a list variable using $var[+1],
2024-02-11-17:14:51         $var[+2], $var[-1], etc.
2024-02-11-17:14:51[0m
2024-02-11-17:14:51[1;37mRelated[22;37m: break, continue, foreach, loop, parse, repeat, return and while.[0m
2024-02-11-17:14:51
2024-02-11-17:15:13[0;37mreload_configs[0m
2024-02-11-17:15:13[0m#WARNING: #READ {ls_v2.tin} MISSING SEMICOLON ON LINE 257.[0m
2024-02-11-17:15:25[0;37mreload_configs[0m
2024-02-11-17:15:28[0;37mtesting_send_move w[0m
2024-02-11-17:15:28[0m################################# LIST OPTIONS #################################[0m
2024-02-11-17:15:28[0m  [ADD                     ] Add items to a list[0m
2024-02-11-17:15:28[0m  [CLEAR                   ] Clear a list[0m
2024-02-11-17:15:28[0m  [COLLAPSE                ] Collapse the list into a variable[0m
2024-02-11-17:15:28[0m  [CREATE                  ] Create a list with given items[0m
2024-02-11-17:15:28[0m  [DELETE                  ] Delete a list item with given index[0m
2024-02-11-17:15:28[0m  [EXPLODE                 ] Explode the variable into a list[0m
2024-02-11-17:15:28[0m  [FILTER                  ] Filter a list with given regex[0m
2024-02-11-17:15:28[0m  [FIND                    ] Find a list item with given regex[0m
2024-02-11-17:15:28[0m  [GET                     ] Retrieve a list item with given index[0m
2024-02-11-17:15:28[0m  [INDEXATE                ] Indexate a list table for sorting[0m
2024-02-11-17:15:28[0m  [INSERT                  ] Insert an item at given index[0m
2024-02-11-17:15:28[0m  [NUMERATE                ] Turn a table into a list[0m
2024-02-11-17:15:28[0m  [ORDER                   ] Sort a list table numerically[0m
2024-02-11-17:15:28[0m  [REVERSE                 ] Sort a list table in reverse order[0m
2024-02-11-17:15:28[0m  [SET                     ] Change a list item at given index[0m
2024-02-11-17:15:28[0m  [SHUFFLE                 ] Sort a list table in random order[0m
2024-02-11-17:15:28[0m  [SIMPLIFY                ] Turn a list table into a simple list[0m
2024-02-11-17:15:28[0m  [SORT                    ] Sort a list table alphabetically[0m
2024-02-11-17:15:28[0m  [TOKENIZE                ] Create a list with given characters[0m
2024-02-11-17:15:28[0m################################################################################[0m
2024-02-11-17:15:28[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d  "{\"statements\":["};#foreach {}{#cat {neo4j_body} {\"statement\":\"$neo4j_statement\"}};#cat {neo4j_body} {"]}" | jq .'.[0m
2024-02-11-17:15:28[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-17:15:53[0;37m#var statments_for_neo4j[0m
2024-02-11-17:15:53[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mstatments_for_neo4j[38;5;164m} {[38;5;188m[38;5;164m}[0m
[0m
2024-02-11-17:16:12[0;37mreload_configs[0m
2024-02-11-17:16:13[0;37m#var statments_for_neo4j[0m
2024-02-11-17:16:13[0m#VARIABLE: NO MATCH(ES) FOUND FOR {statments_for_neo4j}.[0m
2024-02-11-17:16:15[0;37mtesting_send_move w[0m
2024-02-11-17:16:15[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d  "{\"statements\":["};#foreach {{1}{MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r}}{#cat {neo4j_body} {\"statement\":\"$neo4j_statement\"}};#cat {neo4j_body} {"]}" | jq .'.[0m
2024-02-11-17:16:15[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-17:16:20[0;37m[0m
2024-02-11-17:18:05> [0;37mreload_configs[0m
2024-02-11-17:18:08[0;37mtesting_send_move w[0m
2024-02-11-17:18:08[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d  "{\"statements\":["};#foreach {{1}{MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r}} {neo4j_statement}{#cat {neo4j_body} {"\"statement\":\"$neo4j_statement\""}};#cat {neo4j_body} {"]}" | jq .'.[0m
2024-02-11-17:18:08[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-17:46:20
2024-02-11-17:46:20[1;34m[[0;1;37mO[0;37mO[0;1;30mC [0;1;37mImplorer[0;1;34m][0m "[0mWe are free of Fezzik's dumb quotes[0m"
2024-02-11-17:46:21
2024-02-11-17:46:21    You have been idle thirty minutes.  Do something!
2024-02-11-17:51:21
2024-02-11-17:51:21    You have been idle thirty-five minutes.  In ten you will be forced to quit!  To turn off this behavior, see 'help switch idle disincarnation'.
2024-02-11-17:56:21
2024-02-11-17:56:21    You have been idle forty minutes.  In five you will be logged off!  To turn off this behavior, see 'help switch idle disincarnation'.
2024-02-11-18:01:21
2024-02-11-18:01:21    You have been idle forty-five minutes.  Time to go...
2024-02-11-18:01:21
2024-02-11-18:01:21    See you again soon!
2024-02-11-18:01:21[0m#SESSION 'ls' DIED.[0m
2024-02-11-19:02:21                         _/\          __/ . ..' .,  / .' _/ .  '  ' . '  "
2024-02-11-19:02:21Welcome to the          / / ~\_   _  / . __-  ~  ^ | '  '  .  /  >   .  ;
2024-02-11-19:02:21   World of     /\   _-~ / | \ \ / ~~ /  /  .  >  /  \  : :  '  '  .,'  '.
2024-02-11-19:02:21  Lost Souls _-~  ~=_  .~ ~^ .- /   \/ .  /   /  | ^ .:  '  ~  ~-_  _--_ ~
2024-02-11-19:02:21           .~        ~.  /  | _/ /~^\__  |  // <~   v   . _~ -~   ~~ ::.\
2024-02-11-19:02:21          /     /\     \' .. ~  ~ .: . \/  =~  / \ /   ' ' /~\ .. ~> ',  |
2024-02-11-19:02:21    /\   (     <  >     )   /\ ' .-~-__/ \_  .' __/  ~~   ~ ..~  ~  ,  <_
2024-02-11-19:02:21  _-  -_  \     \/     /  _-  -_/  ..      \___/     . /~\__  ~:_  _/ /  |
2024-02-11-19:02:21 (      )  ~-________-~  (      ) ~   ~-_____---~~---__     \ .. ~~  ~  /
2024-02-11-19:02:21  ~----~     |      |     ~----~ /     '     \   /~\   \  \\ |   ', ." | .
2024-02-11-19:02:21   |# |  .   | ~  ^ |    . |  |  ~~            ~-___      v >  >  _-~~ . ,
2024-02-11-19:02:21   |  |,   . |    ~ |  ,   | #|     __-~~~~~--~~--__~~~----________   /  '
2024-02-11-19:02:21   |  |  __------------__  |  | _-~~                ~--___   _-~-_ ~~--_ /
2024-02-11-19:02:21~~~~~~~~~__ <  >  <  > __~~~~~~~~~~\\   .  -   ..         ~-~     ~~~----
2024-02-11-19:02:21. -_ ._ - .~~~------~~~ - . _. _ .- \\    ~ ~~--       ___     __
2024-02-11-19:02:21 .  . - . _ . _/][\_  -.  -  _    - ]|          ~~    ~   ~~--=__=__
2024-02-11-19:02:21_  _    - .  /  ][  \   - _.  . _ . ]|            ~~ ~              ~~-_
2024-02-11-19:02:21 ._ .- -. ._ | .][. |._.   _. -. - _]|          .     '   ,         .
2024-02-11-19:02:21_=___=___=___|  ][  |___=___=___=___]| .  .   .     .        .    .     .
2024-02-11-19:02:21=============|--][--|================\\       .        .       .      . 
2024-02-11-19:02:21
2024-02-11-19:02:21    There are currently 14 atmai online.
2024-02-11-19:02:21
2024-02-11-19:02:21    If you are new to Lost Souls, simply type 'new' as your name. 
2024-02-11-19:02:21
2024-02-11-19:02:21[1;37mName[0m: [1;37mPassword[0m: 
2024-02-11-19:02:21
2024-02-11-19:02:21    You last logged in at Sun Feb 11 11:13:13 2024 from 169.150.218.83#85.191.191.7.
2024-02-11-19:02:21
2024-02-11-19:02:21                          [1;34m[ [0;1;37mLost Souls Atman Menu[0;1;34m ][0m
2024-02-11-19:02:21[1;34m[[0;1;37m1[0;1;34m] Incarnate as Robbingdahood[0m         [1;34m[[0;1;37mA[0;1;34m] Account Settings Menu[0m
2024-02-11-19:02:21[1;34m[[0;1;37mC[0;1;34m] Create a New Character[0m             [1;34m[[0;1;37mE[0;1;34m] Set Email Address[0m
2024-02-11-19:02:21[1;34m[[0;1;37mL[0;1;34m] Incarnation Lock[0m                   [1;34m[[0;1;37mM[0;1;34m] Check for New Mail[0m
2024-02-11-19:02:21[1;34m[[0;1;37mN[0;1;34m] Lost Souls News[0m                    [1;34m[[0;1;37mP[0;1;34m] Set Password[0m
2024-02-11-19:02:21[1;34m[[0;1;37mQ[0;1;34m] Quit Lost Souls[0m                    [1;34m[[0;1;37mR[0;1;34m] Remove Atman[0m
2024-02-11-19:02:21[1;34m[[0;1;37mT[0;1;34m] Terminal Setup Menu[0m                [1;34m[[0;1;37mW[0;1;34m] Who's On[0m
2024-02-11-19:02:21[1;34m[[0;1;37m?[0;1;34m] Show Menu[0m                          
2024-02-11-19:02:21
2024-02-11-19:02:22[1;34m][0m [0;37m1[0m
2024-02-11-19:02:22
2024-02-11-19:02:22    You last played on Sun Feb 11 11:13:15 2024.
2024-02-11-19:02:22
2024-02-11-19:02:22    a storage room [1;34m[s][0m
2024-02-11-19:02:22
2024-02-11-19:02:22    This is a well-lit, narrow, rectangular room.  The exit to the south leads out into the main guildhall.  There are a whole bunch of drawers and cupboards lining the high walls from floor to ceiling on both sides and along the back wall.  Each one appears to be locked and well cared for.  There are [31mred wooden ladders[0m on each wall.  There are a bunch of boxes stacked neatly in the corner.  
2024-02-11-19:02:22
2024-02-11-19:02:22    The area is reasonably well-lit.  
2024-02-11-19:02:22
2024-02-11-19:02:22    You see [33mBirsno Risuthoson the guard[0m.  
2024-02-11-19:02:22
2024-02-11-19:02:22    The only obvious exit is south.
2024-02-11-19:02:22
2024-02-11-19:02:22    There have been [1;37mone thousand four hundred eighty-nine events[0m affecting you since the last time you checked; you can use [1;37m'show events since'[0m to review them.
2024-02-11-19:02:24> [0;37m[0m
2024-02-11-19:02:24> [0;37m[0m
2024-02-11-19:02:24> [0;37m[0m
2024-02-11-19:02:36> 
2024-02-11-19:02:36[1;34m[[0;1;37mO[0;37mO[0;1;30mC [0;1;37mKaess[0;1;34m][0m "[0monly lost a bit of skill in anglic and a couple other non-crucial skills, but got 2 exp buffs, a wild talent, an item hoard and some companions[0m"
2024-02-11-19:02:39[0;37mtesting_send_move 2[0m
2024-02-11-19:02:39[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d "$neo4j_bodyw | jq .'.[0m
2024-02-11-19:02:39[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-19:02:50
2024-02-11-19:02:50[33m    Birsno[0m glances around.
2024-02-11-19:02:54
2024-02-11-19:02:54[33m    Birsno[0m nods to you.
2024-02-11-19:03:03[0;37m#var neo4j_body[0m
2024-02-11-19:03:03[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_body[38;5;164m}
2024-02-11-19:03:03[38;5;164m{
2024-02-11-19:03:03[38;5;188m[38;5;164m    {[38;5;188m"statements\":[[38;5;164m} [38;5;164m{[38;5;188m[38;5;164m}
2024-02-11-19:03:03[38;5;164m    {[38;5;188m#cat[38;5;164m} [38;5;164m{[38;5;188mneo4j_body[38;5;164m}
2024-02-11-19:03:03[38;5;164m    {[38;5;188m#foreach[38;5;164m} 
2024-02-11-19:03:03[38;5;164m    {
2024-02-11-19:03:03[38;5;164m        {[38;5;188m1[38;5;164m} [38;5;164m{[38;5;188mMATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: '2'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r[38;5;164m}
2024-02-11-19:03:03[38;5;164m    }
2024-02-11-19:03:03[38;5;164m    {[38;5;188m][38;5;164m} [38;5;164m{[38;5;188m[38;5;164m}
2024-02-11-19:03:03[38;5;164m    {[38;5;188mneo4j_statement[38;5;164m} [38;5;164m{[38;5;188m#cat {neo4j_body} {\"statement\":\"$neo4j_statement\"}[38;5;164m}
2024-02-11-19:03:03[38;5;164m}[0m
2024-02-11-19:03:14[0;37m#showme {$neo4j_body}[0m
2024-02-11-19:03:14[0m{"statements":[}{}{#cat}{neo4j_body}{#foreach}{{1}{MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: '2'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r}}{]}{}{neo4j_statement}{#cat {neo4j_body} {"statement":"$neo4j_statement"}}[0m
2024-02-11-19:03:28
2024-02-11-19:03:28[33m    Birsno[0m peers around.
2024-02-11-19:04:38[0;37m#showme {$neo4j_body}[0m
2024-02-11-19:04:38[0m{"statements":[}{}{#cat}{neo4j_body}{#foreach}{{1}{MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: '2'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r}}{]}{}{neo4j_statement}{#cat {neo4j_body} {"statement":"$neo4j_statement"}}[0m
2024-02-11-19:04:48
2024-02-11-19:04:48[33m    Birsno[0m walks southward.
2024-02-11-19:05:19[0;37mre[0m
2024-02-11-19:05:19
2024-02-11-19:05:19    You don't know how to 're'.
2024-02-11-19:05:25> [0;37mreload_configs[0m
2024-02-11-19:05:25[0m#WARNING: #READ {ls_v2.tin} MISSING SEMICOLON ON LINE 261.[0m
2024-02-11-19:05:25[0m#ERROR: #READ {ls_v2.tin} - MISSING 1 '{' BETWEEN LINE 251 AND 261.[0m
2024-02-11-19:05:40
2024-02-11-19:05:40[1;34m[[0;1;37mO[0;37mO[0;1;30mC [0;1;37mEithne[0;1;34m][0m "[0mNice. I can try to sense your talents if you like.[0m"
2024-02-11-19:05:47
2024-02-11-19:05:47[1;34m[[0;1;37mO[0;37mO[0;1;30mC [0;1;37mKaess[0;1;34m][0m "[0msure, sec.[0m"
2024-02-11-19:06:19[0;37m    #variable {neo4j_body} {\{\"statements\":[};[0m
2024-02-11-19:06:19[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-11-19:06:19[0m#OK. VARIABLE {neo4j_body} HAS BEEN SET TO {\{\"statements\":[};}.[0m
2024-02-11-19:06:28[0;37m    #variable {neo4j_body} {{\"statements\":[};[0m
2024-02-11-19:06:28[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-11-19:06:28[0m#OK. VARIABLE {neo4j_body} HAS BEEN SET TO {{"statements\":[}{}}.[0m
2024-02-11-19:06:30
2024-02-11-19:06:30[1;34m[[0;1;37mO[0;37mO[0;1;30mC [0;1;37mKaess[0;1;34m][0m "[0moh, just popped it[0m"
2024-02-11-19:06:33
2024-02-11-19:06:33[1;34m[[0;1;37mO[0;37mO[0;1;30mC [0;1;37mKaess[0;1;34m][0m "[0mmindblaster[0m"
2024-02-11-19:06:38
2024-02-11-19:06:38[1;34m[[0;1;37mO[0;37mO[0;1;30mC [0;1;37mEithne[0;1;34m][0m "[0mLol nice[0m"
2024-02-11-19:06:51[0;37m#help map[0m
2024-02-11-19:06:51[1;37mCommand[22;37m: #map
2024-02-11-19:06:51
2024-02-11-19:06:51         The map command is the backbone of the auto mapping feature.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map at <exit|vnum> <command>
2024-02-11-19:06:51         [22;37m  Execute the command at the given exit or vnum.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map center <x> <y> <z>
2024-02-11-19:06:51         [22;37m  Sets displaying center of the map viewer, default is 0 0 0.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map color <field> [value]
2024-02-11-19:06:51         [22;37m  Sets the map color for the given color field. Use #map color reset
2024-02-11-19:06:51         [22;37m  to restore colors to default.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map create <size>
2024-02-11-19:06:51         [22;37m  Creates a new map and room 1. The default size is 50000 rooms.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map destroy {area|world} <name>
2024-02-11-19:06:51         [22;37m  Deletes the map or given area.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map delete <exit|vnum>
2024-02-11-19:06:51         [22;37m  Deletes the room for the given exit or vnum.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map dig <exit|vnum> [new|<vnum>]
2024-02-11-19:06:51         [22;37m  Creates an exit for the given exit name. If no valid exit name
2024-02-11-19:06:51         [22;37m  is given or no existing room is found a new room is created.
2024-02-11-19:06:51         [22;37m  Useful for portal links and other alternative forms of
2024-02-11-19:06:51         [22;37m  transportation. If the 'new' argument is provided all existing
2024-02-11-19:06:51         [22;37m  rooms are ignored and a new room is created. If a room vnum is
2024-02-11-19:06:51         [22;37m  given as the second argument an exit will be created leading
2024-02-11-19:06:51         [22;37m  to the given room vnum. If the room vnum doesn't exist a new
2024-02-11-19:06:51         [22;37m  room is created.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map entrance <exit> [option] [arg]
2024-02-11-19:06:51         [22;37m  Set the entrance data for the given exit. You must specify a
2024-02-11-19:06:51         [22;37m  valid two-way exit for this to work.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map exit <exit> <option> <arg>
2024-02-11-19:06:51         [22;37m  Set the exit data. Useful with a closed door where you can
2024-02-11-19:06:51         [22;37m  set the exit command: '#map exit e command {open east;e}'.
2024-02-11-19:06:51         [22;37m  Use #map exit <exit> for a list of available options.
2024-02-11-19:06:51         [22;37m  Use #map exit <eixt> save to save the exit data.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map exitflag <exit> <AVOID|BLOCK|HIDE|INVIS> [on|off]
2024-02-11-19:06:51         [22;37m  Set exit flags. See #map roomflag for more info.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map explore <exit>
2024-02-11-19:06:51         [22;37m  Explores the given exit until a dead end or an
2024-02-11-19:06:51         [22;37m  intersection is found. The route is stored in #path and can
2024-02-11-19:06:51         [22;37m  subsequently be used with #walk. Useful for long roads.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map find <name> <exits> <desc> <area> <note> <terrain> <flag>
2024-02-11-19:06:51         [22;37m  searches for the given room name. If found the shortest path
2024-02-11-19:06:51         [22;37m  from your current location to the destination is calculated.
2024-02-11-19:06:51         [22;37m  The route is stored in #path and can subsequently be used with
2024-02-11-19:06:51         [22;37m  the various #path commands. If #map flag nofollow is set it
2024-02-11-19:06:51         [22;37m  will store the exit commands instead of the exit names.
2024-02-11-19:06:51
2024-02-11-19:06:51         [22;37m  If <exits> is provided all exits must be matched, if
2024-02-11-19:06:51         [22;37m  <roomdesc>, <roomarea> or <roomnote> or <roomterrain> or
2024-02-11-19:06:51         [22;37m  <roomflag> is provided these are matched as well against the
2024-02-11-19:06:51         [22;37m  room to be found.
2024-02-11-19:06:51
2024-02-11-19:06:51         [22;37m  These search options are also available for the at, delete,
2024-02-11-19:06:51         [22;37m  goto, link, list and run commands.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map flag asciigraphics
2024-02-11-19:06:51         [22;37m  Takes up more space but draws a more detailed
2024-02-11-19:06:51         [22;37m  map that displays the ne se sw nw exits and room symbols.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map flag asciivnums
2024-02-11-19:06:51         [22;37m  Display room vnums if asciigraphics is enabled.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map flag nofollow
2024-02-11-19:06:51         [22;37m  When you enter movement commands the map will no longer
2024-02-11-19:06:51         [22;37m  automatically follow along. Useful for MSDP and GMCP
2024-02-11-19:06:51         [22;37m  automapping scripts. When you use #map find in nofollow
2024-02-11-19:06:51         [22;37m  mode it will store the exit command instead of the exit
2024-02-11-19:06:51         [22;37m  name into the path.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map flag static
2024-02-11-19:06:51         [22;37m  Will make the map static so new rooms are no longer
2024-02-11-19:06:51         [22;37m  created when walking into an unmapped direction. Useful when
2024-02-11-19:06:51         [22;37m  you're done mapping and regularly bump into walls accidentally
2024-02-11-19:06:51         [22;37m  creating a new room. #map dig etc will still work.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map flag vtgraphics
2024-02-11-19:06:51         [22;37m  Enables vt line drawing on some terminals
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map flag vtmap
2024-02-11-19:06:51         [22;37m  Will enable the vtmap which is shown in the top split
2024-02-11-19:06:51         [22;37m  screen if you have one. You can create a 16 rows high top
2024-02-11-19:06:51         [22;37m  screen by using '#split 16 1'.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map get <option> <variable> [vnum]
2024-02-11-19:06:51         [22;37m  Store a map value into a variable, if no vnum is given the
2024-02-11-19:06:51         [22;37m  current room is used. Use 'all' as the option to store all
2024-02-11-19:06:51         [22;37m  values as a table.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map get roomexits <variable>
2024-02-11-19:06:51         [22;37m  Store all room exits into variable.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map global <room vnum>
2024-02-11-19:06:51         [22;37m  Set the vnum of a room that contains global
2024-02-11-19:06:51         [22;37m  exits, for example an exit named 'recall' that leads to the
2024-02-11-19:06:51         [22;37m  recall location. The room can contain multiple exits, in case
2024-02-11-19:06:51         [22;37m  there are multiple commands that are similar to recall.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map goto <room vnum> [dig]
2024-02-11-19:06:51         [22;37m  Takes you to the given room vnum, with the
2024-02-11-19:06:51         [22;37m  dig argument a new room will be created if none exists.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map goto <name> <exits> <desc> <area> <note> <terrain>
2024-02-11-19:06:51         [22;37m  Takes you to the given room name, if you provide exits those
2024-02-11-19:06:51         [22;37m  must match.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map info [save]
2024-02-11-19:06:51         [22;37m  Gives information about the map and room you are in. If the save
2024-02-11-19:06:51         [22;37m  argument is given the map data is saved to the info[map] variable.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map insert <direction> [roomflag]
2024-02-11-19:06:51         [22;37m  Insert a room in the given direction. Most useful for inserting
2024-02-11-19:06:51         [22;37m  void rooms.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map jump <x> <y> <z>
2024-02-11-19:06:51         [22;37m  Jump to the given coordinate, which is relative
2024-02-11-19:06:51         [22;37m  to your current room.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map landmark <name> <vnum> [description] [size]
2024-02-11-19:06:51         [22;37m  Creates an alias to target the provided room vnum. The
2024-02-11-19:06:51         [22;37m  description is optional and should be brief. The size
2024-02-11-19:06:51         [22;37m  determines from how many rooms away the landmark can be
2024-02-11-19:06:51         [22;37m  seen.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map leave
2024-02-11-19:06:51         [22;37m  Makes you leave the map. Useful when entering a maze. You
2024-02-11-19:06:51         [22;37m  can return to your last known room using #map return.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map legend <legend> [symbols|reset]
2024-02-11-19:06:51         [1;37m#map legend <legend> <index> [symbol]
2024-02-11-19:06:51         [22;37m  There are several legends and sub-legends available for
2024-02-11-19:06:51         [22;37m  drawing maps to suit personal preference and character sets.
2024-02-11-19:06:51         [22;37m  Use #map legend all to see the legend as currently defined.
2024-02-11-19:06:51         [22;37m  Use #map legend <legend> <reset> to set the default legend.
2024-02-11-19:06:51         [22;37m  Use #map legend <legend> <character list> to create a custom
2024-02-11-19:06:51         [22;37m  legend. Custom legends are automatically saved and loaded by
2024-02-11-19:06:51         [22;37m  using #map read and #map write.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map link <direction> <room name> [both]
2024-02-11-19:06:51         [22;37m  Links two rooms. If the both
2024-02-11-19:06:51         [22;37m  argument and a valid direction is given the link is two ways.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map list <name> <exits> <desc> <area> <note> <terrain>
2024-02-11-19:06:51         [22;37m  Lists all matching rooms and their distance. The following
2024-02-11-19:06:51         [22;37m  search keywords are supported.
2024-02-11-19:06:51
2024-02-11-19:06:51         [22;37m  {distance}    <arg> will list rooms within given distance.
2024-02-11-19:06:51         [22;37m  {roomarea}    <arg> will list rooms with matching area name.
2024-02-11-19:06:51         [22;37m  {roomdesc}    <arg> will list rooms with matching room desc.
2024-02-11-19:06:51         [22;37m  {roomexits}   <arg> will list rooms with identical room exits.
2024-02-11-19:06:51         [22;37m                      Use * as an exit to ignore non pathdir exits.
2024-02-11-19:06:51         [22;37m  {roomflag}    <arg> will list rooms with matching room flags.
2024-02-11-19:06:51         [22;37m  {roomid}      <arg> will list rooms with identical id name.
2024-02-11-19:06:51         [22;37m  {roomname}    <arg> will list rooms with matching room name.
2024-02-11-19:06:51         [22;37m  {roomnote}    <arg> will list rooms with matching room note.
2024-02-11-19:06:51         [22;37m  {roomterrain} <arg> will list rooms with matching room terrain.
2024-02-11-19:06:51         [22;37m  {variable}    <arg> will save the output to given variable.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map map <rows> <cols> <append|overwrite|list|variable> <name>
2024-02-11-19:06:51         [22;37m  Display a drawing of the map of the given height and width.
2024-02-11-19:06:51         [22;37m  All arguments are optional. If {rows} or {cols} are set to {}
2024-02-11-19:06:51         [22;37m  or {0} they will use the scrolling window size as the default.
2024-02-11-19:06:51         [22;37m  If {rows} or {cols} are a negative number this number is
2024-02-11-19:06:51         [22;37m  subtracted from the scrolling window size.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map map <rows> <cols> draw <square>
2024-02-11-19:06:51         [22;37m  Display a drawing of the map of the given height and width.
2024-02-11-19:06:51         [22;37m  The square argument exists of 4 numbers formulating the top
2024-02-11-19:06:51         [22;37m  left corner and bottom right corner of a square.
2024-02-11-19:06:51
2024-02-11-19:06:51         [22;37m  If you use {append|overwrite} the map is written to the specified
2024-02-11-19:06:51         [22;37m  file name which must be given as the 4th argument.
2024-02-11-19:06:51         [22;37m  If you use {list|variable} the map is saved to the specified
2024-02-11-19:06:51         [22;37m  variable name.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map move <direction>
2024-02-11-19:06:51         [22;37m  This does the same as an actual movement command, updating your
2024-02-11-19:06:51         [22;37m  location on the map and creating new rooms. Useful when you are
2024-02-11-19:06:51         [22;37m  following someone and want the map to follow along. You will need
2024-02-11-19:06:51         [22;37m  to create actions using '#map move', for this to work.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map offset <row> <col> <row> <col>
2024-02-11-19:06:51         [22;37m  Define the offset of the vtmap as a square. Without an argument
2024-02-11-19:06:51         [22;37m  it defaults to the entire top split region.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map read <filename>
2024-02-11-19:06:51         [22;37m  Will load the given map file.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map resize <size>
2024-02-11-19:06:51         [22;37m  Resize the map, setting the maximum number of rooms.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map return
2024-02-11-19:06:51         [22;37m  Returns you to your last known room after leaving the map
2024-02-11-19:06:51         [22;37m  or loading a map.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map roomflag <flags> <get|on|off>
2024-02-11-19:06:51         [22;37m
2024-02-11-19:06:51         [1;37m#map roomflag avoid
2024-02-11-19:06:51         [22;37m  When set, '#map find' will avoid a route leading
2024-02-11-19:06:51         [22;37m  through that room. Useful for locked doors, etc.
2024-02-11-19:06:51         [1;37m#map roomflag block
2024-02-11-19:06:51         [22;37m  When set the automapper will prevent movement into or through
2024-02-11-19:06:51         [22;37m  the room. Useful for death traps.
2024-02-11-19:06:51         [1;37m#map roomflag hide
2024-02-11-19:06:51         [22;37m  When set, '#map' will not display the map beyond
2024-02-11-19:06:51         [22;37m  this room. When mapping overlapping areas or areas that aren't
2024-02-11-19:06:51         [22;37m  build consistently you need this flag as well to stop
2024-02-11-19:06:51         [22;37m  auto-linking, unless you use void rooms.
2024-02-11-19:06:51         [1;37m#map roomflag invis
2024-02-11-19:06:51         [22;37m  When set the room will be colored with the INVIS color.
2024-02-11-19:06:51         [1;37m#map roomflag leave
2024-02-11-19:06:51         [22;37m  When entering a room with this flag, you will
2024-02-11-19:06:51         [22;37m  automatically leave the map. Useful when set at the entrance
2024-02-11-19:06:51         [22;37m  of an unmappable maze.
2024-02-11-19:06:51         [1;37m#map roomflag noglobal
2024-02-11-19:06:51         [22;37m  This marks a room as not allowing global
2024-02-11-19:06:51         [22;37m  transportation, like norecall rooms that block recall.
2024-02-11-19:06:51         [1;37m#map roomflag void
2024-02-11-19:06:51         [22;37m  When set the room becomes a spacing room that can
2024-02-11-19:06:51         [22;37m  be used to connect otherwise overlapping areas. A void room
2024-02-11-19:06:51         [22;37m  should only have two exits. When entering a void room you are
2024-02-11-19:06:51         [22;37m  moved to the connecting room until you enter a non void room.
2024-02-11-19:06:51         [1;37m#map roomflag static
2024-02-11-19:06:51         [22;37m  When set the room will no longer be autolinked
2024-02-11-19:06:51         [22;37m  when walking around. Useful for mapping mazes.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map run <room name> [delay]
2024-02-11-19:06:51         [22;37m  Calculates the shortest path to the destination and walks you
2024-02-11-19:06:51         [22;37m  there. The delay is optional and requires using braces. Besides
2024-02-11-19:06:51         [22;37m  the room name a list of exits can be provided for more precise
2024-02-11-19:06:51         [22;37m  matching.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map set <option> <value> [vnum]
2024-02-11-19:06:51         [22;37m  Set a map value for your current room, or given room if a room
2024-02-11-19:06:51         [22;37m  vnum is provided.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map sync <filename>
2024-02-11-19:06:51         [22;37m  Similar to #map read except the current map won't be unloaded
2024-02-11-19:06:51         [22;37m  or overwritten.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map terrain <name> <symbol> [flag]
2024-02-11-19:06:51         [22;37m  Set the terrain symbol and flag.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map terrain <name> <symbol> [DENSE|SPARSE|SCANT]
2024-02-11-19:06:51         [22;37m  Determine symbol density, omit for the default.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map terrain <name> <symbol> [NARROW|WIDE|VAST]
2024-02-11-19:06:51         [22;37m  Determine symbol spread range, omit for the default.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map terrain <name> <symbol> [FADEIN|FADEOUT]
2024-02-11-19:06:51         [22;37m  Determine symbol spread density, omit for the default.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map terrain <name> <symbol> [DOUBLE]
2024-02-11-19:06:51         [22;37m  You're using two characters for the symbol.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map travel <direction> <delay>
2024-02-11-19:06:51         [22;37m  Follows the direction until a dead end or an intersection is
2024-02-11-19:06:51         [22;37m  found. Use braces around the direction if you use the delay,
2024-02-11-19:06:51         [22;37m  which will add the given delay between movements.
2024-02-11-19:06:51         [22;37m  Use #path stop to stop a delayed run.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map undo
2024-02-11-19:06:51         [22;37m  Will undo your last move. If this created a room or a link
2024-02-11-19:06:51         [22;37m  they will be deleted, otherwise you'll simply move back a
2024-02-11-19:06:51         [22;37m  room. Useful if you walked into a non-existent direction.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map uninsert <direction>
2024-02-11-19:06:51         [22;37m  Exact opposite of the insert command.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map unlandmark <name>
2024-02-11-19:06:51         [22;37m  Removes a landmark.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map unlink <direction> [both]
2024-02-11-19:06:51         [22;37m  Will remove the exit, this isn't two way so you can have the
2024-02-11-19:06:51         [22;37m  properly display no exit rooms and mazes.
2024-02-11-19:06:51         [22;37m  If you use the both argument the exit is removed two-ways.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map unterrain <name>
2024-02-11-19:06:51         [22;37m  Removes a terrain.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map update [now]
2024-02-11-19:06:51         [22;37m  Sets the vtmap to update within the next 0.1 seconds, or
2024-02-11-19:06:51         [22;37m  instantly with the now argument.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map vnum <low> [high]
2024-02-11-19:06:51         [22;37m  Change the room vnum to the given number, if a range is
2024-02-11-19:06:51         [22;37m  provided the first available room in that range is selected.
2024-02-11-19:06:51
2024-02-11-19:06:51         [1;37m#map write <filename> [force]
2024-02-11-19:06:51         [22;37m  Will save the map, if you want to save a map to a .tin file
2024-02-11-19:06:51         [22;37m  you must provide the {force} argument.
2024-02-11-19:06:51[0m
2024-02-11-19:06:51[1;37mRelated[22;37m: path, pathdir and speedwalk.[0m
2024-02-11-19:06:51
2024-02-11-19:07:10[0;37m#help list[0m
2024-02-11-19:07:10[1;37mCommand[22;37m: #list [1;37m{[22;37mvariable[1;37m} {[22;37moption[1;37m} {[22;37margument[1;37m}[22;37m
2024-02-11-19:07:10
2024-02-11-19:07:10         #list {var} {add} {item}               Add {item} to the list
2024-02-11-19:07:10         #list {var} {clear}                    Empty the given list
2024-02-11-19:07:10         #list {var} {collapse} {separator}     Turn list into a variable
2024-02-11-19:07:10         #list {var} {create} {items}           Create a list using {items}
2024-02-11-19:07:10         #list {var} {delete} {index} {amount}  Delete the item at {index},
2024-02-11-19:07:10                                                the {amount} is optional.
2024-02-11-19:07:10         #list {var} {explode} {separator}      Turn variable into a list
2024-02-11-19:07:10         #list {var} {indexate}                 Index a list table for sorting
2024-02-11-19:07:10         #list {var} {insert} {index} {string}  Insert {string} at given index
2024-02-11-19:07:10         #list {var} {filter} {keep} {remove}   Filter with keep / remove regex
2024-02-11-19:07:10         #list {var} {find} {regex} {variable}  Return the found index
2024-02-11-19:07:10         #list {var} {get} {index} {variable}   Copy an item to {variable}
2024-02-11-19:07:10         #list {var} {numerate}                 Turn a table into a list
2024-02-11-19:07:10         #list {var} {order} {string}           Insert item in numerical order
2024-02-11-19:07:10         #list {var} {shuffle}                  Shuffle the list
2024-02-11-19:07:10         #list {var} {set} {index} {string}     Change the item at {index}
2024-02-11-19:07:10         #list {var} {simplify} {string}        Turn list into a simple list
2024-02-11-19:07:10         #list {var} {size} {variable}          Copy list size to {variable}
2024-02-11-19:07:10         #list {var} {sort} {string}            Insert item in alphabetic order
2024-02-11-19:07:10         #list {var} {tokenize} {string}        Create a character list
2024-02-11-19:07:10
2024-02-11-19:07:10         The index should be between +1 and the list's size. You can also give
2024-02-11-19:07:10         a negative value, in which case -1 equals the last item in the list, -2
2024-02-11-19:07:10         the second last, etc.
2024-02-11-19:07:10
2024-02-11-19:07:10         When inserting an item a positive index will prepend the item at the
2024-02-11-19:07:10         given index, while a negative index will append the item.
2024-02-11-19:07:10
2024-02-11-19:07:10         The add and create options allow using multiple items, as well
2024-02-11-19:07:10         as semicolon separated items.
2024-02-11-19:07:10
2024-02-11-19:07:10         A size of 0 is returned for an empty or non-existent list. You can
2024-02-11-19:07:10         directly access the size of a list using &var[].
2024-02-11-19:07:10
2024-02-11-19:07:10         You can directly access elements in a list variable using $var[+1],
2024-02-11-19:07:10         $var[+2], $var[-1], etc.
2024-02-11-19:07:10[0m
2024-02-11-19:07:10[1;37mRelated[22;37m: break, continue, foreach, loop, parse, repeat, return and while.[0m
2024-02-11-19:07:10
2024-02-11-19:07:28[0;37m#help parse[0m
2024-02-11-19:07:28[1;37mCommand[22;37m: #parse [1;37m{[22;37mstring[1;37m} {[22;37mvariable[1;37m} {[22;37mcommands[1;37m}[22;37m
2024-02-11-19:07:28
2024-02-11-19:07:28         Like the loop statement, parse will loop from start to finish through
2024-02-11-19:07:28         the given string.  The value of the current character is stored in the
2024-02-11-19:07:28         provided variable.
2024-02-11-19:07:28
2024-02-11-19:07:28[1;37mExample[22;37m: #parse {hello world} {char} {#show $char}
2024-02-11-19:07:28[0m
2024-02-11-19:07:28[1;37mRelated[22;37m: break, continue, foreach, list, loop, repeat, return and while.[0m
2024-02-11-19:07:28
2024-02-11-19:10:44[0;37m[0m
2024-02-11-19:10:44> [0;37m[0m
2024-02-11-19:10:53> [0;37m    #variable {neo4j_body} {"{\"statements\":["};[0m
2024-02-11-19:10:53[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-11-19:10:53[0m#OK. VARIABLE {neo4j_body} HAS BEEN SET TO {"{\"statements\":["};}.[0m
2024-02-11-19:10:59[0;37m    #variable {neo4j_body} {"\{{\"statements\":["};[0m
2024-02-11-19:10:59[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-11-19:10:59[0m#OK. VARIABLE {neo4j_body} HAS BEEN SET TO {"\{{\"statements\":["};}.[0m
2024-02-11-19:12:11[0;37m#var[0m
2024-02-11-19:12:11[0m################################## VARIABLES ###################################[0m
2024-02-11-19:12:11[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_body[38;5;164m} {[38;5;188m"\{{\"statements\":["};[38;5;164m}[0m
2024-02-11-19:12:38[0;37m#var {test} {{statements}{test1;test2;test3}][0m
2024-02-11-19:12:38[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-11-19:12:38[0m#OK. VARIABLE {test} HAS BEEN SET TO {{]}{}{statements}{test1;test2;test3}}.[0m
2024-02-11-19:12:43[0;37m#var test[0m
2024-02-11-19:12:43[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mtest[38;5;164m}
2024-02-11-19:12:43[38;5;164m{
2024-02-11-19:12:43[38;5;188m[38;5;164m    {[38;5;188m][38;5;164m} [38;5;164m{[38;5;188m[38;5;164m}
2024-02-11-19:12:43[38;5;164m    {[38;5;188mstatements[38;5;164m} [38;5;164m{[38;5;188mtest1;test2;test3[38;5;164m}
2024-02-11-19:12:43[38;5;164m}[0m
2024-02-11-19:12:57[0;37m#var {test} {{statements}{test1;test2;test3}}[0m
2024-02-11-19:12:57[0m#OK. VARIABLE {test} HAS BEEN SET TO {{statements}{test1;test2;test3}}.[0m
2024-02-11-19:12:59[0;37m#var test[0m
2024-02-11-19:12:59[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mtest[38;5;164m}
2024-02-11-19:12:59[38;5;164m{
2024-02-11-19:12:59[38;5;188m[38;5;164m    {[38;5;188mstatements[38;5;164m} [38;5;164m{[38;5;188mtest1;test2;test3[38;5;164m}
2024-02-11-19:12:59[38;5;164m}[0m
2024-02-11-19:13:16[0;37m#line json {test} {#showme}[0m
2024-02-11-19:13:16[0m################################# LINE OPTIONS #################################[0m
2024-02-11-19:13:16[0m  [BACKGROUND   ] Execute line without stealing session focus.[0m
2024-02-11-19:13:16[0m  [BENCHMARK    ] Execute line and provide timing information.[0m
2024-02-11-19:13:16[0m  [CAPTURE      ] Capture output in the given variable.[0m
2024-02-11-19:13:16[0m  [CONVERT      ] Execute line in convert meta data mode.[0m
2024-02-11-19:13:16[0m  [DEBUG        ] Execute line in debug mode.[0m
2024-02-11-19:13:16[0m  [GAG          ] Gag the next line.[0m
2024-02-11-19:13:16[0m  [IGNORE       ] Execute line with triggers ignored.[0m
2024-02-11-19:13:16[0m  [LOCAL        ] Execute line with local scope.[0m
2024-02-11-19:13:16[0m  [LOG          ] Log the next line or given line.[0m
2024-02-11-19:13:16[0m  [LOGMODE      ] Execute line with given log mode.[0m
2024-02-11-19:13:16[0m  [LOGVERBATIM  ] Log the line as plain text verbatim.[0m
2024-02-11-19:13:16[0m  [MSDP         ] Execute line with msdp conversion.[0m
2024-02-11-19:13:16[0m  [MULTISHOT    ] Execute line creating multishot triggers.[0m
2024-02-11-19:13:16[0m  [ONESHOT      ] Execute line creating oneshot triggers.[0m
2024-02-11-19:13:16[0m  [QUIET        ] Execute line with all system messages off.[0m
2024-02-11-19:13:16[0m  [STRIP        ] Execute line with escape codes stripped.[0m
2024-02-11-19:13:16[0m  [SUBSTITUTE   ] Execute line with given substitution.[0m
2024-02-11-19:13:16[0m  [VERBATIM     ] Execute line as plain text.[0m
2024-02-11-19:13:16[0m  [VERBOSE      ] Execute line with all system messages on.[0m
2024-02-11-19:13:16[0m################################################################################[0m
2024-02-11-19:13:26[0;37m#line json {test} {#showme &0}[0m
2024-02-11-19:13:26[0m################################# LINE OPTIONS #################################[0m
2024-02-11-19:13:26[0m  [BACKGROUND   ] Execute line without stealing session focus.[0m
2024-02-11-19:13:26[0m  [BENCHMARK    ] Execute line and provide timing information.[0m
2024-02-11-19:13:26[0m  [CAPTURE      ] Capture output in the given variable.[0m
2024-02-11-19:13:26[0m  [CONVERT      ] Execute line in convert meta data mode.[0m
2024-02-11-19:13:26[0m  [DEBUG        ] Execute line in debug mode.[0m
2024-02-11-19:13:26[0m  [GAG          ] Gag the next line.[0m
2024-02-11-19:13:26[0m  [IGNORE       ] Execute line with triggers ignored.[0m
2024-02-11-19:13:26[0m  [LOCAL        ] Execute line with local scope.[0m
2024-02-11-19:13:26[0m  [LOG          ] Log the next line or given line.[0m
2024-02-11-19:13:26[0m  [LOGMODE      ] Execute line with given log mode.[0m
2024-02-11-19:13:26[0m  [LOGVERBATIM  ] Log the line as plain text verbatim.[0m
2024-02-11-19:13:26[0m  [MSDP         ] Execute line with msdp conversion.[0m
2024-02-11-19:13:26[0m  [MULTISHOT    ] Execute line creating multishot triggers.[0m
2024-02-11-19:13:26[0m  [ONESHOT      ] Execute line creating oneshot triggers.[0m
2024-02-11-19:13:26[0m  [QUIET        ] Execute line with all system messages off.[0m
2024-02-11-19:13:26[0m  [STRIP        ] Execute line with escape codes stripped.[0m
2024-02-11-19:13:26[0m  [SUBSTITUTE   ] Execute line with given substitution.[0m
2024-02-11-19:13:26[0m  [VERBATIM     ] Execute line as plain text.[0m
2024-02-11-19:13:26[0m  [VERBOSE      ] Execute line with all system messages on.[0m
2024-02-11-19:13:26[0m################################################################################[0m
2024-02-11-19:13:38[0;37m#line json {test} {#show &0}[0m
2024-02-11-19:13:38[0m################################# LINE OPTIONS #################################[0m
2024-02-11-19:13:38[0m  [BACKGROUND   ] Execute line without stealing session focus.[0m
2024-02-11-19:13:38[0m  [BENCHMARK    ] Execute line and provide timing information.[0m
2024-02-11-19:13:38[0m  [CAPTURE      ] Capture output in the given variable.[0m
2024-02-11-19:13:38[0m  [CONVERT      ] Execute line in convert meta data mode.[0m
2024-02-11-19:13:38[0m  [DEBUG        ] Execute line in debug mode.[0m
2024-02-11-19:13:38[0m  [GAG          ] Gag the next line.[0m
2024-02-11-19:13:38[0m  [IGNORE       ] Execute line with triggers ignored.[0m
2024-02-11-19:13:38[0m  [LOCAL        ] Execute line with local scope.[0m
2024-02-11-19:13:38[0m  [LOG          ] Log the next line or given line.[0m
2024-02-11-19:13:38[0m  [LOGMODE      ] Execute line with given log mode.[0m
2024-02-11-19:13:38[0m  [LOGVERBATIM  ] Log the line as plain text verbatim.[0m
2024-02-11-19:13:38[0m  [MSDP         ] Execute line with msdp conversion.[0m
2024-02-11-19:13:38[0m  [MULTISHOT    ] Execute line creating multishot triggers.[0m
2024-02-11-19:13:38[0m  [ONESHOT      ] Execute line creating oneshot triggers.[0m
2024-02-11-19:13:38[0m  [QUIET        ] Execute line with all system messages off.[0m
2024-02-11-19:13:38[0m  [STRIP        ] Execute line with escape codes stripped.[0m
2024-02-11-19:13:38[0m  [SUBSTITUTE   ] Execute line with given substitution.[0m
2024-02-11-19:13:38[0m  [VERBATIM     ] Execute line as plain text.[0m
2024-02-11-19:13:38[0m  [VERBOSE      ] Execute line with all system messages on.[0m
2024-02-11-19:13:38[0m################################################################################[0m
2024-02-11-19:13:53[0;37m#line json {test} {#show {&0}}[0m
2024-02-11-19:13:53[0m################################# LINE OPTIONS #################################[0m
2024-02-11-19:13:53[0m  [BACKGROUND   ] Execute line without stealing session focus.[0m
2024-02-11-19:13:53[0m  [BENCHMARK    ] Execute line and provide timing information.[0m
2024-02-11-19:13:53[0m  [CAPTURE      ] Capture output in the given variable.[0m
2024-02-11-19:13:53[0m  [CONVERT      ] Execute line in convert meta data mode.[0m
2024-02-11-19:13:53[0m  [DEBUG        ] Execute line in debug mode.[0m
2024-02-11-19:13:53[0m  [GAG          ] Gag the next line.[0m
2024-02-11-19:13:53[0m  [IGNORE       ] Execute line with triggers ignored.[0m
2024-02-11-19:13:53[0m  [LOCAL        ] Execute line with local scope.[0m
2024-02-11-19:13:53[0m  [LOG          ] Log the next line or given line.[0m
2024-02-11-19:13:53[0m  [LOGMODE      ] Execute line with given log mode.[0m
2024-02-11-19:13:53[0m  [LOGVERBATIM  ] Log the line as plain text verbatim.[0m
2024-02-11-19:13:53[0m  [MSDP         ] Execute line with msdp conversion.[0m
2024-02-11-19:13:53[0m  [MULTISHOT    ] Execute line creating multishot triggers.[0m
2024-02-11-19:13:53[0m  [ONESHOT      ] Execute line creating oneshot triggers.[0m
2024-02-11-19:13:53[0m  [QUIET        ] Execute line with all system messages off.[0m
2024-02-11-19:13:53[0m  [STRIP        ] Execute line with escape codes stripped.[0m
2024-02-11-19:13:53[0m  [SUBSTITUTE   ] Execute line with given substitution.[0m
2024-02-11-19:13:53[0m  [VERBATIM     ] Execute line as plain text.[0m
2024-02-11-19:13:53[0m  [VERBOSE      ] Execute line with all system messages on.[0m
2024-02-11-19:13:53[0m################################################################################[0m
2024-02-11-19:14:49[0;37m#line json {test} #show {&0}[0m
2024-02-11-19:14:49[0m################################# LINE OPTIONS #################################[0m
2024-02-11-19:14:49[0m  [BACKGROUND   ] Execute line without stealing session focus.[0m
2024-02-11-19:14:49[0m  [BENCHMARK    ] Execute line and provide timing information.[0m
2024-02-11-19:14:49[0m  [CAPTURE      ] Capture output in the given variable.[0m
2024-02-11-19:14:49[0m  [CONVERT      ] Execute line in convert meta data mode.[0m
2024-02-11-19:14:49[0m  [DEBUG        ] Execute line in debug mode.[0m
2024-02-11-19:14:49[0m  [GAG          ] Gag the next line.[0m
2024-02-11-19:14:49[0m  [IGNORE       ] Execute line with triggers ignored.[0m
2024-02-11-19:14:49[0m  [LOCAL        ] Execute line with local scope.[0m
2024-02-11-19:14:49[0m  [LOG          ] Log the next line or given line.[0m
2024-02-11-19:14:49[0m  [LOGMODE      ] Execute line with given log mode.[0m
2024-02-11-19:14:49[0m  [LOGVERBATIM  ] Log the line as plain text verbatim.[0m
2024-02-11-19:14:49[0m  [MSDP         ] Execute line with msdp conversion.[0m
2024-02-11-19:14:49[0m  [MULTISHOT    ] Execute line creating multishot triggers.[0m
2024-02-11-19:14:49[0m  [ONESHOT      ] Execute line creating oneshot triggers.[0m
2024-02-11-19:14:49[0m  [QUIET        ] Execute line with all system messages off.[0m
2024-02-11-19:14:49[0m  [STRIP        ] Execute line with escape codes stripped.[0m
2024-02-11-19:14:49[0m  [SUBSTITUTE   ] Execute line with given substitution.[0m
2024-02-11-19:14:49[0m  [VERBATIM     ] Execute line as plain text.[0m
2024-02-11-19:14:49[0m  [VERBOSE      ] Execute line with all system messages on.[0m
2024-02-11-19:14:49[0m################################################################################[0m
2024-02-11-19:15:11[0;37m#line json {test}[0m
2024-02-11-19:15:11[0m################################# LINE OPTIONS #################################[0m
2024-02-11-19:15:11[0m  [BACKGROUND   ] Execute line without stealing session focus.[0m
2024-02-11-19:15:11[0m  [BENCHMARK    ] Execute line and provide timing information.[0m
2024-02-11-19:15:11[0m  [CAPTURE      ] Capture output in the given variable.[0m
2024-02-11-19:15:11[0m  [CONVERT      ] Execute line in convert meta data mode.[0m
2024-02-11-19:15:11[0m  [DEBUG        ] Execute line in debug mode.[0m
2024-02-11-19:15:11[0m  [GAG          ] Gag the next line.[0m
2024-02-11-19:15:11[0m  [IGNORE       ] Execute line with triggers ignored.[0m
2024-02-11-19:15:11[0m  [LOCAL        ] Execute line with local scope.[0m
2024-02-11-19:15:11[0m  [LOG          ] Log the next line or given line.[0m
2024-02-11-19:15:11[0m  [LOGMODE      ] Execute line with given log mode.[0m
2024-02-11-19:15:11[0m  [LOGVERBATIM  ] Log the line as plain text verbatim.[0m
2024-02-11-19:15:11[0m  [MSDP         ] Execute line with msdp conversion.[0m
2024-02-11-19:15:11[0m  [MULTISHOT    ] Execute line creating multishot triggers.[0m
2024-02-11-19:15:11[0m  [ONESHOT      ] Execute line creating oneshot triggers.[0m
2024-02-11-19:15:11[0m  [QUIET        ] Execute line with all system messages off.[0m
2024-02-11-19:15:11[0m  [STRIP        ] Execute line with escape codes stripped.[0m
2024-02-11-19:15:11[0m  [SUBSTITUTE   ] Execute line with given substitution.[0m
2024-02-11-19:15:11[0m  [VERBATIM     ] Execute line as plain text.[0m
2024-02-11-19:15:11[0m  [VERBOSE      ] Execute line with all system messages on.[0m
2024-02-11-19:15:11[0m################################################################################[0m
2024-02-11-19:15:17[0;37m#help list[0m
2024-02-11-19:15:17[1;37mCommand[22;37m: #list [1;37m{[22;37mvariable[1;37m} {[22;37moption[1;37m} {[22;37margument[1;37m}[22;37m
2024-02-11-19:15:17
2024-02-11-19:15:17         #list {var} {add} {item}               Add {item} to the list
2024-02-11-19:15:17         #list {var} {clear}                    Empty the given list
2024-02-11-19:15:17         #list {var} {collapse} {separator}     Turn list into a variable
2024-02-11-19:15:17         #list {var} {create} {items}           Create a list using {items}
2024-02-11-19:15:17         #list {var} {delete} {index} {amount}  Delete the item at {index},
2024-02-11-19:15:17                                                the {amount} is optional.
2024-02-11-19:15:17         #list {var} {explode} {separator}      Turn variable into a list
2024-02-11-19:15:17         #list {var} {indexate}                 Index a list table for sorting
2024-02-11-19:15:17         #list {var} {insert} {index} {string}  Insert {string} at given index
2024-02-11-19:15:17         #list {var} {filter} {keep} {remove}   Filter with keep / remove regex
2024-02-11-19:15:17         #list {var} {find} {regex} {variable}  Return the found index
2024-02-11-19:15:17         #list {var} {get} {index} {variable}   Copy an item to {variable}
2024-02-11-19:15:17         #list {var} {numerate}                 Turn a table into a list
2024-02-11-19:15:17         #list {var} {order} {string}           Insert item in numerical order
2024-02-11-19:15:17         #list {var} {shuffle}                  Shuffle the list
2024-02-11-19:15:17         #list {var} {set} {index} {string}     Change the item at {index}
2024-02-11-19:15:17         #list {var} {simplify} {string}        Turn list into a simple list
2024-02-11-19:15:17         #list {var} {size} {variable}          Copy list size to {variable}
2024-02-11-19:15:17         #list {var} {sort} {string}            Insert item in alphabetic order
2024-02-11-19:15:17         #list {var} {tokenize} {string}        Create a character list
2024-02-11-19:15:17
2024-02-11-19:15:17         The index should be between +1 and the list's size. You can also give
2024-02-11-19:15:17         a negative value, in which case -1 equals the last item in the list, -2
2024-02-11-19:15:17         the second last, etc.
2024-02-11-19:15:17
2024-02-11-19:15:17         When inserting an item a positive index will prepend the item at the
2024-02-11-19:15:17         given index, while a negative index will append the item.
2024-02-11-19:15:17
2024-02-11-19:15:17         The add and create options allow using multiple items, as well
2024-02-11-19:15:17         as semicolon separated items.
2024-02-11-19:15:17
2024-02-11-19:15:17         A size of 0 is returned for an empty or non-existent list. You can
2024-02-11-19:15:17         directly access the size of a list using &var[].
2024-02-11-19:15:17
2024-02-11-19:15:17         You can directly access elements in a list variable using $var[+1],
2024-02-11-19:15:17         $var[+2], $var[-1], etc.
2024-02-11-19:15:17[0m
2024-02-11-19:15:17[1;37mRelated[22;37m: break, continue, foreach, loop, parse, repeat, return and while.[0m
2024-02-11-19:15:17
2024-02-11-19:15:23[0;37m#help line[0m
2024-02-11-19:15:23[1;37mCommand[22;37m: #line [1;37m{[22;37moption[1;37m} {[22;37margument[1;37m}[22;37m
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;32mLine options that alter the argument.
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;37m#line strip <argument>
2024-02-11-19:15:23         [22;37m  Argument is executed with all color codes stripped.
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;37m#line substitute <options> <argument>
2024-02-11-19:15:23         [22;37m  Argument is executed using the provided substitutions, available
2024-02-11-19:15:23         [22;37m  options are: arguments, braces, colors, escapes, functions, secure,
2024-02-11-19:15:23         [22;37m  and variables.
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;32mLine options that alter how the line is executed.
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;37m#line background <argument>
2024-02-11-19:15:23         [22;37m  Prevent new session activation.
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;37m#line capture <variable> <argument.
2024-02-11-19:15:23         [22;37m  Argument is executed and output stored in <variable>.
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;37m#line convert <argument>
2024-02-11-19:15:23         [22;37m  Argument is executed with escaped meta characters.
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;37m#line debug <argument>
2024-02-11-19:15:23         [22;37m  Argument is executed in debug mode.
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;37m#line gag
2024-02-11-19:15:23         [22;37m  Gag the next line.
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;37m#line ignore {argument}
2024-02-11-19:15:23         [22;37m  Argument is executed without any triggers being checked.
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;37m#line local {argument}
2024-02-11-19:15:23         [22;37m  Argument is executed with all newly and indirectly
2024-02-11-19:15:23         [22;37m  created variables being local.
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;37m#line log <filename> [text]
2024-02-11-19:15:23         [22;37m  Log the next line to file unless the [text] argument is
2024-02-11-19:15:23         [22;37m  provided.
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;37m#line logmode <option> <argument>
2024-02-11-19:15:23         [22;37m  Argument is executed using the provided logmode, available
2024-02-11-19:15:23         [22;37m  modes are: html, plain, and raw.
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;37m#line msdp <argument>
2024-02-11-19:15:23         [22;37m  Turn the argument into an msdp telnet sequence, starting at the
2024-02-11-19:15:23         [22;37m  first opening brace. Will turn tintin tables into msdp tables,
2024-02-11-19:15:23         [22;37m  with semicolons being used to create msdp arrays.
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;37m#line multishot <number> <argument>
2024-02-11-19:15:23         [22;37m  Argument is executed in multishot mode, all triggers created
2024-02-11-19:15:23         [22;37m  will only fire the given number of times.
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;37m#line oneshot <argument>
2024-02-11-19:15:23         [22;37m  Argument is executed in oneshot mode, all triggers created will
2024-02-11-19:15:23         [22;37m  only fire once.
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;37m#line quiet <argument>
2024-02-11-19:15:23         [22;37m  Argument is executed with suppression of most system messages.
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;37m#line verbatim <argument>
2024-02-11-19:15:23         [22;37m  Argument is executed verbatim, prohibiting variable and function
2024-02-11-19:15:23         [22;37m  substitutions.
2024-02-11-19:15:23
2024-02-11-19:15:23         [1;37m#line verbose <argument>
2024-02-11-19:15:23         [22;37m  Argument is executed with most system messages enabled.
2024-02-11-19:15:23
2024-02-11-19:15:23         When using #line log and logging in html format use \c< \c> \c& \c" to
2024-02-11-19:15:23         log a literal < > & and ".
2024-02-11-19:15:23[0m
2024-02-11-19:15:23[1;37mRelated[22;37m: class and config.[0m
2024-02-11-19:15:23
2024-02-11-19:15:42[0;37m#version[0m
2024-02-11-19:15:42[0m#ERROR: #UNKNOWN TINTIN-COMMAND 'version'.[0m
2024-02-11-19:26:43[0m[0m
2024-02-11-19:26:43[0m#ZZZZZZZAAAAAAAAPPPP!!!!!!!!! LET'S GET OUTTA HERE!!!!!!!![0m
2024-02-11-19:26:43[0m#SESSION 'ls' DIED.[0m
2024-02-11-19:37:03
2024-02-11-19:37:03[1;30m            ~--___--~      [0;1;31mWelcome to the World[0;1;30m    __==.[0m
2024-02-11-19:37:03[1;30m-_       _--~~     _-~ ~----        [0;1;31mof[0;1;30m         __      ~~-__[0m
2024-02-11-19:37:03[1;30m  ~---[0;1;37m\[0;1;30m-~ ~~-----~~   [0;36m:[0;1;30m         [0;31mLo[0;1;31mst[0;1;33m So[0;1;31mul[0;31ms[0;1;30m     ~~~__  _-~~-[0m
2024-02-11-19:37:03 [1;30m      [0;1;37m\[0;1;30m        [0;36m:    :[0;1;30m      _             ________[0;36m:             :[0;1;30m       ~~[0m
2024-02-11-19:37:03[36m     :  [0;1;37m|[0;36m      :    :                              :    :    :   :[0m
2024-02-11-19:37:03[36m    :  [0;1;37m/|[0;36m     :   [0;1;32m|[0;36m       :   :    :  :     : :[0;1;32m|[0;36m   :    :   :   : [0;33m|\/|[0m
2024-02-11-19:37:03[36m   : [0;1;37m /  \[0;36m   :     [0;1;32m|[0;36m:     :   :    :  :     : : [0;1;32m|[0;36m  :    :   :   : [0;33m/.0  )_[0m
2024-02-11-19:37:03[36m  :  [0;1;37m|    |[0;36m :  :   :[0;1;32m|[0;36m    :        :  :     : :   [0;1;32m|[0;36m:        :   : .[0;33m( (__  `oo.[0m
2024-02-11-19:37:03[36m :  [0;1;37m/    / \[0;36m  :   :  [0;1;32m|[0;36m  :  :     :        : :    [0;1;32m|[0;36m    :   :      [0;33m<_) ||~~~//'[0m
2024-02-11-19:37:03[36m    [0;1;37m\   |   \[0;36m:   :    [0;1;32m|[0;36m:  :     :     :  :      :[0;1;32m|[0;36m   :           [0;33m</  ||[0m
2024-02-11-19:37:03[36m    [0;1;37m/\  |\   |[0;36m  :     :[0;1;32m|[0;36m :     :     :         :[0;1;32m|[0;36m   :        [0;1;37mo[0;36m   [0;33m/  /-|[0;36m  :[0m
2024-02-11-19:37:03[36m       [0;1;37m/  | /\[0;36m :       [0;1;32m|[0;36m:         [0;1;32m__---~~~~-_  /[0;36m   :    [0;37m`0'[0;36m [0;1;30m/[0;36m   [0;33m/  /--/[0;36m :   :[0m
2024-02-11-19:37:03[36m       [0;1;37m|   |  |[0;36m  [0;33m<>[0;36m    [0;1;32m|[0;36m    [0;1;32m_---~~[0;36m [0;31m\   \[0;36m     [0;1;32m)`[0;36m   :     [0;1;30m()[0;37m~[0;1;30m/[0;36m   [0;33m/  /-/[0;36m :   :[0m
2024-02-11-19:37:03                 [33m||[0m    [31m/[0m[1;32m_-~~[0m[31m/[0m  [33m||[0m   [31m\   \   /[0m           [1;30m||[0m[33m_--~~//-/]`[0m     [36m:[0m
2024-02-11-19:37:03                [33m_--__[0m [31m/[0;33m~[0;31m/  /[0m   [33m||[0m [35moo [0;31m\[0;35moo[0m [31m\/`[0m  [33m____----~~~~   /~//.'[0m     [36m:[0m
2024-02-11-19:37:03               [33m<[0m[1;37moooooo[0;1;31m(((([0;1;37m000000000000[0m[33m----~~~~              / //'[0m
2024-02-11-19:37:03[34m~-~-~-~-~-~-~-[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`                     / //[0;34m~-~-~-~-~-~-~-~[0m
2024-02-11-19:37:03             [33m'[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`                     .///`[0m[34m_-_ _-_  -~--~--[0m
2024-02-11-19:37:03[34m      -~--     [0;1;33m`[0;34m [0;33m'[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;34m_-_ __-_ _-___--~~ ~-[0;33m./_=[0;34m~     ~   ~[0m
2024-02-11-19:37:03[34m          _          [0;1;33m`[0;34m [0;33m'[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;34m __--~__--~  _-         \|        _-~--__[0m
2024-02-11-19:37:03[34m        -~ ~~--            [0;33m`[0;34m [0;1;33m'[0;34m            --~           _-~--__[0m
2024-02-11-19:37:03
2024-02-11-19:37:03    There are currently 13 atmai online.
2024-02-11-19:37:03
2024-02-11-19:37:03    If you are new to Lost Souls, simply type 'new' as your name. 
2024-02-11-19:37:03
2024-02-11-19:37:03[1;37mName[0m: [1;37mPassword[0m: 
2024-02-11-19:37:03
2024-02-11-19:37:03    You last logged in at Sun Feb 11 13:02:21 2024 from 169.150.218.83#85.191.191.7.
2024-02-11-19:37:03
2024-02-11-19:37:03                                                                                                                                                              [1;34m[ [0;1;37mLost Souls Atman Menu[0;1;34m ][0m
2024-02-11-19:37:03[1;34m[[0;1;37m1[0;1;34m] Incarnate as Robbingdahood[0m        [1;34m[[0;1;37mA[0;1;34m] Account Settings Menu[0m             [1;34m[[0;1;37mC[0;1;34m] Create a New Character[0m            [1;34m[[0;1;37mE[0;1;34m] Set Email Address[0m                 [1;34m[[0;1;37mL[0;1;34m] Incarnation Lock[0m                  [1;34m[[0;1;37mM[0;1;34m] Check for New Mail[0m                [1;34m[[0;1;37mN[0;1;34m] Lost Souls News[0m                   [1;34m[[0;1;37mP[0;1;34m] Set Password[0m                      [1;34m[[0;1;37mQ[0;1;34m] Quit Lost Souls[0m
2024-02-11-19:37:03[1;34m[[0;1;37mR[0;1;34m] Remove Atman[0m                      [1;34m[[0;1;37mT[0;1;34m] Terminal Setup Menu[0m               [1;34m[[0;1;37mW[0;1;34m] Who's On[0m                          [1;34m[[0;1;37m?[0;1;34m] Show Menu[0m                         
2024-02-11-19:37:03
2024-02-11-19:37:05[1;34m][0m [0;37m1[0m
2024-02-11-19:37:05
2024-02-11-19:37:05[1;37m    Robbingdahood[0;1;34m is already incarnate in [0;1;37ma storage room[0;1;34m.
2024-02-11-19:37:05[0m
2024-02-11-19:37:07[1;34mDo you want to take over control?[0m [1;34m[[0;1;37mY[0;1;34m/[0;1;37mn[0;1;34m][0m [0;37my[0m
2024-02-11-19:37:07
2024-02-11-19:37:07[1;34m    Transferring control...[0m
2024-02-11-19:37:07
2024-02-11-19:37:07    a storage room [1;34m[s][0m
2024-02-11-19:37:07
2024-02-11-19:37:07    This is a well-lit, narrow, rectangular room.  The exit to the south leads out into the main guildhall.  There are a whole bunch of drawers and cupboards lining the high walls from floor to ceiling on both sides and along the back wall.  Each one appears to be locked and well cared for.  There are [31mred wooden ladders[0m on each wall.  There are several boxes stacked neatly in the corner.  
2024-02-11-19:37:07
2024-02-11-19:37:07    The area is reasonably well-lit.  
2024-02-11-19:37:07
2024-02-11-19:37:07    The only obvious exit is south.
2024-02-11-19:37:07
2024-02-11-19:37:07    You are dropped off by Link Death on his [1;37mpale stallion[0m.
2024-02-11-19:37:08> [0;37m[0m
2024-02-11-19:37:08> [0;37m[0m
2024-02-11-19:37:08> [0;37m[0m
2024-02-11-19:37:13> [0;37mtesting_send_move w[0m
2024-02-11-19:37:13[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d "$neo4j_bodyasd" | jq .'.[0m
2024-02-11-19:37:13[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-19:37:31[0;37mneo4j_body[0m
2024-02-11-19:37:31
2024-02-11-19:37:31    You don't know how to 'neo4j_body'.
2024-02-11-19:37:34> [0;37m#var neo4j_body[0m
2024-02-11-19:37:34[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_body[38;5;164m} {[38;5;188m\"statements\":[\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"][38;5;164m}[0m
[0m
2024-02-11-19:37:37
2024-02-11-19:37:37[1;34m[[0;1;37mO[0;37mO[0;1;30mC [0;1;37mKaess[0;1;34m][0m "[0mfor fuck's sake[0m"
2024-02-11-19:39:14[0;37m#variable {testing} {{\"asdsasad\":}[0m
2024-02-11-19:39:14[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-11-19:39:14[0m#WARNING: VARIABLE {\"asdsasad\":}. THE \ CHARACTER NEEDS TO BE REPLACED WITH = FOR A STRICT EQUALITY MATCH.[0m
2024-02-11-19:39:14[0m#OK: VARIABLE {testing} HAS BEEN SET TO {{"asdsasad\":}{}}.[0m
2024-02-11-19:39:18[0;37m#variable {testing} {{\"asdsasad\":\}}[0m
2024-02-11-19:39:18[0m#WARNING: VARIABLE {\"asdsasad\":\}. THE \ CHARACTER NEEDS TO BE REPLACED WITH = FOR A STRICT EQUALITY MATCH.[0m
2024-02-11-19:39:18[0m#OK: VARIABLE {testing} HAS BEEN SET TO {{"asdsasad\":\}{}}.[0m
2024-02-11-19:39:31[0;37m#var testing[0m
2024-02-11-19:39:31[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mtesting[38;5;164m}
2024-02-11-19:39:31[38;5;164m{
2024-02-11-19:39:31[38;5;188m[38;5;164m    {[38;5;188m"asdsasad\":\[38;5;164m} [38;5;164m{[38;5;188m[38;5;164m}
2024-02-11-19:39:31[38;5;164m}[0m
2024-02-11-19:39:47[0;37m#variable {testing} {"{\"asdsasad\":\}"}[0m
2024-02-11-19:39:47[0m#OK: VARIABLE {testing} HAS BEEN SET TO {"{\"asdsasad\":\}"}.[0m
2024-02-11-19:39:49[0;37m#var testing[0m
2024-02-11-19:39:49[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mtesting[38;5;164m} {[38;5;188m"{\"asdsasad\":\}"[38;5;164m}[0m
[0m
2024-02-11-19:39:59[0;37m#variable {testing} {"{\"asdsasad\":\}"}[0m
2024-02-11-19:39:59[0m#OK: VARIABLE {testing} HAS BEEN SET TO {"{\"asdsasad\":\}"}.[0m
2024-02-11-19:40:01[0;37m#variable {testing} {"{\"asdsasad\":}"}[0m
2024-02-11-19:40:01[0m#OK: VARIABLE {testing} HAS BEEN SET TO {"{\"asdsasad\":}"}.[0m
2024-02-11-19:40:02[0;37m#variable {testing} {"{\"asdsasad\":\}"}[0m
2024-02-11-19:40:02[0m#OK: VARIABLE {testing} HAS BEEN SET TO {"{\"asdsasad\":\}"}.[0m
2024-02-11-19:40:11[0;37m#variable {testing} {"{\"asdsasad\":"}[0m
2024-02-11-19:40:11[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-11-19:40:11[0m#OK: VARIABLE {testing} HAS BEEN SET TO {"{\"asdsasad\":"}}.[0m
2024-02-11-19:40:12[0;37m#variable {testing} {"{\"asdsasad\":\}"}[0m
2024-02-11-19:40:12[0m#OK: VARIABLE {testing} HAS BEEN SET TO {"{\"asdsasad\":\}"}.[0m
2024-02-11-19:40:16[0;37m#variable {testing} {"{\"asdsasad\":"}[0m
2024-02-11-19:40:16[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-11-19:40:16[0m#OK: VARIABLE {testing} HAS BEEN SET TO {"{\"asdsasad\":"}}.[0m
2024-02-11-19:40:19[0;37m#var testing[0m
2024-02-11-19:40:19[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mtesting[38;5;164m} {[38;5;188m"{\"asdsasad\":"}[38;5;164m}[0m
[0m
2024-02-11-19:41:05[0;37mrelo[0m
2024-02-11-19:41:05
2024-02-11-19:41:05    You don't know how to 'relo'.
2024-02-11-19:41:15> [0;37mreload:_configs[0m
2024-02-11-19:41:15
2024-02-11-19:41:15    You don't know how to 'reload:_configs'.
2024-02-11-19:41:20> [0;37mreload_configs[0m
2024-02-11-19:41:21[0;37m[0m
2024-02-11-19:41:22> [0;37m[0m
2024-02-11-19:41:33> [0;37m#var neo4j_body[0m
2024-02-11-19:41:33[0m#VARIABLE: NO MATCHES FOUND FOR {neo4j_body}.[0m
2024-02-11-19:41:45[0;37mtesting_send_move w[0m
2024-02-11-19:41:45[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d "$neo4j_bodyasd" | jq .'.[0m
2024-02-11-19:41:45[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-19:41:49[0;37m#var neo4j_body[0m
2024-02-11-19:41:49[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_body[38;5;164m} {[38;5;188m"{\"statements\":["};#foreach {{MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r}} {neo4j_statement}{#cat {neo4j_body} {"{\"statement\":\"$neo4j_statement\}"}};#cat {neo4j_body} {"}]"[38;5;164m}[0m
[0m
2024-02-11-19:42:31[0;37m    #variable {neo4j_body} {"{\"statements\":["};[0m
2024-02-11-19:42:31[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-11-19:42:31[0m#OK: VARIABLE {neo4j_body} HAS BEEN SET TO {"{\"statements\":["};}.[0m
2024-02-11-19:42:33[0;37m[0m
2024-02-11-19:42:38> [0;37m    #variable {neo4j_body} {"{\"statements\":\["};[0m
2024-02-11-19:42:38[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-11-19:42:38[0m#OK: VARIABLE {neo4j_body} HAS BEEN SET TO {"{\"statements\":\["};}.[0m
2024-02-11-19:42:42[0;37m    #variable {neo4j_body} {"{\"statements\":"};[0m
2024-02-11-19:42:42[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-11-19:42:42[0m#OK: VARIABLE {neo4j_body} HAS BEEN SET TO {"{\"statements\":"};}.[0m
2024-02-11-19:42:51[0;37m#var neo4j_body[0m
2024-02-11-19:42:51[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_body[38;5;164m} {[38;5;188m"{\"statements\":"};[38;5;164m}[0m
[0m
2024-02-11-19:42:56[0;37m    #variable {neo4j_body} {"{\"statementsasd\":"};[0m
2024-02-11-19:42:56[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-11-19:42:56[0m#OK: VARIABLE {neo4j_body} HAS BEEN SET TO {"{\"statementsasd\":"};}.[0m
2024-02-11-19:42:58[0;37m#var neo4j_body[0m
2024-02-11-19:42:58[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_body[38;5;164m} {[38;5;188m"{\"statementsasd\":"};[38;5;164m}[0m
[0m
2024-02-11-19:43:46[0;37m    #variable {neo4j_body} {"\{\"statements\":\["};[0m
2024-02-11-19:43:46[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-11-19:43:46[0m#OK: VARIABLE {neo4j_body} HAS BEEN SET TO {"\{\"statements\":\["};}.[0m
2024-02-11-19:43:52[0;37m    #variable {neo4j_body} {"\"statements\":\["};[0m
2024-02-11-19:43:52[0m#OK: VARIABLE {neo4j_body} HAS BEEN SET TO {"\"statements\":\["}.[0m
2024-02-11-19:44:59[0;37m[0m
2024-02-11-19:44:59> [0;37m[0m
2024-02-11-19:45:00> [0;37m    #variable {neo4j_body} {"\x7B\"statements\":\["};\n[0m
2024-02-11-19:45:00[0m#OK: VARIABLE {neo4j_body} HAS BEEN SET TO {"\x7B\"statements\":\["}.[0m
2024-02-11-19:45:00
2024-02-11-19:45:00    You cannot go northward from here.
2024-02-11-19:45:05> [0;37m#var neo4j_body[0m
2024-02-11-19:45:05[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_body[38;5;164m} {[38;5;188m"\x7B\"statements\":\["[38;5;164m}[0m
[0m
2024-02-11-19:46:09[0;37m#run {testing} {$neo4j_bocy}[0m
2024-02-11-19:46:09[0m#TRYING TO LAUNCH 'testing' RUNNING '$neo4j_bocy'.[0m
2024-02-11-19:46:09[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-19:46:12[0;37m[0m
2024-02-11-19:46:17> [0;37m#run {testing} {$neo4j_body}[0m
2024-02-11-19:46:17[0m#TRYING TO LAUNCH 'testing' RUNNING '"\x7B\"statements\":\["'.[0m
2024-02-11-19:46:17[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-19:46:20[0;37m[0m
2024-02-11-19:46:20[0;37m[0m
2024-02-11-19:46:20[0;37m[0m
2024-02-11-19:46:20> > > [0;37m[0m
2024-02-11-19:46:43> [0;37m    #variable {neo4j_body} {"¤\"statements\":\["};\n[0m
2024-02-11-19:46:43[0m#OK: VARIABLE {neo4j_body} HAS BEEN SET TO {"¤\"statements\":\["}.[0m
2024-02-11-19:46:44
2024-02-11-19:46:44    You cannot go northward from here.
2024-02-11-19:46:52> [0;37m#help replace[0m
2024-02-11-19:46:52[1;37mCommand[22;37m: #replace [1;37m{[22;37mvariable[1;37m} {[22;37moldtext[1;37m} {[22;37mnewtext[1;37m}
2024-02-11-19:46:52
2024-02-11-19:46:52[22;37m         Searches the given variable, replacing each occurrence of 'oldtext'
2024-02-11-19:46:52[22;37m         with 'newtext'. The 'oldtext' argument is a regular expression.
2024-02-11-19:46:52
2024-02-11-19:46:52[22;37m         Variables are stored in &1 to &99 with &0 holding the entire matched
2024-02-11-19:46:52[22;37m         substring.
2024-02-11-19:46:52
2024-02-11-19:46:52[1;37mExample[22;37m: #function rnd #math result 1d9;#replace test {%.} {@rnd{}}
2024-02-11-19:46:52[0m
2024-02-11-19:46:52[1;37mRelated[22;37m: cat, format, function, local, math, script and variable.[0m
2024-02-11-19:46:52
2024-02-11-19:47:24[0;37m#replace [neo4j} {¤} {'{'}[0m
2024-02-11-19:47:24[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-11-19:47:24[0m#REPLACE: VARIABLE {[neo4j}} NOT FOUND.[0m
2024-02-11-19:47:33[0;37m#var neo4j_body[0m
2024-02-11-19:47:33[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_body[38;5;164m} {[38;5;188m"¤\"statements\":\["[38;5;164m}[0m
[0m
2024-02-11-19:47:54[0;37m#help cat[0m
2024-02-11-19:47:54[1;37mCommand[22;37m: #cat [1;37m{[22;37mvariable[1;37m} {[22;37margument[1;37m}
2024-02-11-19:47:54
2024-02-11-19:47:54[22;37m         The cat command will concatenate the argument to the given variable.
2024-02-11-19:47:54[0m
2024-02-11-19:47:54[1;37mRelated[22;37m: format, function, local, math, replace, script and variable.[0m
2024-02-11-19:47:54
2024-02-11-19:48:15[0;37mreload_configs[0m
2024-02-11-19:48:23[0;37mtesting_send_move w[0m
2024-02-11-19:48:26[0;37m#var neo4j_body[0m
2024-02-11-19:48:26[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_body[38;5;164m} {[38;5;188m"{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}"[38;5;164m}[0m
[0m
2024-02-11-19:48:45[0;37m    #foreach {$statments_for_neo4j[%*]} {neo4j_statement} { #cat {neo4j_body} {"{\"statement\":\"$neo4j_statement\}"} };[0m
2024-02-11-19:48:45[0m#CAT: VARIABLE {neo4j_body} HAS BEEN SET TO {"{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}"}.[0m
2024-02-11-19:48:48[0;37m[0m
2024-02-11-19:50:36> [0;37m    #cat {neo4j_body} {"{\"statements\":\[{$neo4j_body}]"};[0m
2024-02-11-19:50:36[0m#ERROR: GET BRACED ARGUMENT: UNMATCHED BRACE.[0m
2024-02-11-19:50:36[0m#CAT: VARIABLE {neo4j_body} HAS BEEN SET TO {"{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}""{\"statements\":\[{"{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}"}]"};}.[0m
2024-02-11-19:51:01[0;37m    #cat {neo4j_body} {"{\"statements\":\[$neo4j_body]}"};[0m
2024-02-11-19:51:01[0m#CAT: VARIABLE {neo4j_body} HAS BEEN SET TO {"{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}""{\"statements\":\[{"{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}"}]"};"{\"statements\":\["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}""{\"statements\":\[{"{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}"}]"};]}"}.[0m
2024-02-11-19:51:07[0;37m#var neo4j_body[0m
2024-02-11-19:51:07[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_body[38;5;164m} {[38;5;188m"{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}""{\"statements\":\[{"{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}"}]"};"{\"statements\":\["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}""{\"statements\":\[{"{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\}"}]"};]}"[38;5;164m}[0m
[0m
2024-02-11-19:51:18[0;37m[0m
2024-02-11-19:51:18[0;37m[0m
2024-02-11-19:51:18> [0;37m[0m
2024-02-11-19:51:26> > [0;37m#var neo4j_body {}[0m
2024-02-11-19:51:26[0m#OK: VARIABLE {neo4j_body} HAS BEEN SET TO {}.[0m
2024-02-11-19:51:39[0;37m[0m
2024-02-11-19:51:39> [0;37m[0m
2024-02-11-19:51:41> [0;37mreload_configs[0m
2024-02-11-19:51:41[0m#WARNING: #READ {ls_v2.tin}: MISSING SEMICOLON ON LINE 260.[0m
2024-02-11-19:51:41[0m#ERROR: #READ {ls_v2.tin}: MISSING 1 '}' BETWEEN LINE 251 AND 260.[0m
2024-02-11-19:51:54[0;37mreload_configs[0m
2024-02-11-19:51:54
2024-02-11-19:51:54    You don't know how to 'reload_configs'.
2024-02-11-19:51:57> [0;37mtesting_send_move w[0m
2024-02-11-19:51:57
2024-02-11-19:51:57    You don't know how to 'testing_send_move'.
2024-02-11-19:52:03> 
[0m[0m
2024-02-11-19:52:03[0m#ZZZZZZZAAAAAAAAPPPP!!!!!!!!! LET'S GET OUTTA HERE!!!!!!!![0m
2024-02-11-19:52:03[0m#SESSION 'ls' DIED.[0m
2024-02-11-19:53:43
2024-02-11-19:53:43[1;30m            ~--___--~      [0;1;31mWelcome to the World[0;1;30m    __==.[0m
2024-02-11-19:53:43[1;30m-_       _--~~     _-~ ~----        [0;1;31mof[0;1;30m         __      ~~-__[0m
2024-02-11-19:53:43[1;30m  ~---[0;1;37m\[0;1;30m-~ ~~-----~~   [0;36m:[0;1;30m         [0;31mLo[0;1;31mst[0;1;33m So[0;1;31mul[0;31ms[0;1;30m     ~~~__  _-~~-[0m
2024-02-11-19:53:43 [1;30m      [0;1;37m\[0;1;30m        [0;36m:    :[0;1;30m      _             ________[0;36m:             :[0;1;30m       ~~[0m
2024-02-11-19:53:43[36m     :  [0;1;37m|[0;36m      :    :                              :    :    :   :[0m
2024-02-11-19:53:43[36m    :  [0;1;37m/|[0;36m     :   [0;1;32m|[0;36m       :   :    :  :     : :[0;1;32m|[0;36m   :    :   :   : [0;33m|\/|[0m
2024-02-11-19:53:43[36m   : [0;1;37m /  \[0;36m   :     [0;1;32m|[0;36m:     :   :    :  :     : : [0;1;32m|[0;36m  :    :   :   : [0;33m/.0  )_[0m
2024-02-11-19:53:43[36m  :  [0;1;37m|    |[0;36m :  :   :[0;1;32m|[0;36m    :        :  :     : :   [0;1;32m|[0;36m:        :   : .[0;33m( (__  `oo.[0m
2024-02-11-19:53:43[36m :  [0;1;37m/    / \[0;36m  :   :  [0;1;32m|[0;36m  :  :     :        : :    [0;1;32m|[0;36m    :   :      [0;33m<_) ||~~~//'[0m
2024-02-11-19:53:43[36m    [0;1;37m\   |   \[0;36m:   :    [0;1;32m|[0;36m:  :     :     :  :      :[0;1;32m|[0;36m   :           [0;33m</  ||[0m
2024-02-11-19:53:43[36m    [0;1;37m/\  |\   |[0;36m  :     :[0;1;32m|[0;36m :     :     :         :[0;1;32m|[0;36m   :        [0;1;37mo[0;36m   [0;33m/  /-|[0;36m  :[0m
2024-02-11-19:53:43[36m       [0;1;37m/  | /\[0;36m :       [0;1;32m|[0;36m:         [0;1;32m__---~~~~-_  /[0;36m   :    [0;37m`0'[0;36m [0;1;30m/[0;36m   [0;33m/  /--/[0;36m :   :[0m
2024-02-11-19:53:43[36m       [0;1;37m|   |  |[0;36m  [0;33m<>[0;36m    [0;1;32m|[0;36m    [0;1;32m_---~~[0;36m [0;31m\   \[0;36m     [0;1;32m)`[0;36m   :     [0;1;30m()[0;37m~[0;1;30m/[0;36m   [0;33m/  /-/[0;36m :   :[0m
2024-02-11-19:53:43                 [33m||[0m    [31m/[0m[1;32m_-~~[0m[31m/[0m  [33m||[0m   [31m\   \   /[0m           [1;30m||[0m[33m_--~~//-/]`[0m     [36m:[0m
2024-02-11-19:53:43                [33m_--__[0m [31m/[0;33m~[0;31m/  /[0m   [33m||[0m [35moo [0;31m\[0;35moo[0m [31m\/`[0m  [33m____----~~~~   /~//.'[0m     [36m:[0m
2024-02-11-19:53:43               [33m<[0m[1;37moooooo[0;1;31m(((([0;1;37m000000000000[0m[33m----~~~~              / //'[0m
2024-02-11-19:53:43[34m~-~-~-~-~-~-~-[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`                     / //[0;34m~-~-~-~-~-~-~-~[0m
2024-02-11-19:53:43             [33m'[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`                     .///`[0m[34m_-_ _-_  -~--~--[0m
2024-02-11-19:53:43[34m      -~--     [0;1;33m`[0;34m [0;33m'[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;34m_-_ __-_ _-___--~~ ~-[0;33m./_=[0;34m~     ~   ~[0m
2024-02-11-19:53:43[34m          _          [0;1;33m`[0;34m [0;33m'[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;34m __--~__--~  _-         \|        _-~--__[0m
2024-02-11-19:53:43[34m        -~ ~~--            [0;33m`[0;34m [0;1;33m'[0;34m            --~           _-~--__[0m
2024-02-11-19:53:43
2024-02-11-19:53:43    There are currently 12 atmai online.
2024-02-11-19:53:43
2024-02-11-19:53:43    If you are new to Lost Souls, simply type 'new' as your name. 
2024-02-11-19:53:43
2024-02-11-19:53:43[1;37mName[0m: [1;37mPassword[0m: 
2024-02-11-19:53:43
2024-02-11-19:53:43    You last logged in at Sun Feb 11 13:37:03 2024 from 169.150.218.83#85.191.191.7.
2024-02-11-19:53:43
2024-02-11-19:53:43                                                                                                                                                              [1;34m[ [0;1;37mLost Souls Atman Menu[0;1;34m ][0m
2024-02-11-19:53:43[1;34m[[0;1;37m1[0;1;34m] Incarnate as Robbingdahood[0m        [1;34m[[0;1;37mA[0;1;34m] Account Settings Menu[0m             [1;34m[[0;1;37mC[0;1;34m] Create a New Character[0m            [1;34m[[0;1;37mE[0;1;34m] Set Email Address[0m                 [1;34m[[0;1;37mL[0;1;34m] Incarnation Lock[0m                  [1;34m[[0;1;37mM[0;1;34m] Check for New Mail[0m                [1;34m[[0;1;37mN[0;1;34m] Lost Souls News[0m                   [1;34m[[0;1;37mP[0;1;34m] Set Password[0m                      [1;34m[[0;1;37mQ[0;1;34m] Quit Lost Souls[0m
2024-02-11-19:53:43[1;34m[[0;1;37mR[0;1;34m] Remove Atman[0m                      [1;34m[[0;1;37mT[0;1;34m] Terminal Setup Menu[0m               [1;34m[[0;1;37mW[0;1;34m] Who's On[0m                          [1;34m[[0;1;37m?[0;1;34m] Show Menu[0m                         
2024-02-11-19:53:43
2024-02-11-19:53:45[1;34m][0m [0;37m1[0m
2024-02-11-19:53:45
2024-02-11-19:53:45[1;37m    Robbingdahood[0;1;34m is already incarnate in [0;1;37ma storage room[0;1;34m.
2024-02-11-19:53:45[0m
2024-02-11-19:53:46[1;34mDo you want to take over control?[0m [1;34m[[0;1;37mY[0;1;34m/[0;1;37mn[0;1;34m][0m [0;37mY[0m
2024-02-11-19:53:46
2024-02-11-19:53:46[1;34m    Transferring control...[0m
2024-02-11-19:53:46
2024-02-11-19:53:46    a storage room [1;34m[s][0m
2024-02-11-19:53:46
2024-02-11-19:53:46    This is a well-lit, narrow, rectangular room.  The exit to the south leads out into the main guildhall.  There are a whole bunch of drawers and cupboards lining the high walls from floor to ceiling on both sides and along the back wall.  Each one appears to be locked and well cared for.  There are [31mred wooden ladders[0m on each wall.  There are several boxes stacked neatly in the corner.  
2024-02-11-19:53:46
2024-02-11-19:53:46    The area is reasonably well-lit.  
2024-02-11-19:53:46
2024-02-11-19:53:46    The only obvious exit is south.
2024-02-11-19:53:46
2024-02-11-19:53:46    You are dropped off by Link Death on his [1;37mpale stallion[0m.
2024-02-11-19:53:57> [0;37mtesting_send_move w[0m
2024-02-11-19:53:57[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d ""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}"" | jq .'.[0m
2024-02-11-19:53:57[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-19:55:03[0;37mrelod_configs[0m
2024-02-11-19:55:03
2024-02-11-19:55:03    You don't know how to 'relod_configs'.
2024-02-11-19:55:05> [0;37mtesting_send_move w[0m
2024-02-11-19:55:05[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d ""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}"" | jq .'.[0m
2024-02-11-19:55:05[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-19:55:22[0;37m#var neo4j_body[0m
2024-02-11-19:55:22[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_body[38;5;164m} {[38;5;188m"{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}"[38;5;164m}[0m
[0m
2024-02-11-19:55:53[0;37mrelod_configs[0m
2024-02-11-19:55:53
2024-02-11-19:55:53    You don't know how to 'relod_configs'.
2024-02-11-19:55:55> [0;37mtesting_send_move w[0m
2024-02-11-19:55:55[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d ""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}"" | jq .'.[0m
2024-02-11-19:55:55[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-19:56:42[0;37mrelod_configs[0m
2024-02-11-19:56:43
2024-02-11-19:56:43    You don't know how to 'relod_configs'.
2024-02-11-19:56:43> [0;37mtesting_send_move w[0m
2024-02-11-19:56:43[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d ""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}"" | jq .'.[0m
2024-02-11-19:56:43[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-19:56:47[0;37m#var neo4j_body[0m
2024-02-11-19:56:47[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_body[38;5;164m} {[38;5;188m"{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}"[38;5;164m}[0m
[0m
2024-02-11-19:57:15[0;37m#var statments_for_neo4j[0m
2024-02-11-19:57:15[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mstatments_for_neo4j[38;5;164m}
2024-02-11-19:57:15[38;5;164m{
2024-02-11-19:57:15[38;5;188m[38;5;164m    {[38;5;188m1[38;5;164m} [38;5;164m{[38;5;188mMATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r[38;5;164m}
2024-02-11-19:57:15[38;5;164m}[0m
2024-02-11-19:57:44[0;37mrelod_configs[0m
2024-02-11-19:57:45
2024-02-11-19:57:45    You don't know how to 'relod_configs'.
2024-02-11-19:57:48> [0;37mtesting_send_move w[0m
2024-02-11-19:57:48[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d ""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}"" | jq .'.[0m
2024-02-11-19:57:48[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-19:58:10[0;37mtesting_send_move w[0m
2024-02-11-19:58:10[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d ""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}"" | jq .'.[0m
2024-02-11-19:58:10[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-19:58:14[0;37mtesting_send_move w[0m
2024-02-11-19:58:14[0m[1;31mstr_alloc_free: trying to free invalid memory: 29283[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m000[1;32m] [000] = [1;31mmainloop()[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m001[1;32m] [000] = [1;31mprocess_input(void)[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m002[1;32m] [001] = [1;31mscript_driver(%p,%d,%p)[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m003[1;32m] [001] = [1;31mparse_input(%s,%s)[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m004[1;32m] [002] = [1;31mscript_driver(%p,%d,%p)[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m005[1;32m] [002] = [1;31mparse_input(%s,%s)[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m006[1;32m] [003] = [1;31mscript_driver(%p,%d,%p)[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m007[1;32m] [003] = [1;31mdo_run(ls,0x55924efa5dc0)[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m008[1;32m] [006] = [1;31msub_arg_in_braces(%p,%p,%p,%d,%d)[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m009[1;32m] [007] = [1;31msubstitute(%p,%p,%p,%d)[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m000[1;32m] [000] = [1;31mmainloop()[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m001[1;32m] [000] = [1;31mprocess_input(void)[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m002[1;32m] [001] = [1;31mscript_driver(%p,%d,%p)[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m003[1;32m] [001] = [1;31mparse_input(%s,%s)[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m004[1;32m] [002] = [1;31mscript_driver(%p,%d,%p)[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m005[1;32m] [002] = [1;31mparse_input(%s,%s)[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m006[1;32m] [003] = [1;31mscript_driver(%p,%d,%p)[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m007[1;32m] [003] = [1;31mdo_run(ls,0x55924efa5dc0)[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m008[1;32m] [006] = [1;31mnew_session(%p,%p,%p,%d,%d)[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m009[1;32m] [006] = [1;31mtintin_printf(%p,%p,...)[0m[0m
2024-02-11-19:58:14[0m[1;32mDEBUG_STACK[[1;31m010[1;32m] [007] = [1;31mtintin_puts2(%p,%p)[0m[0m
2024-02-11-19:59:04                             [1;37mWe[0;37mlc[0;1;30mom[0;37me t[0;1;37mo t[0;37mhe [0;1;30mWo[0;37mrl[0;1;37md[0m
2024-02-11-19:59:04                                      [1;30mof[0m
2024-02-11-19:59:04                                  [1;37mLo[0;37mst [0;1;30mSo[0;37mul[0;1;37ms[0m
2024-02-11-19:59:04
2024-02-11-19:59:04  [1;30mW_w w w w w_W[0m                       [1;37m|[0m}[1;31m=[0m[31m-[0m                      [1;30mW_w w w w w_W[0m
2024-02-11-19:59:04  `[1;30m7~[0mY[1;30m~[0mY[1;30m~[0mY[1;30m~[0mY[1;30m~P[0m'                       [1;37m|[0m                         `[1;30m7~[0mY[1;30m~[0mY[1;30m~[0mY[1;30m~[0mY[1;30m~P[0m'
2024-02-11-19:59:04    [1;30ml[0m [1;34m.[0m      [1;30ml[0m                        [1;37m|[0m                           [1;30ml[0m    [1;34m.[0m  [1;30ml[0m
2024-02-11-19:59:04    [1;30ml[0m [1;34m:[0m [1;30mW_w w w w_W[0m                [1;30ml[0m'[1;32m~~~[0m`[1;30ml[0m                [1;30mW_w w w w_W[0m  [1;34m:.[0m [1;30ml[0m
2024-02-11-19:59:04    [1;30ml[0m [1;34m;[0m `[1;30m7~[0mY[1;30m~[0mY[1;30m~[0mY[1;30m~P[0m'          [1;30m____.-^-----^-.____[0m          '[1;30m7~[0mY[1;30m~[0mY[1;30m~[0mY[1;30m~P[0m'  [1;34m:[0m  [1;30ml[0m
2024-02-11-19:59:04    [1;30ml[0m    [1;30m:-[0mI[1;30m-[0mI[1;30m-[0mI[1;30m-:[0m         .[1;30m'~~~~~~~~~~~~~~~~~~~[0m`.         [1;30m:-[0mI[1;30m-[0mI[1;30m-[0mI[1;30m-:[0m   [1;34m`[0m  [1;30ml[0m
2024-02-11-19:59:04[33m-[0m [33m-[0m [1;30ml[0m .[1;30m-[0m.[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m [1;30m-[0m [1;30m-[0m [1;30m-[0m [1;30m-[0m |   _____  |  _____   | [1;30m-[0m [1;30m-[0m [1;30m-[0m [1;30m-[0m [1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m  .[1;30m-[0m. [1;30ml[0m [33m-[0m [33m-[0m
2024-02-11-19:59:04[33m.[0m   [1;30ml[0m | `[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m  .  '   |  [1;30m`[0mWWWWW[1;30m'[0m | [1;30m`[0mWWWWW[1;30m'[0m  |  ,`   . [1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_/./| [1;30ml[0m   [1;33m.[0m
2024-02-11-19:59:04 [1;33m'[0m  [1;30ml[0m_|  [1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m[1;30m_m_m_m_m_m_m_MMMMM[0m     [1;30mMMMMM_m_m_m_m_m_m_[0m[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_/' |_[1;30ml[0m  [33m.[0m
2024-02-11-19:59:04      `\ [1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m-------------WWWWW[33m/~[0m[1;33mY[0m[33m~\[0mWWWWW-------------[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m   /'    [1;33m'[0m
2024-02-11-19:59:04[33m`[0m [1;33m.[0m [33m.[0m   `|_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_____________[1;30mMMMMM[0m[33m__[0m[1;30m|[0m[33m__[0m[1;30mMMMMM[0m_____________[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_[1;30ml[0m_/'  [33m,  .
2024-02-11-19:59:04     [0;1;33m`[0;33m .  [0;1;30m~~~~~~~[0;33m   [0;1;33m.[0;33m      .   [0;1;30m~~~~~[0;33m  ^  [0;1;30m~~~~~[0;33m  [0;1;33m.[0;33m        ,  [0;1;30m~~~~~~~[0;33m    . [0;1;33m`[0;33m
2024-02-11-19:59:04 '   [0;1;33m.[0;33m    .[0;1;33m'[0;33m    .    `  .     [0;1;33m.[0;33m '    .   [0;1;33m.[0;33m`      `   .  [0;1;33m.[0;33m     .    ,       [0;1;33m.[0;33m  '
2024-02-11-19:59:04[0m
2024-02-11-19:59:04    There are currently 11 atmai online.
2024-02-11-19:59:04
2024-02-11-19:59:04    If you are new to Lost Souls, simply type 'new' as your name. 
2024-02-11-19:59:04
2024-02-11-19:59:04[1;37mName[0m: [1;37mPassword[0m: 
2024-02-11-19:59:04
2024-02-11-19:59:04    You last logged in at Sun Feb 11 13:53:43 2024 from 169.150.218.83#85.191.191.7.
2024-02-11-19:59:04
2024-02-11-19:59:04                                                                                                                                                              [1;34m[ [0;1;37mLost Souls Atman Menu[0;1;34m ][0m
2024-02-11-19:59:04[1;34m[[0;1;37m1[0;1;34m] Incarnate as Robbingdahood[0m        [1;34m[[0;1;37mA[0;1;34m] Account Settings Menu[0m             [1;34m[[0;1;37mC[0;1;34m] Create a New Character[0m            [1;34m[[0;1;37mE[0;1;34m] Set Email Address[0m                 [1;34m[[0;1;37mL[0;1;34m] Incarnation Lock[0m                  [1;34m[[0;1;37mM[0;1;34m] Check for New Mail[0m                [1;34m[[0;1;37mN[0;1;34m] Lost Souls News[0m                   [1;34m[[0;1;37mP[0;1;34m] Set Password[0m                      [1;34m[[0;1;37mQ[0;1;34m] Quit Lost Souls[0m
2024-02-11-19:59:04[1;34m[[0;1;37mR[0;1;34m] Remove Atman[0m                      [1;34m[[0;1;37mT[0;1;34m] Terminal Setup Menu[0m               [1;34m[[0;1;37mW[0;1;34m] Who's On[0m                          [1;34m[[0;1;37m?[0;1;34m] Show Menu[0m                         
2024-02-11-19:59:04
2024-02-11-19:59:05[1;34m][0m [0;37m1[0m
2024-02-11-19:59:05
2024-02-11-19:59:05[1;37m    Robbingdahood[0;1;34m is already incarnate in [0;1;37ma storage room[0;1;34m.
2024-02-11-19:59:05[0m
2024-02-11-19:59:07[1;34mDo you want to take over control?[0m [1;34m[[0;1;37mY[0;1;34m/[0;1;37mn[0;1;34m][0m [0;37my[0m
2024-02-11-19:59:07
2024-02-11-19:59:07[1;34m    Transferring control...[0m
2024-02-11-19:59:07
2024-02-11-19:59:07    a storage room [1;34m[s][0m
2024-02-11-19:59:07
2024-02-11-19:59:07    This is a well-lit, narrow, rectangular room.  The exit to the south leads out into the main guildhall.  There are a whole bunch of drawers and cupboards lining the high walls from floor to ceiling on both sides and along the back wall.  Each one appears to be locked and well cared for.  There are [31mred wooden ladders[0m on each wall.  There are several boxes stacked neatly in the corner.  
2024-02-11-19:59:07
2024-02-11-19:59:07    The area is reasonably well-lit.  
2024-02-11-19:59:07
2024-02-11-19:59:07    The only obvious exit is south.
2024-02-11-19:59:07
2024-02-11-19:59:07    You are dropped off by Link Death on his [1;37mpale stallion[0m.
2024-02-11-19:59:19> 
2024-02-11-19:59:19[1;34m[[0;1;37mO[0;37mO[0;1;30mC [0;1;37mKaess[0;1;34m][0m "[0maww, didn't get talent pop on Eosphoros Eklektos[0m"
2024-02-11-19:59:26[0;37mtesting_send_move w[0m
2024-02-11-19:59:36[0;37m#variable {neo4j_body}[0m
2024-02-11-19:59:36[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_body[38;5;164m} {[38;5;188m"{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}"[38;5;164m}[0m
[0m
2024-02-11-20:00:44[0;37mrelo[0m
2024-02-11-20:00:44
2024-02-11-20:00:44    You don't know how to 'relo'.
2024-02-11-20:00:48> [0;37mreload_configs[0m
2024-02-11-20:00:52[0;37mtesting_send_move w[0m
2024-02-11-20:00:52[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d ""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}"" | jq .'.[0m
2024-02-11-20:00:52[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-20:01:06[0;37mtesting_send_move e[0m
2024-02-11-20:01:06[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d ""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}"" | jq .'.[0m
2024-02-11-20:01:06[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-20:02:30[0;37mreload_configs[0m
2024-02-11-20:02:34[0;37mtesting_send_move e w[0m
2024-02-11-20:02:34[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d ""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"},""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"},"]}"" | jq .'.[0m
2024-02-11-20:02:34[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-20:04:42[0;37m#help foreach[0m
2024-02-11-20:04:42[1;37mCommand[22;37m: #foreach [1;37m{[22;37mlist[1;37m} {[22;37mvariable[1;37m} {[22;37mcommands[1;37m}
2024-02-11-20:04:42
2024-02-11-20:04:42[22;37m         For each item in the provided list the foreach statement will update
2024-02-11-20:04:42[22;37m         the given variable and execute the command part of the statement. List
2024-02-11-20:04:42[22;37m         elements must be separated by braces or semicolons.
2024-02-11-20:04:42
2024-02-11-20:04:42[1;37mExample[22;37m: #foreach {bob;tim;kim} {name} {tell $name Hello}
2024-02-11-20:04:42[1;37mExample[22;37m: #foreach {{bob}{tim}{kim}} {name} {tell $name Hello}
2024-02-11-20:04:42[0m
2024-02-11-20:04:42[1;37mRelated[22;37m: break, continue, list, loop, parse, repeat, return and while.[0m
2024-02-11-20:04:42
2024-02-11-20:04:53[0;37m#help loop[0m
2024-02-11-20:04:53[1;37mCommand[22;37m: #loop [1;37m{[22;37m<start>[1;37m} {[22;37m<finish>[1;37m} {[22;37m<variable>[1;37m} {[22;37mcommands[1;37m}
2024-02-11-20:04:53
2024-02-11-20:04:53[22;37m         Like a for statement, loop will loop from start to finish incrementing
2024-02-11-20:04:53[22;37m         or decrementing by 1 each time through.  The value of the loop counter
2024-02-11-20:04:53[22;37m         is stored in the provided variable, which you can use in the commands.
2024-02-11-20:04:53
2024-02-11-20:04:53[1;37mExample[22;37m: #loop 1 3 loop {get all $loop.corpse}
2024-02-11-20:04:53[22;37m         This equals 'get all 1.corpse;get all 2.corpse;get all 3.corpse'.
2024-02-11-20:04:53
2024-02-11-20:04:53[1;37mExample[22;37m: #loop 3 1 cnt {drop $cnt\.key}
2024-02-11-20:04:53[22;37m         This equals 'drop 3.key;drop 2.key;drop 1.key'.
2024-02-11-20:04:53[0m
2024-02-11-20:04:53[1;37mRelated[22;37m: break, continue, foreach, list, parse, repeat, return and while.[0m
2024-02-11-20:04:53
2024-02-11-20:05:12[0;37m#help parse[0m
2024-02-11-20:05:12[1;37mCommand[22;37m: #parse [1;37m{[22;37mstring[1;37m} {[22;37mvariable[1;37m} {[22;37mcommands[1;37m}
2024-02-11-20:05:12
2024-02-11-20:05:12[22;37m         Like the loop statement, parse will loop from start to finish through
2024-02-11-20:05:12[22;37m         the given string.  The value of the current character is stored in the
2024-02-11-20:05:12[22;37m         provided variable.
2024-02-11-20:05:12
2024-02-11-20:05:12[1;37mExample[22;37m: #parse {hello world} {char} {#show $char}
2024-02-11-20:05:12[0m
2024-02-11-20:05:12[1;37mRelated[22;37m: break, continue, foreach, list, loop, repeat, return and while.[0m
2024-02-11-20:05:12
2024-02-11-20:06:13[0;37m    #foreach {$statments_for_neo4j[]} {neo4j_statement}[0m
2024-02-11-20:06:13[0m#SYNTAX: #FOREACH <LIST> <VARIABLE> <COMMANDS>[0m
2024-02-11-20:06:30> > [0;37m    #foreach {$statments_for_neo4j[]} {neo4j_statement} {#showme $neo4j_statement}[0m
2024-02-11-20:06:30[0mMATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r[0m
2024-02-11-20:06:30[0mMATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r[0m
2024-02-11-20:06:42[0;37m    #foreach {&statments_for_neo4j[]} {neo4j_statement} {#showme $neo4j_statement}[0m
2024-02-11-20:06:42[0m2[0m
2024-02-11-20:06:59[0;37m#help lists[0m
2024-02-11-20:06:59[22;37m         There are several different types of lists in tintin which behave in a
2024-02-11-20:06:59[22;37m         fairly universal manner. To properly explain lists it's easiest to
2024-02-11-20:06:59[22;37m         explain the most basic variable type first before discussing more
2024-02-11-20:06:59[22;37m         complex types.
2024-02-11-20:06:59
2024-02-11-20:06:59       - Basic variable: The standard key = value variable.
2024-02-11-20:06:59
2024-02-11-20:06:59       - Simple list: A string that contains semicolon delimited fields.
2024-02-11-20:06:59[22;37m         {a;b;c}. Can be saved as a variable.
2024-02-11-20:06:59
2024-02-11-20:06:59       - Brace list: A string in which fields are delimited with braces.
2024-02-11-20:06:59[22;37m         {a}{b}{c}. Brace lists cannot be stored as a variable because tables
2024-02-11-20:06:59[22;37m         use braces as well, they must be stored as a simple list instead.
2024-02-11-20:06:59
2024-02-11-20:06:59       - Table: Think of this as variables nested within another variable. Or
2024-02-11-20:06:59[22;37m          as variables contained within another variable.
2024-02-11-20:06:59
2024-02-11-20:06:59       - List: A table that uses integers for its indexes. Also known as an
2024-02-11-20:06:59[22;37m         array. The #list command is a utility command for using tables as
2024-02-11-20:06:59[22;37m         arrays.
2024-02-11-20:06:59
2024-02-11-20:06:59[1;32m         Simple Variables
2024-02-11-20:06:59
2024-02-11-20:06:59[1;37mExample[22;37m:
2024-02-11-20:06:59[22;37m         #variable {simple} {Hello World!}
2024-02-11-20:06:59[22;37m         #show $simple
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         To see if the 'simple' variable exists you can use &{simple} which
2024-02-11-20:06:59[22;37m         will display 0 if the variable does not exist, or the variable's index
2024-02-11-20:06:59[22;37m         if it exists.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         If you have multiple variables they are sorted alphabetically and
2024-02-11-20:06:59[22;37m         numerically. While it's not all that relevant for simple variables,
2024-02-11-20:06:59[22;37m         the first variable has index 1, the second variable index 2, and so
2024-02-11-20:06:59[22;37m         on.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         Variable names need to start with a letter and only exist of letters,
2024-02-11-20:06:59[22;37m         numbers, and underscores. If you need to use a non standard variable
2024-02-11-20:06:59[22;37m         name this is possible using braces.
2024-02-11-20:06:59
2024-02-11-20:06:59[1;37mExample[22;37m: #variable {:)} {Happy Happy!};#show ${:)}
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         Variables can be accessed using their index. While primarily useful
2024-02-11-20:06:59[22;37m         for tables it is possible to do this for simple variables. Use +1 for
2024-02-11-20:06:59[22;37m         the first variable, +2 for the second variable, etc. Use -1 for the
2024-02-11-20:06:59[22;37m         last variable, -2 for the second last variable, etc.
2024-02-11-20:06:59
2024-02-11-20:06:59[1;37mExample[22;37m: #show The first variable is: *{+1} with value: ${+1}
2024-02-11-20:06:59
2024-02-11-20:06:59[1;32m         Removing Variables
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         To remove a variable, use #unvariable or #unvar (every command can be
2024-02-11-20:06:59[22;37m         abbreviated). It's possible to remove multiple variables at once
2024-02-11-20:06:59[22;37m         using #unvar {var 1} {var 2} {etc}
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         Variables are unique to each session, so if you have multiple
2024-02-11-20:06:59[22;37m         sessions, removing a variable from one session won't remove it from
2024-02-11-20:06:59[22;37m         other sessions.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         If you remove a table variable, all variables contained within that
2024-02-11-20:06:59[22;37m         table variable are removed as well.
2024-02-11-20:06:59
2024-02-11-20:06:59[1;32m         Simple Lists
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         A simple list is a string that contains semicolon delimited fields.
2024-02-11-20:06:59[22;37m         Commands can be entered as simple lists, for example:
2024-02-11-20:06:59[22;37m         #show {a};#show {b} will execute a single line as two commands.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         Several commands take a simple list as their input, these are:
2024-02-11-20:06:59[22;37m         #foreach, #line substitute, #path load, #list create, and #highlight.
2024-02-11-20:06:59
2024-02-11-20:06:59[1;32m         Brace Lists
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         A brace list is a string in which fields are delimited with braces.
2024-02-11-20:06:59[22;37m         Most commands take a brace list for their arguments, for example:
2024-02-11-20:06:59[22;37m         #session {x} {mud.com} {1234} {mud.tin}. The session command takes
2024-02-11-20:06:59[22;37m         4 arguments, the 4th argument (command file) is optional.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         Commands that take a simple list as their input will also accept a
2024-02-11-20:06:59[22;37m         brace list, keep in mind you'll have to embed the brace list in an
2024-02-11-20:06:59[22;37m         extra set of braces, for example: #path load {{n}{s}{w}{w}}, which is
2024-02-11-20:06:59[22;37m         identical to: #path load {n;s;w;w}.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         Brace lists cannot be stored as variables because TinTin++ will
2024-02-11-20:06:59[22;37m         confuse them with tables. You can convert a brace list to a table
2024-02-11-20:06:59[22;37m         variable using: #list {bracelist} {create} {{a}{b}{c}} this will look
2024-02-11-20:06:59[22;37m         internally as: {{1}{a}{2}{b}{3}{c}}. You can then convert this table
2024-02-11-20:06:59[22;37m         back to a simple list using: #list {bracelist} {simplify} which will
2024-02-11-20:06:59[22;37m         change it to {a;b;c}.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         Braces cannot easily be escaped in TinTin++. Using \{ or \} will not
2024-02-11-20:06:59[22;37m         work. The reason for this is due to several factors, but primarily
2024-02-11-20:06:59[22;37m         backward compatibility. To escape braces you must define them using
2024-02-11-20:06:59[22;37m         hexadecimal notation using \x7B and \x7D. See #help escape for a list
2024-02-11-20:06:59[22;37m         of escape options, and the help file will also remind you of how to
2024-02-11-20:06:59[22;37m         escape braces.
2024-02-11-20:06:59
2024-02-11-20:06:59[1;32m         Tables
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         Tables are key/value pairs stored within a variable. Tables are also
2024-02-11-20:06:59[22;37m         known as associative arrays, dictionaries, maps, nested variables,
2024-02-11-20:06:59[22;37m         structures, and probably a couple of other names. There are several
2024-02-11-20:06:59[22;37m         ways to create and access tables.
2024-02-11-20:06:59
2024-02-11-20:06:59[1;37mExample[22;37m: #variable {friendlist} {{bob}{bob@mail.com} {bubba}{sunset@gmail.com}}
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         This will create a friendlist with two entries, the key is the name of
2024-02-11-20:06:59[22;37m         the friend, the value is the email address of the friend. You can see
2024-02-11-20:06:59[22;37m         the email address of bob using: #show {$friendlist[bob]}. You can
2024-02-11-20:06:59[22;37m         also define this table as following:
2024-02-11-20:06:59
2024-02-11-20:06:59[1;37mExample[22;37m:
2024-02-11-20:06:59[22;37m         #variable {friendlist[bob]} {bob@mail.com}
2024-02-11-20:06:59[22;37m         #variable {friendlist[bubba]} {sunset@gmail.com}
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         This would create the exact same table as the single line declaration
2024-02-11-20:06:59[22;37m         used previously. To see the first key in the table use:
2024-02-11-20:06:59[22;37m         *friendlist[+1], to see the first value in the table use:
2024-02-11-20:06:59[22;37m         $friendlist[+1]. To see the size of the table use &friendlist[]. To
2024-02-11-20:06:59[22;37m         print a bracelist of all friends use *friendlist[], to print a
2024-02-11-20:06:59[22;37m         bracelist of all friends whose name starts with the letter 'a' you
2024-02-11-20:06:59[22;37m         would use: *friendlist[a%*]. Similarly to see the number of friends
2024-02-11-20:06:59[22;37m         you have whose name ends with the letter 'b' you would use:
2024-02-11-20:06:59[22;37m         &friendlist[%*b].
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         See #help regexp for a brief overview of regular expression options.
2024-02-11-20:06:59[22;37m         While TinTin++ supports PCRE (perl-compatible regular expressions), it
2024-02-11-20:06:59[22;37m         embeds them within its own regular expression syntax that is simpler
2024-02-11-20:06:59[22;37m         and less invasive, while still allowing the full power of PCRE for
2024-02-11-20:06:59[22;37m         those who need it.
2024-02-11-20:06:59
2024-02-11-20:06:59[1;37mExample[22;37m: #unvariable {friendlist[bubba]}
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         This would remove {bubba} from the friendlist. To remove the entire
2024-02-11-20:06:59[22;37m         friendlist you would use: #unvariable {friendlist}.
2024-02-11-20:06:59
2024-02-11-20:06:59[1;37mExample[22;37m: #variable {friendlist} {{bob} {{email}{bob@ma.il} {phone}{123456789}}}
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         There is no limit to the number of nests, simply add more braces. To
2024-02-11-20:06:59[22;37m         see Bob's email in this example you would use:
2024-02-11-20:06:59[22;37m         #show {$friendlist[bob][email]}.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         To merge two tables the #cat command can be used.
2024-02-11-20:06:59[1;37mExample[22;37m:
2024-02-11-20:06:59[22;37m         #variable {bli} {{a}{1}{b}{2}}
2024-02-11-20:06:59[22;37m         #variable {blo} {{c}{3}{d}{4}}
2024-02-11-20:06:59[22;37m         #cat {blo} {$bli}
2024-02-11-20:06:59
2024-02-11-20:06:59[1;32m         Lists
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         Tables are sorted alphabetically with the exception of numbers which
2024-02-11-20:06:59[22;37m         are sorted numerically. If you want to determine the sorting order
2024-02-11-20:06:59[22;37m         yourself you can use use the #list command which helps you to use
2024-02-11-20:06:59[22;37m         tables as arrays.
2024-02-11-20:06:59
2024-02-11-20:06:59[1;37mExample[22;37m: #action {%1 chats %2} {#list chats add {%0}}
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         Each time a chat is received it's added to the end of the 'chats' list
2024-02-11-20:06:59[22;37m         variable. If you type #variable chats this might look like:
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         [1;33m#[1;36mVARIABLE [22;35m{[1;37mchats[22;35m}
2024-02-11-20:06:59[22;37m         [22;35m{
2024-02-11-20:06:59[22;37m                 [22;35m{[1;37m1[22;35m} {[1;37mBubba chats Hi[22;35m}
2024-02-11-20:06:59[22;37m                 [22;35m{[1;37m2[22;35m} {[1;37mBob chats Hi bub[22;35m}
2024-02-11-20:06:59[22;37m                 [22;35m{[1;37m3[22;35m} {[1;37mBubba chats Bye[22;35m}
2024-02-11-20:06:59[22;37m                 [22;35m{[1;37m4[22;35m} {[1;37mBob chats bub bye[22;35m}
2024-02-11-20:06:59[22;37m         [22;35m}
2024-02-11-20:06:59
2024-02-11-20:06:59[1;32m         Parsing
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         There are various ways to parse lists and tables, using either #loop,
2024-02-11-20:06:59[22;37m         #foreach, #while, or #<number>.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         #loop takes two numeric arguments, incrementing or decrementing the
2024-02-11-20:06:59[22;37m         first number until it matches the second number. The value of the loop
2024-02-11-20:06:59[22;37m         counter is stored in the provided variable.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         #foreach takes either a simple list or a brace list as its first
2024-02-11-20:06:59[22;37m         argument. Foreach will go through each item in the list and store the
2024-02-11-20:06:59[22;37m         value in the provided variable.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         #while will perform an if check on the first argument, if the result
2024-02-11-20:06:59[22;37m         is true it will execute the commands in the second argument. Then it
2024-02-11-20:06:59[22;37m         performs an if check on the first argument again. It will continue to
2024-02-11-20:06:59[22;37m         repeat until the if check returns 0 or the loop is interrupted with a
2024-02-11-20:06:59[22;37m         control flow command. It takes special care to avoid infinite loops.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         #<number> will execute the provided argument 'number' times. For
2024-02-11-20:06:59[22;37m         example: #4 {#show beep! \a}
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         Here are some examples.
2024-02-11-20:06:59
2024-02-11-20:06:59[1;37mExample[22;37m: #list friends create {bob;bubba;zorro}
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         Internally this looks like {{1}{bob}{2}{bubba}{3}{zorro}} and the
2024-02-11-20:06:59[22;37m         list can be parsed in various ways.
2024-02-11-20:06:59
2024-02-11-20:06:59[1;37mExample[22;37m: #foreach {$friends[%*]} {name} {#show $name}
2024-02-11-20:06:59
2024-02-11-20:06:59[1;37mExample[22;37m: #foreach {*friends[%*]} {i} {#show $friends[$i]}
2024-02-11-20:06:59
2024-02-11-20:06:59[1;37mExample[22;37m: #loop {1} {&friends[]} {i} {#show $friends[+$i]}
2024-02-11-20:06:59
2024-02-11-20:06:59[1;37mExample[22;37m: #math i 1;#while {&friends[+$i]} {#show $friends[+$i];
2024-02-11-20:06:59[22;37m         #math i $i + 1}
2024-02-11-20:06:59
2024-02-11-20:06:59[1;37mExample[22;37m: #math i 1;#&friends[] {#show $friends[+$i];#math i $i + 1}
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         Each of the five examples above performs the same task; printing the
2024-02-11-20:06:59[22;37m         three names in the friends list.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         If you want to get a better look at what goes on behind the scenes
2024-02-11-20:06:59[22;37m         while executing scripts you can use '#debug all on'. To stop seeing
2024-02-11-20:06:59[22;37m         debug information use '#debug all off'.
2024-02-11-20:06:59
2024-02-11-20:06:59[1;32m         List Tables
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         List tables are also known as databases and the #list command has
2024-02-11-20:06:59[22;37m         several options to manipulate them.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         For these options to work properly all tables need to have identical
2024-02-11-20:06:59[22;37m         keys. Here is an example list table.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         #var {friendlist}
2024-02-11-20:06:59[22;37m         {
2024-02-11-20:06:59[22;37m             {1}{{name}{bob} {age}{54}}
2024-02-11-20:06:59[22;37m             {2}{{name}{bubba} {age}{21}}
2024-02-11-20:06:59[22;37m             {3}{{name}{pamela} {age}{36}}
2024-02-11-20:06:59[22;37m         }
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         To sort the list table by age you would use:
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         #list friendlist indexate age
2024-02-11-20:06:59[22;37m         #list friendlist order
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         To remove everyone whose name starts with a 'b' you would use:
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         #list friendlist indexate name
2024-02-11-20:06:59[22;37m         #list friendlist filter {} {b%*}
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         The filter option only supports regular expressions. To filter
2024-02-11-20:06:59[22;37m         using mathematics you would loop through the list backwards:
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         #loop &friendlist[] 1 index
2024-02-11-20:06:59[22;37m         {
2024-02-11-20:06:59[22;37m             #if {$friendlist[+$index][age] < 30}
2024-02-11-20:06:59[22;37m             {
2024-02-11-20:06:59[22;37m                 #list friendlist delete $index
2024-02-11-20:06:59[22;37m             }
2024-02-11-20:06:59[22;37m         }
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         Alternatively you can use the refine option.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         #list friendlist indexate age
2024-02-11-20:06:59[22;37m         #list friendlist refine {&0 >= 30}
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         To add an item to a list table there are two options:
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         #list friendlist add {{{name}{hobo} {age}{42}}}
2024-02-11-20:06:59[22;37m         #list friendlist insert -1 {{name}{hobo} {age}{42}}
2024-02-11-20:06:59
2024-02-11-20:06:59[1;32m         Optimization
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         TinTin++ tables are exceptionally fast while they remain under 100
2024-02-11-20:06:59[22;37m         items. Once a table grows beyond 10000 items there can be performance
2024-02-11-20:06:59[22;37m         issues when inserting and removing items in the beginning or middle of
2024-02-11-20:06:59[22;37m         the table.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         The plan is to eventually implement an indexable and flexible data
2024-02-11-20:06:59[22;37m         structure for large tables.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         If you load a large table from file it's important to make sure it's
2024-02-11-20:06:59[22;37m         sorted, when using #write to save a table it's automatically sorted.
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         If you notice performance issues on large tables it's relatively easy
2024-02-11-20:06:59[22;37m         to create a hash table.
2024-02-11-20:06:59
2024-02-11-20:06:59[1;37mExample[22;37m:
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         #alias {sethash}
2024-02-11-20:06:59[22;37m         {
2024-02-11-20:06:59[22;37m             #format hash %H %1;
2024-02-11-20:06:59[22;37m             #math hash1 $hash % 100;
2024-02-11-20:06:59[22;37m             #math hash2 $hash / 100 % 100;
2024-02-11-20:06:59[22;37m             #var hashtable[$hash1][$hash2][%1] %2
2024-02-11-20:06:59[22;37m         }
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         #function {gethash}
2024-02-11-20:06:59[22;37m         {
2024-02-11-20:06:59[22;37m             #format hash %H %1;
2024-02-11-20:06:59[22;37m             #math hash1 $hash % 100;
2024-02-11-20:06:59[22;37m             #math hash2 $hash / 100 % 100;
2024-02-11-20:06:59[22;37m             #return $hashtable[$hash1][$hash2][%1]
2024-02-11-20:06:59[22;37m         }
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         #alias {test}
2024-02-11-20:06:59[22;37m         {
2024-02-11-20:06:59[22;37m             sethash bli hey;
2024-02-11-20:06:59[22;37m             sethash bla hi;
2024-02-11-20:06:59[22;37m             sethash blo hello;
2024-02-11-20:06:59[22;37m             #show The value of bla is: @gethash{bla}
2024-02-11-20:06:59[22;37m         }
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         The above script will rapidly store and retrieve over 1 million items.
2024-02-11-20:06:59[22;37m         Looping through a hash table is relatively easy as well.
2024-02-11-20:06:59
2024-02-11-20:06:59[1;37mExample[22;37m:
2024-02-11-20:06:59
2024-02-11-20:06:59[22;37m         #alias {showhash}
2024-02-11-20:06:59[22;37m         {
2024-02-11-20:06:59[22;37m             #foreach {*hashtable[%*]} {hash1}
2024-02-11-20:06:59[22;37m             {
2024-02-11-20:06:59[22;37m                 #foreach {*hashtable[$hash1][%*]} {hash2}
2024-02-11-20:06:59[22;37m                 {
2024-02-11-20:06:59[22;37m                     #echo {%-20s = %s}
2024-02-11-20:06:59[22;37m                                        {hashtable[$hash1][$hash2]}
2024-02-11-20:06:59[22;37m                                        {$hashtable[$hash1][$hash2]}
2024-02-11-20:06:59[22;37m                 }
2024-02-11-20:06:59[22;37m             }
2024-02-11-20:06:59        }
2024-02-11-20:06:59[0m
2024-02-11-20:06:59[1;37mRelated[22;37m: break, continue, foreach, loop, parse, repeat, return and while.[0m
2024-02-11-20:06:59
2024-02-11-20:09:38[0;37m    #foreach {*statments_for_neo4j[]} {neo4j_statement} {#showme $neo4j_statement}[0m
2024-02-11-20:09:38[0m1[0m
2024-02-11-20:09:38[0m2[0m
2024-02-11-20:09:47[0;37m    #foreach {*statments_for_neo4j[%0]} {neo4j_statement} {#showme $neo4j_statement}[0m
2024-02-11-20:09:47[0m1[0m
2024-02-11-20:09:47[0m2[0m
2024-02-11-20:10:08[0;37m    #foreach {*statments_for_neo4j[]} {neo4j_statement} {#showme $neo4j_statement}[0m
2024-02-11-20:10:08[0m1[0m
2024-02-11-20:10:08[0m2[0m
2024-02-11-20:10:22
2024-02-11-20:10:22[1;34m[[0;1;37mO[0;37mO[0;1;30mC [0;1;37mKaess[0;1;34m][0m "[0mow[0m"
2024-02-11-20:10:28
2024-02-11-20:10:28[1;34m[[0;1;37mO[0;37mO[0;1;30mC [0;1;37mKaess[0;1;34m][0m "[0mkaz updates have made urod hurt[0m"
2024-02-11-20:10:34
2024-02-11-20:10:34[1;34m[[0;1;37mO[0;37mO[0;1;30mC [0;1;37mKaess[0;1;34m][0m "[0m*urdo[0m"
2024-02-11-20:12:35[0;37m#showme {&statments_for_neo4j}[0m
2024-02-11-20:12:35[0m19[0m
2024-02-11-20:12:37[0;37m#showme {&statments_for_neo4j[]}[0m
2024-02-11-20:12:37[0m2[0m
2024-02-11-20:13:28[0;37m[0m
2024-02-11-20:13:28> [0;37m[0m
2024-02-11-20:13:28> [0;37m[0m
2024-02-11-20:13:30> [0;37mreload_configs[0m
2024-02-11-20:13:30[0m#WARNING: #READ {ls_v2.tin}: MISSING SEMICOLON ON LINE 269.[0m
2024-02-11-20:13:30[0m#ERROR: #READ {ls_v2.tin}: MISSING 1 '}' BETWEEN LINE 254 AND 269.[0m
2024-02-11-20:13:59[0;37mreload_configs[0m
2024-02-11-20:13:59
2024-02-11-20:13:59    You don't know how to 'reload_configs'.
2024-02-11-20:14:02> 
[0m[0m
2024-02-11-20:14:02[0m#ZZZZZZZAAAAAAAAPPPP!!!!!!!!! LET'S GET OUTTA HERE!!!!!!!![0m
2024-02-11-20:14:02[0m#SESSION 'ls' DIED.[0m
2024-02-11-20:14:31
2024-02-11-20:14:31[1;30m            ~--___--~      [0;1;31mWelcome to the World[0;1;30m    __==.[0m
2024-02-11-20:14:31[1;30m-_       _--~~     _-~ ~----        [0;1;31mof[0;1;30m         __      ~~-__[0m
2024-02-11-20:14:31[1;30m  ~---[0;1;37m\[0;1;30m-~ ~~-----~~   [0;36m:[0;1;30m         [0;31mLo[0;1;31mst[0;1;33m So[0;1;31mul[0;31ms[0;1;30m     ~~~__  _-~~-[0m
2024-02-11-20:14:31 [1;30m      [0;1;37m\[0;1;30m        [0;36m:    :[0;1;30m      _             ________[0;36m:             :[0;1;30m       ~~[0m
2024-02-11-20:14:31[36m     :  [0;1;37m|[0;36m      :    :                              :    :    :   :[0m
2024-02-11-20:14:31[36m    :  [0;1;37m/|[0;36m     :   [0;1;32m|[0;36m       :   :    :  :     : :[0;1;32m|[0;36m   :    :   :   : [0;33m|\/|[0m
2024-02-11-20:14:31[36m   : [0;1;37m /  \[0;36m   :     [0;1;32m|[0;36m:     :   :    :  :     : : [0;1;32m|[0;36m  :    :   :   : [0;33m/.0  )_[0m
2024-02-11-20:14:31[36m  :  [0;1;37m|    |[0;36m :  :   :[0;1;32m|[0;36m    :        :  :     : :   [0;1;32m|[0;36m:        :   : .[0;33m( (__  `oo.[0m
2024-02-11-20:14:31[36m :  [0;1;37m/    / \[0;36m  :   :  [0;1;32m|[0;36m  :  :     :        : :    [0;1;32m|[0;36m    :   :      [0;33m<_) ||~~~//'[0m
2024-02-11-20:14:31[36m    [0;1;37m\   |   \[0;36m:   :    [0;1;32m|[0;36m:  :     :     :  :      :[0;1;32m|[0;36m   :           [0;33m</  ||[0m
2024-02-11-20:14:31[36m    [0;1;37m/\  |\   |[0;36m  :     :[0;1;32m|[0;36m :     :     :         :[0;1;32m|[0;36m   :        [0;1;37mo[0;36m   [0;33m/  /-|[0;36m  :[0m
2024-02-11-20:14:31[36m       [0;1;37m/  | /\[0;36m :       [0;1;32m|[0;36m:         [0;1;32m__---~~~~-_  /[0;36m   :    [0;37m`0'[0;36m [0;1;30m/[0;36m   [0;33m/  /--/[0;36m :   :[0m
2024-02-11-20:14:31[36m       [0;1;37m|   |  |[0;36m  [0;33m<>[0;36m    [0;1;32m|[0;36m    [0;1;32m_---~~[0;36m [0;31m\   \[0;36m     [0;1;32m)`[0;36m   :     [0;1;30m()[0;37m~[0;1;30m/[0;36m   [0;33m/  /-/[0;36m :   :[0m
2024-02-11-20:14:31                 [33m||[0m    [31m/[0m[1;32m_-~~[0m[31m/[0m  [33m||[0m   [31m\   \   /[0m           [1;30m||[0m[33m_--~~//-/]`[0m     [36m:[0m
2024-02-11-20:14:31                [33m_--__[0m [31m/[0;33m~[0;31m/  /[0m   [33m||[0m [35moo [0;31m\[0;35moo[0m [31m\/`[0m  [33m____----~~~~   /~//.'[0m     [36m:[0m
2024-02-11-20:14:31               [33m<[0m[1;37moooooo[0;1;31m(((([0;1;37m000000000000[0m[33m----~~~~              / //'[0m
2024-02-11-20:14:31[34m~-~-~-~-~-~-~-[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`                     / //[0;34m~-~-~-~-~-~-~-~[0m
2024-02-11-20:14:31             [33m'[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`                     .///`[0m[34m_-_ _-_  -~--~--[0m
2024-02-11-20:14:31[34m      -~--     [0;1;33m`[0;34m [0;33m'[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;34m_-_ __-_ _-___--~~ ~-[0;33m./_=[0;34m~     ~   ~[0m
2024-02-11-20:14:31[34m          _          [0;1;33m`[0;34m [0;33m'[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;34m __--~__--~  _-         \|        _-~--__[0m
2024-02-11-20:14:31[34m        -~ ~~--            [0;33m`[0;34m [0;1;33m'[0;34m            --~           _-~--__[0m
2024-02-11-20:14:31
2024-02-11-20:14:31    There are currently 13 atmai online.
2024-02-11-20:14:31
2024-02-11-20:14:31    If you are new to Lost Souls, simply type 'new' as your name. 
2024-02-11-20:14:31
2024-02-11-20:14:31[1;37mName[0m: [1;37mPassword[0m: 
2024-02-11-20:14:31
2024-02-11-20:14:31    You last logged in at Sun Feb 11 13:59:04 2024 from 169.150.218.83#85.191.191.7.
2024-02-11-20:14:31
2024-02-11-20:14:31                                                                                                                                                              [1;34m[ [0;1;37mLost Souls Atman Menu[0;1;34m ][0m
2024-02-11-20:14:31[1;34m[[0;1;37m1[0;1;34m] Incarnate as Robbingdahood[0m        [1;34m[[0;1;37mA[0;1;34m] Account Settings Menu[0m             [1;34m[[0;1;37mC[0;1;34m] Create a New Character[0m            [1;34m[[0;1;37mE[0;1;34m] Set Email Address[0m                 [1;34m[[0;1;37mL[0;1;34m] Incarnation Lock[0m                  [1;34m[[0;1;37mM[0;1;34m] Check for New Mail[0m                [1;34m[[0;1;37mN[0;1;34m] Lost Souls News[0m                   [1;34m[[0;1;37mP[0;1;34m] Set Password[0m                      [1;34m[[0;1;37mQ[0;1;34m] Quit Lost Souls[0m
2024-02-11-20:14:31[1;34m[[0;1;37mR[0;1;34m] Remove Atman[0m                      [1;34m[[0;1;37mT[0;1;34m] Terminal Setup Menu[0m               [1;34m[[0;1;37mW[0;1;34m] Who's On[0m                          [1;34m[[0;1;37m?[0;1;34m] Show Menu[0m                         
2024-02-11-20:14:31
2024-02-11-20:14:39[1;34m][0m [0;37m[0m
2024-02-11-20:14:40
2024-02-11-20:14:40[1;34m    Please select [0;1;37m1, A, C, E, L, M, N, P, Q, R, T, W, or ?[0;1;34m.[0m
2024-02-11-20:14:40[1;34m][0m [0;37m?[0m
2024-02-11-20:14:41
2024-02-11-20:14:41                                                                                                                                                              [1;34m[ [0;1;37mLost Souls Atman Menu[0;1;34m ][0m
2024-02-11-20:14:41[1;34m[[0;1;37m1[0;1;34m] Incarnate as Robbingdahood[0m        [1;34m[[0;1;37mA[0;1;34m] Account Settings Menu[0m             [1;34m[[0;1;37mC[0;1;34m] Create a New Character[0m            [1;34m[[0;1;37mE[0;1;34m] Set Email Address[0m                 [1;34m[[0;1;37mL[0;1;34m] Incarnation Lock[0m                  [1;34m[[0;1;37mM[0;1;34m] Check for New Mail[0m                [1;34m[[0;1;37mN[0;1;34m] Lost Souls News[0m                   [1;34m[[0;1;37mP[0;1;34m] Set Password[0m                      [1;34m[[0;1;37mQ[0;1;34m] Quit Lost Souls[0m
2024-02-11-20:14:41[1;34m[[0;1;37mR[0;1;34m] Remove Atman[0m                      [1;34m[[0;1;37mT[0;1;34m] Terminal Setup Menu[0m               [1;34m[[0;1;37mW[0;1;34m] Who's On[0m                          [1;34m[[0;1;37m?[0;1;34m] Show Menu[0m                         
2024-02-11-20:14:41
2024-02-11-20:14:42[1;34m][0m [0;37m1[0m
2024-02-11-20:14:42
2024-02-11-20:14:42[1;37m    Robbingdahood[0;1;34m is already incarnate in [0;1;37ma storage room[0;1;34m.
2024-02-11-20:14:42[0m
2024-02-11-20:14:44[1;34mDo you want to take over control?[0m [1;34m[[0;1;37mY[0;1;34m/[0;1;37mn[0;1;34m][0m [0;37mY[0m
2024-02-11-20:14:44
2024-02-11-20:14:44[1;34m    Transferring control...[0m
2024-02-11-20:14:44
2024-02-11-20:14:44    a storage room [1;34m[s][0m
2024-02-11-20:14:44
2024-02-11-20:14:44    This is a well-lit, narrow, rectangular room.  The exit to the south leads out into the main guildhall.  There are a whole bunch of drawers and cupboards lining the high walls from floor to ceiling on both sides and along the back wall.  Each one appears to be locked and well cared for.  There are [31mred wooden ladders[0m on each wall.  There are a bunch of boxes stacked neatly in the corner.  
2024-02-11-20:14:44
2024-02-11-20:14:44    The area is reasonably well-lit.  
2024-02-11-20:14:44
2024-02-11-20:14:44    The only obvious exit is south.
2024-02-11-20:14:44
2024-02-11-20:14:44    You are dropped off by Link Death on his [1;37mpale stallion[0m.
2024-02-11-20:14:45> [0;37m[0m
2024-02-11-20:14:45> [0;37m[0m
2024-02-11-20:14:45> [0;37m[0m
2024-02-11-20:15:09> [0;37mtesting_send_move e w[0m
2024-02-11-20:15:09[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d ""{\"statements\":["{\"statement\":\"$statements_for_neo4[1]\"}""{\"statement\":\"$statements_for_neo4[2]\"}"]}"" | jq .'.[0m
2024-02-11-20:15:09[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-20:16:10[0;37mreload_configs[0m
2024-02-11-20:16:15[0;37mtesting_send_move e w[0m
2024-02-11-20:16:15[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d ""{\"statements\":["{\"statement\":\"{1]}{}{1}{MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r}{2}{MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r}\"}""{\"statement\":\"{2]}{}{1}{MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r}{2}{MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r}\"}"]}"" | jq .'.[0m
2024-02-11-20:16:15[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-20:17:17[0;37mreload_configs[0m
2024-02-11-20:17:18[0;37mtesting_send_move e w[0m
2024-02-11-20:17:18[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d ""{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}""{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}"" | jq .'.[0m
2024-02-11-20:17:18[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-20:18:06[0;37mreload_configs[0m
2024-02-11-20:18:07[0;37mtesting_send_move e w[0m
2024-02-11-20:18:07[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d ""{\"statements\":["\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"""\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\""]}"" | jq .'.[0m
2024-02-11-20:18:08[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-20:19:01[0;37mreload_configs[0m
2024-02-11-20:19:02[0;37mtesting_send_move e w[0m
2024-02-11-20:19:02[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d "{\"statements\":["\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"""\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\""]}" | jq .'.[0m
2024-02-11-20:19:03[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-20:19:38[0;37m        #cat {neo4j_statments_json} {"\"statement\":\"$neo4j_statement\""};[0m
2024-02-11-20:19:38[0m#CAT: VARIABLE {neo4j_statments_json} HAS BEEN SET TO {"\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"""\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"""\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\""}.[0m
2024-02-11-20:19:47[0;37m        #cat {neo4j_statments_json} {\"statement\":\"$neo4j_statement\"};[0m
2024-02-11-20:19:47[0m#CAT: VARIABLE {neo4j_statments_json} HAS BEEN SET TO {"\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"""\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"""\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\""\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}.[0m
2024-02-11-20:19:54[0;37m        #cat {neo4j_statments_json} {\"statement\":\"$neo4j_statementasdsad\"};[0m
2024-02-11-20:19:54[0m#CAT: VARIABLE {neo4j_statments_json} HAS BEEN SET TO {"\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"""\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"""\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\""\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"\"statement\":\"$neo4j_statementasdsad\"}.[0m
2024-02-11-20:20:00[0;37m        #cat {neo4j_statments_json} {\"statement\":\"$neo4j_statementasdsad\"};[0m
2024-02-11-20:20:00[0m#CAT: VARIABLE {neo4j_statments_json} HAS BEEN SET TO {"\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"""\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"""\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\""\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"\"statement\":\"$neo4j_statementasdsad\"\"statement\":\"$neo4j_statementasdsad\"}.[0m
2024-02-11-20:20:33[0;37mreload_configs[0m
2024-02-11-20:20:38[0;37mtesting_send_move e w[0m
2024-02-11-20:20:38[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d "{\"statements\":[\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"]}" | jq .'.[0m
2024-02-11-20:20:38[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-20:22:34[0;37mreload_configs[0m
2024-02-11-20:22:36[0;37mtesting_send_move e w[0m
2024-02-11-20:22:36[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d "{\"statements\":[\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"]}" | jq .'.[0m
2024-02-11-20:22:36[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-20:23:15[0;37mreload_configs[0m
2024-02-11-20:23:16[0;37mtesting_send_move e w[0m
2024-02-11-20:23:16[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d "{\"statements\":[\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\",\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"]}" | jq .'.[0m
2024-02-11-20:23:16[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-20:25:31[0;37m[0m
2024-02-11-20:25:31> [0;37m[0m
2024-02-11-20:25:31> [0;37m        #cat {neo4j_statments_json} {{\"statement\":\"$neo4j_statement\"}};[0m
2024-02-11-20:25:31[0m#WARNING: VARIABLE {\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}. THE \ CHARACTER NEEDS TO BE REPLACED WITH = FOR A STRICT EQUALITY MATCH.[0m
2024-02-11-20:25:31[0m#CAT: VARIABLE {neo4j_statments_json} HAS BEEN SET TO {{"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}{}}.[0m
2024-02-11-20:25:36[0;37m        #cat {neo4j_statments_json} {{\"statement\":\"$neo4j_statemenasdsadt\"}};[0m
2024-02-11-20:25:36[0m#WARNING: VARIABLE {\"statement\":\"$neo4j_statemenasdsadt\"}. THE \ CHARACTER NEEDS TO BE REPLACED WITH = FOR A STRICT EQUALITY MATCH.[0m
2024-02-11-20:25:36[0m#CAT: VARIABLE {neo4j_statments_json} HAS BEEN SET TO {{"statement\":\"$neo4j_statemenasdsadt\"}{}{"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}{}}.[0m
2024-02-11-20:25:50[0;37m        #cat {neo4j_statments_json} {"{\"statement\":\"$neo4j_statemenasdsadt\"}"};[0m
2024-02-11-20:25:50[0m#CAT: VARIABLE {neo4j_statments_json} HAS BEEN SET TO {{"statement\":\"$neo4j_statemenasdsadt\"}{}{"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}{}}.[0m
2024-02-11-20:26:00[0;37m        #cat {neo4j_statments_json} {"{\"statement\":\"$neo4j_statemenasdsadt\"}"};[0m
2024-02-11-20:26:00[0m#CAT: VARIABLE {neo4j_statments_json} HAS BEEN SET TO {{"statement\":\"$neo4j_statemenasdsadt\"}{}{"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}{}}.[0m
2024-02-11-20:26:12[0;37m        #cat {neo4j_statments_json} {"{\"statement\":\"$neo4j_statemenasdsadt\"}"};[0m
2024-02-11-20:26:12[0m#CAT: VARIABLE {neo4j_statments_json} HAS BEEN SET TO {{"statement\":\"$neo4j_statemenasdsadt\"}{}{"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}{}}.[0m
2024-02-11-20:26:34[0;37m        #cat {neo4j_statments_json} {"{\"statement\":\"$neo4j_statemenasdsadt\"}"};[0m
2024-02-11-20:26:34[0m#CAT: VARIABLE {neo4j_statments_json} HAS BEEN SET TO {{"statement\":\"$neo4j_statemenasdsadt\"}{}{"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}{}}.[0m
2024-02-11-20:27:03[0;37mreload_configs[0m
2024-02-11-20:27:09[0;37mtesting_send_move e w[0m
2024-02-11-20:27:09[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d "{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}","{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}" | jq .'.[0m
2024-02-11-20:27:09[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-20:27:27[0;37m[0m
2024-02-11-20:27:27> [0;37m[0m
2024-02-11-20:27:27> [0;37m[0m
2024-02-11-20:27:27> [0;37m[0m
2024-02-11-20:27:29> [0;37mtesting_send_move e w[0m
2024-02-11-20:27:29[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d "{\"statements\":["{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}","{\"statement\":\"MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r\"}"]}" | jq .'.[0m
2024-02-11-20:27:29[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-20:27:31[0;37m[0m
2024-02-11-20:27:31> [0;37m[0m
2024-02-11-20:27:31> [0;37m[0m
2024-02-11-20:42:17> [0;37m[0m
2024-02-11-20:42:17> [0;37m[0m
2024-02-11-20:42:19> 
[0m[0m
2024-02-11-20:42:19[0m#ZZZZZZZAAAAAAAAPPPP!!!!!!!!! LET'S GET OUTTA HERE!!!!!!!![0m
2024-02-11-20:42:19[0m#SESSION 'ls' DIED.[0m
2024-02-11-20:46:22
2024-02-11-20:46:22[1;30m            ~--___--~      [0;1;31mWelcome to the World[0;1;30m    __==.[0m
2024-02-11-20:46:22[1;30m-_       _--~~     _-~ ~----        [0;1;31mof[0;1;30m         __      ~~-__[0m
2024-02-11-20:46:22[1;30m  ~---[0;1;37m\[0;1;30m-~ ~~-----~~   [0;36m:[0;1;30m         [0;31mLo[0;1;31mst[0;1;33m So[0;1;31mul[0;31ms[0;1;30m     ~~~__  _-~~-[0m
2024-02-11-20:46:22 [1;30m      [0;1;37m\[0;1;30m        [0;36m:    :[0;1;30m      _             ________[0;36m:             :[0;1;30m       ~~[0m
2024-02-11-20:46:22[36m     :  [0;1;37m|[0;36m      :    :                              :    :    :   :[0m
2024-02-11-20:46:22[36m    :  [0;1;37m/|[0;36m     :   [0;1;32m|[0;36m       :   :    :  :     : :[0;1;32m|[0;36m   :    :   :   : [0;33m|\/|[0m
2024-02-11-20:46:22[36m   : [0;1;37m /  \[0;36m   :     [0;1;32m|[0;36m:     :   :    :  :     : : [0;1;32m|[0;36m  :    :   :   : [0;33m/.0  )_[0m
2024-02-11-20:46:22[36m  :  [0;1;37m|    |[0;36m :  :   :[0;1;32m|[0;36m    :        :  :     : :   [0;1;32m|[0;36m:        :   : .[0;33m( (__  `oo.[0m
2024-02-11-20:46:22[36m :  [0;1;37m/    / \[0;36m  :   :  [0;1;32m|[0;36m  :  :     :        : :    [0;1;32m|[0;36m    :   :      [0;33m<_) ||~~~//'[0m
2024-02-11-20:46:22[36m    [0;1;37m\   |   \[0;36m:   :    [0;1;32m|[0;36m:  :     :     :  :      :[0;1;32m|[0;36m   :           [0;33m</  ||[0m
2024-02-11-20:46:22[36m    [0;1;37m/\  |\   |[0;36m  :     :[0;1;32m|[0;36m :     :     :         :[0;1;32m|[0;36m   :        [0;1;37mo[0;36m   [0;33m/  /-|[0;36m  :[0m
2024-02-11-20:46:22[36m       [0;1;37m/  | /\[0;36m :       [0;1;32m|[0;36m:         [0;1;32m__---~~~~-_  /[0;36m   :    [0;37m`0'[0;36m [0;1;30m/[0;36m   [0;33m/  /--/[0;36m :   :[0m
2024-02-11-20:46:22[36m       [0;1;37m|   |  |[0;36m  [0;33m<>[0;36m    [0;1;32m|[0;36m    [0;1;32m_---~~[0;36m [0;31m\   \[0;36m     [0;1;32m)`[0;36m   :     [0;1;30m()[0;37m~[0;1;30m/[0;36m   [0;33m/  /-/[0;36m :   :[0m
2024-02-11-20:46:22                 [33m||[0m    [31m/[0m[1;32m_-~~[0m[31m/[0m  [33m||[0m   [31m\   \   /[0m           [1;30m||[0m[33m_--~~//-/]`[0m     [36m:[0m
2024-02-11-20:46:22                [33m_--__[0m [31m/[0;33m~[0;31m/  /[0m   [33m||[0m [35moo [0;31m\[0;35moo[0m [31m\/`[0m  [33m____----~~~~   /~//.'[0m     [36m:[0m
2024-02-11-20:46:22               [33m<[0m[1;37moooooo[0;1;31m(((([0;1;37m000000000000[0m[33m----~~~~              / //'[0m
2024-02-11-20:46:22[34m~-~-~-~-~-~-~-[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`                     / //[0;34m~-~-~-~-~-~-~-~[0m
2024-02-11-20:46:22             [33m'[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`[0m[1;33m/[0m[33m`                     .///`[0m[34m_-_ _-_  -~--~--[0m
2024-02-11-20:46:22[34m      -~--     [0;1;33m`[0;34m [0;33m'[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;34m_-_ __-_ _-___--~~ ~-[0;33m./_=[0;34m~     ~   ~[0m
2024-02-11-20:46:22[34m          _          [0;1;33m`[0;34m [0;33m'[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;1;33m/[0;33m`[0;34m __--~__--~  _-         \|        _-~--__[0m
2024-02-11-20:46:22[34m        -~ ~~--            [0;33m`[0;34m [0;1;33m'[0;34m            --~           _-~--__[0m
2024-02-11-20:46:22
2024-02-11-20:46:22    There are currently 14 atmai online.
2024-02-11-20:46:22
2024-02-11-20:46:22    If you are new to Lost Souls, simply type 'new' as your name. 
2024-02-11-20:46:22
2024-02-11-20:46:23[1;37mName[0m: [1;37mPassword[0m: 
2024-02-11-20:46:23
2024-02-11-20:46:23    You last logged in at Sun Feb 11 14:14:31 2024 from 169.150.218.83#85.191.191.7.
2024-02-11-20:46:23
2024-02-11-20:46:23                                                                                                                                                              [1;34m[ [0;1;37mLost Souls Atman Menu[0;1;34m ][0m
2024-02-11-20:46:23[1;34m[[0;1;37m1[0;1;34m] Incarnate as Robbingdahood[0m        [1;34m[[0;1;37mA[0;1;34m] Account Settings Menu[0m             [1;34m[[0;1;37mC[0;1;34m] Create a New Character[0m            [1;34m[[0;1;37mE[0;1;34m] Set Email Address[0m                 [1;34m[[0;1;37mL[0;1;34m] Incarnation Lock[0m                  [1;34m[[0;1;37mM[0;1;34m] Check for New Mail[0m                [1;34m[[0;1;37mN[0;1;34m] Lost Souls News[0m                   [1;34m[[0;1;37mP[0;1;34m] Set Password[0m                      [1;34m[[0;1;37mQ[0;1;34m] Quit Lost Souls[0m
2024-02-11-20:46:23[1;34m[[0;1;37mR[0;1;34m] Remove Atman[0m                      [1;34m[[0;1;37mT[0;1;34m] Terminal Setup Menu[0m               [1;34m[[0;1;37mW[0;1;34m] Who's On[0m                          [1;34m[[0;1;37m?[0;1;34m] Show Menu[0m                         
2024-02-11-20:46:23
2024-02-11-20:46:24[1;34m][0m [0;37m1[0m
2024-02-11-20:46:24
2024-02-11-20:46:24[1;37m    Robbingdahood[0;1;34m is already incarnate in [0;1;37ma storage room[0;1;34m.
2024-02-11-20:46:24[0m
2024-02-11-20:46:25[1;34mDo you want to take over control?[0m [1;34m[[0;1;37mY[0;1;34m/[0;1;37mn[0;1;34m][0m [0;37my[0m
2024-02-11-20:46:25
2024-02-11-20:46:25[1;34m    Transferring control...[0m
2024-02-11-20:46:26
2024-02-11-20:46:26    a storage room [1;34m[s][0m
2024-02-11-20:46:26
2024-02-11-20:46:26    This is a well-lit, narrow, rectangular room.  The exit to the south leads out into the main guildhall.  There are a whole bunch of drawers and cupboards lining the high walls from floor to ceiling on both sides and along the back wall.  Each one appears to be locked and well cared for.  There are [31mred wooden ladders[0m on each wall.  There are a bunch of boxes stacked neatly in the corner.  
2024-02-11-20:46:26
2024-02-11-20:46:26    The area is reasonably well-lit.  
2024-02-11-20:46:26
2024-02-11-20:46:26    The only obvious exit is south.
2024-02-11-20:46:26
2024-02-11-20:46:26    You are dropped off by Link Death on his [1;37mpale stallion[0m.
2024-02-11-20:46:26> [0;37m[0m
2024-02-11-20:46:26> [0;37m[0m
2024-02-11-20:46:26> [0;37m[0m
2024-02-11-20:46:27> [0;37m[0m
2024-02-11-20:46:40> [0;37mtesting_send_move e w[0m
2024-02-11-20:46:40[0m#TRYING TO LAUNCH 'neo4j_executer' RUNNING 'curl -X POST -H Accept:application/json -H Content-Type:application/json -u neo4j:testneo4j http://localhost:7474/db/neo4j/tx/commit -d "{\"statements\":[{
    "statement" : "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r"
}{}{
    "statement" : "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r"
}{}]}" | jq .'.[0m
2024-02-11-20:46:40[0m#SESSION 'ls' ACTIVATED.[0m
2024-02-11-20:46:44[0;37m[0m
2024-02-11-20:46:44[0;37m[0m
2024-02-11-20:47:20> > 
2024-02-11-20:47:20[33m    Maricla[0m walks in from the south.
2024-02-11-20:47:54[0;37m#var neo4j_statement[0m
2024-02-11-20:47:54[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_statement[38;5;164m}
2024-02-11-20:47:54[38;5;164m{
2024-02-11-20:47:54[38;5;188m[38;5;164m    {[38;5;188mstatement[38;5;164m} [38;5;164m{[38;5;188mMATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r[38;5;164m}
2024-02-11-20:47:54[38;5;164m}[0m
2024-02-11-20:48:14[0;37m#line json neo4j_statement {#showme &0}[0m
2024-02-11-20:48:14[0m
    "statement" : "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r"
[0m
2024-02-11-20:48:18
2024-02-11-20:48:18[33m    Maricla[0m glances around.
2024-02-11-20:50:16
2024-02-11-20:50:16[33m    Maricla[0m nods to you.
2024-02-11-20:51:02
2024-02-11-20:51:02[33m    Birsno[0m walks in from the south.
2024-02-11-20:51:02
2024-02-11-20:51:02[33m    Maricla[0m walks southward.
2024-02-11-20:51:06
2024-02-11-20:51:06[33m    Birsno[0m nods to you.
2024-02-11-20:51:20[0;37m#variable {neo4j_body}[0m
2024-02-11-20:51:20[0m[38;5;184m#[38;5;044mVARIABLE [38;5;164m{[38;5;188mneo4j_body[38;5;164m} {[38;5;188m"{\"statements\":[{
    "statement" : "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'e'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r"
}{}{
    "statement" : "MATCH (a:Player)-[r:located_at]->(b:Room)-[r2:direction {name: 'w'}]->(c:Room) SET c.updated_time = dateTime() CREATE (a)-[:located_at {updated_time: dateTime()}]->(c), (c)-[:roomdescription {desc:'Great room description', updated_time: dateTime()}]->(c) REMOVE c.explored DELETE r"
}{}]}"[38;5;164m}[0m
[0m
2024-02-11-20:51:56
2024-02-11-20:51:56[33m    Birsno[0m nods to you.
2024-02-11-20:52:14
2024-02-11-20:52:14[33m    Birsno[0m peers around.
2024-02-11-20:52:43
2024-02-11-20:52:43[1;34m[[0;1;37mO[0;37mO[0;1;30mC [0;1;37mAshock[0;1;34m][0m "[0mWhy doesn't this work: for corpses do get gold from each[0m"
2024-02-11-20:53:18
2024-02-11-20:53:18[33m    Birsno[0m yawns tiredly.
2024-02-11-20:53:51
2024-02-11-20:53:51[1;34m[[0;1;37mO[0;37mO[0;1;30mC [0;1;37mGalen[0;1;34m][0m "[0mi use get all coins from all remains[0m"
2024-02-11-20:53:58[0m[0m
2024-02-11-20:53:58[0m#ZZZZZZZAAAAAAAAPPPP!!!!!!!!! LET'S GET OUTTA HERE!!!!!!!![0m
2024-02-11-20:53:58[0m#SESSION 'ls' DIED.[0m
