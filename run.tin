#ACTION { initiates combat!}
{
    #variable {farm_mine_ready_for_move} {0}
}

#ACTION {Entities: }
{
    #variable {is_enemy_present}{1}
}

#ACTION {It's too far away}
{
    #variable {autokill_is_walking} {0};
    if_autokill_then_walk_second_target 
}

#ACTION {Minimap:}
{
    #if {$state_should_repair_tools}
    {
        #VAR {state_should_repair_tools} {0};
        repair;
    };
    #elseif {$state_autofish}
    {
        fish cast
    }
    #elseif {$state_autocraft}
    {
        #send {craft $autocraft_item};
    };
    #elseif {$state_farm_mine}
    {
        #if {$is_enemy_present}
        {
            kill;
        };
        #else
        {
            get all;
            harvest;
        }
    };
    #elseif {$state_greenhouse_harvest_and_sow || !$is_enemy_present}
    {
        #buffer {find} {Room: } {location_of_room};
        #buffer {find} {ground} {location_of_end_equip};
        #buffer {find} {Items:} {location_of_start_equip};
        #if {$location_of_room < $location_of_start_equip}
        {
            #buffer {get} {content_of_equip} {$location_of_start_equip}{$location_of_end_equip};
            #regexp {$content_of_equip} {{.*?}Items: {([^,]*?,){2}}}
            {
                say there is more than three items so will not pick anything up.
            };
            #else
            {
                get all;
                harvest;
            }
        };
        #else
        {
            #variable {content_of_equip}{};
            get all;
            harvest;
        }
    };
    #elseif {$state_autokill_enabled && $is_enemy_present}
    {
        kill;
    }
}

#ACTION {Nothing to chop here.}
{
    #IF {!$state_chop_were_activated}
    {
        #var {state_chop_were_activated} {1};
        loot;
    }
}

        #var {state_chop_were_activated} {0}
        #var {state_harvest_were_activated} {0}
#ACTION {Nothing to harvest here.}
{
    #IF {!$state_harvest_were_activated}
    {
        #var {state_harvest_were_activated} {1};
        chop;
    }
}

#ACTION {Nothing to loot here.}
{
    #var {state_chop_were_activated} {0};
    #var {state_harvest_were_activated} {0};
    #if {$state_greenhouse_harvest_and_sow}
    {
        plant ${greenhouse_sowing};
    };
    #elseif {$state_autokill_enabled}
    {
        restart_autokill;
    };
    #elseif {$state_farm_mine}
    {
        #variable {farm_mine_ready_for_move} {1}
    };
    #else
    {
        prospect
    }
}

#ACTION {Robbingdahood leaves through a portal}
{
    dump_items_and_go_to_obelisk_count_plus_one
}

#ACTION {Room: }
{
    #variable {is_enemy_present}{0};
    #variable {content_of_equip}{}
}


#ACTION {The {.*?} is broken.} { #VAR {state_should_repair_tools} {1}; look;}

#ACTION {There is nobody here to battle}
{
    try_to_restart
}

#ACTION {You already know the {.*?} recipe.}
{
    drop all %1 recipe;
    read recipe
}

#ACTION {You are carrying too many items to move}
{
    #variable state_autokill_enabled {0};
    #variable {autokill_is_walking} {0};
    salvage
}

#ACTION {You are carrying too much weight to move}
{
    #variable state_autokill_enabled {0};
    #variable {autokill_is_walking} {0};
    salvage
}

#ACTION {You are no longer affected by sneak.}
{
    #variable {is_sneaky}{0}
}

#ACTION {You are now affected by sneak.}
{
    #variable {is_sneaky}{1}
}

#ACTION {You are victorious in battle!}
{
    #if {$state_autokill_enabled}
    {
        #variable {autokill_is_walking} {0}
    }
}

#ACTION {You begin to travel}
{
    #variable state_autokill_enabled {0};
    #variable {autokill_is_walking} {0}
}

#ACTION {You can't move }
{
    #if {$state_farm_mine}
    {
        #variable {farm_mine_ready_for_move} {1}
    }
}

#ACTION {You can't plant any more seeds here.}
{
    #if {$state_greenhouse_harvest_and_sow}
    {
        greenhouse_action_count_plus_one
    }
}

#ACTION {You cast cats grace on yourself}
{
    try_to_restart
}


#ACTION {You chop down}
{
    chop
}

#ACTION {You don't have that.}
{
    #variable state_greenhouse_harvest_and_sow {0}
}

#ACTION {You finish harvesting the}
{
    harvest
}

#ACTION {You finish planting the {.*?}.}
{
    plant %1
}

#ACTION {You gather your party and prepare for battle!}
{
    #variable {farm_mine_ready_for_move} {0}
}

#ACTION {You learn the {.*?} recipe.}
{
    read recipe
}

#ACTION {You loot }
{
    loot
}

#ACTION {You say, 'restart farm mine'$}
{
    #map destroy world;
    #variable {state_farm_mine_restart} {1};
    enter
}

#ACTION {You say, 'start autokill'}
{
    #variable state_autokill_enabled {1};
    #variable {autokill_is_walking} {0};
    config autobattle on;
    restart_autokill
}

#ACTION {You say, 'start farm mine'$}
{
    #map create;
    #map goto 1;
    #variable {state_farm_mine} {1};
    #variable {mine_farm_is_entrance_set} {0};
    look
}

#ACTION {You say, 'start greenhouse {.*?}'$}
{
    #variable greenhouse_sowing {%1};
    #variable state_greenhouse_harvest_and_sow {1};
    #variable greenhouse_action_count {0};
    greenhouse_action_count_plus_one
}

#ACTION {You say, 'stop autokill'}
{
    #variable state_autokill_enabled {0};
    #variable {autokill_is_walking} {0}
}

#ACTION {You say, 'stop farm mine'$}
{
    #variable {state_farm_mine} {0};
    #map destroy world
}

#ACTION {You say, 'stop greenhouse'$}
{
    #variable state_greenhouse_harvest_and_sow {0}
}

#ACTION {You say, 'there is more than three items so will not pick anything up.'}
{
    dump_items_and_go_to_obelisk_count_plus_one
}

#ACTION {You stop walking}
{
    restart_autokill 
}

#ACTION {Your action was interrupted}
{
    try_to_restart
}

#ACTION {^@1 }
{
    #if {$state_autokill_enabled && !$autokill_is_walking}
    {
        #send walk @1;
        #variable {autokill_is_walking} {1}
    }
}

#ACTION {arrives from the}
{
    #variable {farm_mine_ready_for_move} {0}
}

#ACTION {autobattle turned off}
{
    #variable state_autokill_enabled {0};
    #variable {autokill_is_walking} {0}
}

#ACTION {{\d+}, {\d+} {\d+}/{\d+}hp {\d+}en {\d+}st {\d+}food {\d+}{(.\d+)?}/{\d+} {\d+}/{\d+}}
{
    #variable {coordinate_x} {%1};
    #variable {coordinate_y} {%2};
    #variable {current_life} {%3};
    #variable {max_life}{%4};
    #math {wounded} {$max_life-$current_life>$max_life/5};
    #variable {current_energy} {%5};
    #variable {current_stamina} {%6};
    #variable {current_food} {%7};
    #variable {current_weight} {%8};
    #variable {max_weight} {%10};
    #variable {current_inv_slots} {%11};
    #variable {max_inv_slots} {%12};
    calculate_current_coordinate_padded;
    calculate_farm_mine_map
}


#ALIAS {calculate_current_coordinate_padded}
{
    #math {current_coordinate_padded} {$coordinate_x*1000 + $coordinate_y}
}

#ALIAS {calculate_farm_mine_map}
{
    #if {$state_farm_mine && ($coordinate_x != 0 || $coordinate_y != 0) && $farm_mine_ready_for_move}
    {
        #map get roomvnum {current_room_vnum} $current_coordinate_padded;
        #map get roomvnum {current_expected_room_vnum};
        #if {$current_room_vnum == 0 && $current_expected_room_vnum < 1000}
        {
            #map vnum $current_coordinate_padded;
            #map get roomvnum {current_room_vnum} $current_coordinate_padded;
            #map get roomvnum {current_expected_room_vnum}
        };
        #if {!$mine_farm_is_entrance_set}
        {
            #variable {farm_mine_entrance} {$current_coordinate_padded};
            #variable {mine_farm_is_entrance_set} {1}
        };
        #if {$current_expected_room_vnum != $current_room_vnum}
        {
            #map roomflag block on;
            #map goto $current_room_vnum
        };
        #variable {farm_mine_ready_for_move} {0};
        farm_mine_next_move
    }
}

#ALIAS {dump_items_and_go_to_obelisk_count_plus_one}
{
    #if {$state_dump_items_and_go_to_obelisk}
    {
        #send ${dump_items_and_go_to_obelisk_path[${dump_items_and_go_to_obelisk_path_count}]};
        #math {dump_items_and_go_to_obelisk_path_count} {$dump_items_and_go_to_obelisk_path_count + 1};
        #if {${dump_items_and_go_to_obelisk_path_count} >= ${dump_items_and_go_to_obelisk_path_max_count}}
        {
            #variable state_dump_items_and_go_to_obelisk {0}
        }
    }
}

#ALIAS {farm_mine_next_move}
{
    #if {$state_farm_mine_restart}
    {
        enter;
        #variable {state_farm_mine_restart} {0};
        #map create;
        #map goto 1;
        #variable {state_farm_mine} {1};
        #variable {mine_farm_is_entrance_set} {0};
        look
    };
    #else
    {
        #map get roomexits current_known_room_exits;
        #variable {next_unknown_direction} {0};
        #foreach {n;ne;e;se;s;sw;w;nw} {next_direction}
        {
            #if {$current_known_room_exits[$next_direction] > 0}
            {
                
            };
            #else
            {
                #variable {next_unknown_direction} {$next_direction};
                #break
            }
        };
        #if {$next_unknown_direction == 0}
        {
            #list {farm_mine_rooms_unexplored_exits} {filter} {{.*}} {$current_coordinate_padded};
            #list {farm_mine_rooms_unexplored_exits} {numerate};
            #list {farm_mine_rooms_unexplored_exits} {size} {farm_mine_rooms_index_of_last_unexplored_room};
            #if {$farm_mine_rooms_index_of_last_unexplored_room > 0}
            {
                #list {farm_mine_rooms_unexplored_exits} {get} {$farm_mine_rooms_index_of_last_unexplored_room} {farm_mine_rooms_last_unexplored_room};
                #map find $farm_mine_rooms_last_unexplored_room
            };
            #else
            {
                #map find $farm_mine_entrance
            };
            #path walk
        };
        #else
        {
            #list farm_mine_rooms_unexplored_exits add $current_coordinate_padded;
            $next_unknown_direction
        }
    }
}

#ALIAS {greenhouse_action_count_plus_one}
{
    #send ${greenhouse_path[${greenhouse_action_count}]};
    #math {greenhouse_action_count} {$greenhouse_action_count + 1};
    #if {${greenhouse_action_count} >= ${greenhouse_action_count_max}}
    {
        #showme {Done with planting loop greenhouse};
        #variable state_greenhouse_harvest_and_sow {0}
    }
}

#ALIAS {if_autokill_then_walk_second_target}
{
    #if {$state_autokill_enabled && !$autokill_is_walking}
    {
        #showme {went for second target};
        #variable {autokill_is_walking} {1};
        #send walk @2
    }
}

#ACTION {You need basic crafting at level} {if_autokill_then_walk_second_target}

#ALIAS {restart_autokill}
{
    #if {$state_autokill_enabled}
    {
        #variable {autokill_is_walking} {0};
        #showme {restarded autokill};
        #if {$wounded || $current_stamina < 80}
        {
            prospect
        };
        #else
        {
            scan
        }
    }
}

#ALIAS {start_dump_items_and_go_to_obelisk_path}
{
    #variable greenhouse_sowing {%1};
    #variable state_dump_items_and_go_to_obelisk {1};
    #variable dump_items_and_go_to_obelisk_path_count {0};
    dump_items_and_go_to_obelisk_count_plus_one
}

#ALIAS {try_to_restart}
{
    #if {$state_autokill_enabled}
    {
        restart_autokill;
    };
}


#CONFIG {AUTO TAB} {5000}
#CONFIG {BUFFER SIZE} {10000}
#CONFIG {CHARSET} {UTF-8}
#CONFIG {COLOR MODE} {TRUE}
#CONFIG {COLOR PATCH} {OFF}
#CONFIG {COMMAND COLOR} {\e[0;37m}
#CONFIG {COMMAND ECHO} {ON}
#CONFIG {COMPACT} {OFF}
#CONFIG {CONNECT RETRY} {0.0}
#CONFIG {HISTORY SIZE} {1000}
#CONFIG {LOG MODE} {RAW}
#CONFIG {MOUSE} {OFF}
#CONFIG {PACKET PATCH} {AUTO OFF}
#CONFIG {RANDOM SEED} {3000382588}
#CONFIG {REPEAT CHAR} {!}
#CONFIG {REPEAT ENTER} {OFF}
#CONFIG {SCREEN READER} {OFF}
#CONFIG {SCROLL LOCK} {ON}
#CONFIG {SPEEDWALK} {OFF}
#CONFIG {TAB WIDTH} {8}
#CONFIG {TELNET} {ON}
#CONFIG {TINTIN CHAR} {#}
#CONFIG {VERBATIM} {OFF}
#CONFIG {VERBATIM CHAR} {\}
#CONFIG {VERBOSE} {OFF}
#CONFIG {WORDWRAP} {ON}

#PATHDIR {d} {u} {32}
#PATHDIR {e} {w} {2}
#PATHDIR {n} {s} {1}
#PATHDIR {ne} {sw} {3}
#PATHDIR {nw} {se} {9}
#PATHDIR {s} {n} {4}
#PATHDIR {se} {nw} {6}
#PATHDIR {sw} {ne} {12}
#PATHDIR {u} {d} {16}
#PATHDIR {w} {e} {8}

#VARIABLE {content_of_equip}
{
    {1} {Items: [0mL[1;37m1 [1;36mworkbench[0m[0m, [0mL[1;37m1 [1;36manvil[0m [0mand [0mL[1;37m1 [1;36msmelter[0m are on the ground.}
}
#VARIABLE {coordinate_x} {25}
#VARIABLE {coordinate_y} {27}
#VARIABLE {current_coordinate_padded} {25027}
#VARIABLE {current_energy} {190}
#VARIABLE {current_food} {107}
#VARIABLE {current_inv_slots} {1275}
#VARIABLE {current_life} {441}
#VARIABLE {current_stamina} {225}
#VARIABLE {current_weight} {483}
#VARIABLE {dump_items_and_go_to_obelisk_path}
{
    {0} {travel 4}
    {1} {n}
    {2} {drop all}
    {3} {travel 9}
    {4} {say start autokill}
}
#VARIABLE {dump_items_and_go_to_obelisk_path_max_count} {5}
#VARIABLE {greenhouse_action_count_max} {13}
#VARIABLE {greenhouse_path}
{
    {0} {ne}
    {1} {ne}
    {2} {s}
    {3} {e}
    {4} {se}
    {5} {w}
    {6} {w}
    {7} {se}
    {8} {w}
    {9} {s}
    {10} {nw}
    {11} {n}
    {12} {w}
}
#VARIABLE {is_enemy_present} {0}
#VARIABLE {location_of_end_equip} {6}
#VARIABLE {location_of_room} {5}
#VARIABLE {location_of_start_equip} {6}
#VARIABLE {max_inv_slots} {135}
#VARIABLE {max_life} {441}
#VARIABLE {max_weight} {.85}
#VARIABLE {state_autokill_enabled} {0}
#VARIABLE {state_farm_mine} {0}
#VARIABLE {state_farm_mine_restart} {0}
#VARIABLE {state_greenhouse_harvest_and_sow} {0}
#VARIABLE {wounded} {0}
#VARIABLE {state_should_repair_tools} {0}
#VARIABLE {state_autorepair} {0}

#READ {pr_login.tin}
#split

#ACTION {has been fully repaired} {repair; #VAR {state_autorepair} {1};}
#ACTION {You don't see that here.} {#IF {$state_autorepair} {#VAR {state_autorepair} {0}; look;}}
#ACTION {Done with planting loop greenhouse} {say start greenhouse $greenhouse_sowing}

#ACTION {You say, 'start autocraft {.*?}'}
{
    #variable autocraft_item {%1};
    #variable state_autocraft {1};
    #send {craft $autocraft_item};
}
#ACTION {You say, 'stop autocraft'}
{
    #variable state_autocraft {0};
}
#ACTION {You craft }
{
    #if {$state_autocraft}
    {
        #send {craft $autocraft_item};
    }
}

#ACTION {You say, 'start autofish'}
{
    #variable state_autofish {1};
    #send {fish cast};
}
#ACTION {You say, 'stop autofish'}
{
    #variable state_autofish {0};
}
#ACTION {The fish got away!}
{
    #if {$state_autofish}
    {
        fish cast
    }
}

#ACTION {The line broke!}
{
    #if {$state_autofish}
    {
        fish cast
    }
}
#ACTION {You catch a }
{
    #if {$state_autofish}
    {
        fish cast
    }
}
